{"instance_id": "Choser_CVE-2016-10504", "hits": [{"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaEncoder.java", "score": 914.5789184570312}, {"docid": "src/bin/jpip/opj_viewer/src/PnmImage.java", "score": 561.903076171875}, {"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaDecoder.java", "score": 459.9679870605469}, {"docid": "src/bin/jpip/opj_viewer/src/ImageViewer.java", "score": 418.4393005371094}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageViewer.java", "score": 418.4393005371094}, {"docid": "src/bin/jpip/opj_viewer/src/ImgdecClient.java", "score": 371.9053039550781}, {"docid": "src/bin/jpip/opj_viewer/src/JPIPHttpClient.java", "score": 344.25189208984375}, {"docid": "src/bin/jpip/opj_viewer/src/MML.java", "score": 323.66558837890625}, {"docid": "src/bin/jpip/opj_viewer/src/RegimViewer.java", "score": 281.2066955566406}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/JP2XMLparser.java", "score": 213.8126983642578}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageWindow.java", "score": 201.55929565429688}, {"docid": "src/bin/jpip/opj_viewer/src/ImageWindow.java", "score": 201.5570068359375}, {"docid": "src/bin/jpip/opj_viewer/src/ImageManager.java", "score": 179.8240966796875}, {"docid": "src/bin/wx/OPJViewer/about/about.htm", "score": 163.00819396972656}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/OptionPanel.java", "score": 89.86389923095703}, {"docid": "src/bin/jpip/opj_viewer/src/ResizeListener.java", "score": 48.21889877319336}, {"docid": "appveyor.yml", "score": 24.44300079345703}, {"docid": "tools/abi-tracker/openjpeg.json", "score": 17.464799880981445}], "function_summary": "This code snippet is from a function that allocates data memory for an encoding code block in the OpenJPEG library (a JPEG 2000 implementation).\n\n**Main functionality:**\n\n1. **Calculates required data size**: Computes the memory needed based on the code block's dimensions (width \u00d7 height) multiplied by the size of a 32-bit unsigned integer (`OPJ_UINT32`).\n\n2. **Checks if reallocation is needed**: Compares the calculated size (`l_data_size`) against the currently allocated size (`p_code_block->data_size`) to determine if more memory is required.\n\n**Key operations:**\n- Uses the code block's coordinate bounds (`x0`, `y0`, `x1`, `y1`) to calculate width and height\n- Multiplies by `sizeof(OPJ_UINT32)` to get the total bytes needed\n- The comparison at line 1188 triggers memory reallocation if the current allocation is insufficient\n\nThis is part of the tile coding/decoding (TCD) module's memory management system, specifically handling the dynamic allocation of buffer space for code blocks during JPEG 2000 encoding. The function ensures that each code block has adequate memory allocated before encoding operations begin."}
{"instance_id": "Choser_CVE-2016-7445", "hits": [{"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaEncoder.java", "score": 1606.96337890625}, {"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaDecoder.java", "score": 1287.6917724609375}, {"docid": "src/bin/jpip/opj_viewer/src/PnmImage.java", "score": 1223.7117919921875}, {"docid": "src/bin/jpip/opj_viewer/src/ImgdecClient.java", "score": 1042.3389892578125}, {"docid": "src/bin/jpip/opj_viewer/src/ImageViewer.java", "score": 883.4006958007812}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageViewer.java", "score": 883.4006958007812}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/JP2XMLparser.java", "score": 759.6820068359375}, {"docid": "src/bin/jpip/opj_viewer/src/JPIPHttpClient.java", "score": 696.5059204101562}, {"docid": "tools/abi-tracker/compat_report/2.1_to_current/compat_report.html", "score": 687.825927734375}, {"docid": "src/bin/jpip/opj_viewer/src/RegimViewer.java", "score": 661.2269287109375}, {"docid": "src/bin/jpip/opj_viewer/src/ImageWindow.java", "score": 492.5000915527344}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageWindow.java", "score": 492.5000915527344}, {"docid": "src/bin/jpip/opj_viewer/src/ImageManager.java", "score": 458.7496032714844}, {"docid": "src/bin/wx/OPJViewer/about/about.htm", "score": 417.7933044433594}, {"docid": "src/bin/jpip/opj_viewer/src/MML.java", "score": 287.4919128417969}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/OptionPanel.java", "score": 201.3134002685547}, {"docid": "tools/abi-tracker/openjpeg.json", "score": 93.90190124511719}, {"docid": "appveyor.yml", "score": 67.0824966430664}, {"docid": "src/bin/jpip/opj_viewer/src/ResizeListener.java", "score": 66.03250122070312}], "function_summary": "This code snippet contains utility functions for parsing PNM (Portable aNyMap) image file headers. The main components are:\n\n**Helper Functions:**\n- `skip_white()`: Skips whitespace characters in a string, returning NULL if newline/carriage return is encountered\n- `skip_int()`: Parses an integer from a string, temporarily null-terminating to use `atoi()`\n- `skip_idf()`: Extracts an identifier (alphabetic characters and underscores) from a string\n\n**Main Function:**\n- `read_pnm_header()`: Parses PNM image headers for formats P1-P7\n  - Validates the magic number starts with 'P'\n  - Handles different PNM formats (1-7)\n  - For P7 format: parses structured headers with keywords like WIDTH, HEIGHT, DEPTH, MAXVAL, TUPLTYPE\n  - For other formats: parses width, height, and maxval in sequence\n  - Skips comment lines starting with '#'\n  - Validates constraints (maxval \u2264 65535, positive dimensions)\n  - Sets various flags in the header structure based on tuple type (grayscale, RGB, etc.)\n  - Marks header as valid (`ph->ok = 1`) when all required fields are present\n\nThe code handles both the simpler P1-P6 formats and the more complex P7 format with its keyword-based header structure, providing robust parsing with error checking and validation."}
{"instance_id": "Choser_CVE-2016-9118", "hits": [{"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaEncoder.java", "score": 1612.93408203125}, {"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaDecoder.java", "score": 1278.6494140625}, {"docid": "src/bin/jpip/opj_viewer/src/PnmImage.java", "score": 1235.8668212890625}, {"docid": "src/bin/jpip/opj_viewer/src/ImgdecClient.java", "score": 995.3519287109375}, {"docid": "src/bin/jpip/opj_viewer/src/ImageViewer.java", "score": 897.8690185546875}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageViewer.java", "score": 897.8690185546875}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/JP2XMLparser.java", "score": 781.6329956054688}, {"docid": "src/bin/jpip/opj_viewer/src/JPIPHttpClient.java", "score": 676.84619140625}, {"docid": "src/bin/jpip/opj_viewer/src/RegimViewer.java", "score": 672.61181640625}, {"docid": "src/bin/jpip/opj_viewer/src/ImageWindow.java", "score": 489.5647888183594}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageWindow.java", "score": 489.5647888183594}, {"docid": "src/bin/jpip/opj_viewer/src/ImageManager.java", "score": 443.3028869628906}, {"docid": "src/bin/wx/OPJViewer/about/about.htm", "score": 420.4245910644531}, {"docid": "src/bin/jpip/opj_viewer/src/MML.java", "score": 283.7673034667969}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/OptionPanel.java", "score": 186.90289306640625}, {"docid": "tools/abi-tracker/openjpeg.json", "score": 98.59020233154297}, {"docid": "appveyor.yml", "score": 68.22470092773438}, {"docid": "src/bin/jpip/opj_viewer/src/ResizeListener.java", "score": 58.40370178222656}], "function_summary": "This code snippet determines the number of image components (color channels) based on the PNM (Portable Anymap) image format type. It's part of a larger function that converts PNM images to OpenJPEG format.\n\nThe snippet uses a switch statement to map PNM format codes to the appropriate number of components:\n\n- **Format 1 & 4**: ASCII and raw bitmap formats respectively - these are monochrome/binary images, so they have 1 component\n- **Format 2 & 5**: ASCII and raw greymap formats respectively - these are grayscale images, so they also have 1 component\n\nThe pattern continues for other formats (not shown in this snippet):\n- Formats 3 & 6 would be RGB pixmaps (3 components)\n- Format 7 would be arbitrary PAM format (variable components based on header)\n\nThis component count determination is crucial for proper image processing, as it tells the conversion function how many color channels to expect and allocate memory for. The `numcomps` variable is later used to initialize image component parameters and create the appropriate OpenJPEG image structure with the correct number of color planes."}
{"instance_id": "Choser_CVE-2017-14164", "hits": [{"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaEncoder.java", "score": 1649.24365234375}, {"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaDecoder.java", "score": 845.7462768554688}, {"docid": "src/bin/jpip/opj_viewer/src/ImgdecClient.java", "score": 490.0360107421875}, {"docid": "src/bin/jpip/opj_viewer/src/PnmImage.java", "score": 440.31561279296875}, {"docid": "src/bin/jpip/opj_viewer/src/JPIPHttpClient.java", "score": 437.7225036621094}, {"docid": "src/bin/jpip/opj_viewer/src/ImageViewer.java", "score": 384.0445861816406}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageViewer.java", "score": 384.0445861816406}, {"docid": "src/bin/wx/OPJViewer/about/about.htm", "score": 377.9921875}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/JP2XMLparser.java", "score": 339.53509521484375}, {"docid": "src/bin/jpip/opj_viewer/src/ImageWindow.java", "score": 260.7724914550781}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageWindow.java", "score": 260.7724914550781}, {"docid": "src/bin/jpip/opj_viewer/src/RegimViewer.java", "score": 234.93809509277344}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/OptionPanel.java", "score": 208.61830139160156}, {"docid": "src/bin/jpip/opj_viewer/src/ImageManager.java", "score": 194.14340209960938}, {"docid": "src/bin/jpip/opj_viewer/src/MML.java", "score": 158.656005859375}, {"docid": "src/bin/jpip/opj_viewer/src/ResizeListener.java", "score": 76.88150024414062}, {"docid": "tools/abi-tracker/openjpeg.json", "score": 54.110599517822266}, {"docid": "appveyor.yml", "score": 42.80739974975586}], "function_summary": "This code snippet is a function called `opj_j2k_write_sot` that writes a SOT (Start of Tile-part) marker to a JPEG 2000 codestream. The function is part of the OpenJPEG library's J2K encoder.\n\n**Main functionality:**\n1. **Writes SOT marker header**: Outputs the 2-byte SOT marker identifier (`J2K_MS_SOT`)\n2. **Writes marker length**: Outputs the fixed length value of 10 bytes (`Lsot`)\n3. **Writes tile number**: Outputs the current tile number being processed (`Isot`)\n\n**Key operations:**\n- Uses `opj_write_bytes()` to write binary data to the output buffer\n- Increments the data pointer after each write operation\n- Follows JPEG 2000 standard SOT marker format\n\n**Important details:**\n- The function takes validation parameters but marks the stream and manager as unused\n- Returns the number of bytes written (12) through the `p_data_written` parameter\n- Includes placeholder space for additional SOT fields (Psot, TPsot, TNsot) that are written elsewhere\n- Contains assertions for parameter validation\n- Includes commented code for JPWL (JPEG 2000 Part 11) extensions\n\nThis is a low-level encoding function that formats tile-part headers according to the JPEG 2000 specification."}
{"instance_id": "uuykea_CVE-2020-10251", "hits": [{"docid": "www/architecture.html", "score": 3285.818115234375}, {"docid": "www/magick-core.html", "score": 2018.4166259765625}, {"docid": "www/porting.html", "score": 1985.3819580078125}, {"docid": "www/api/Image++.html", "score": 1859.42333984375}, {"docid": "www/api/constitute.html", "score": 1851.9903564453125}, {"docid": "www/Magick++/Image.html", "score": 1841.0111083984375}, {"docid": "www/Magick++/Image++.html", "score": 1840.995849609375}, {"docid": "www/magick-wand.html", "score": 1798.64697265625}, {"docid": "www/api/image.html", "score": 1757.2015380859375}, {"docid": "www/api/blob.html", "score": 1739.7828369140625}, {"docid": "www/api/cache.html", "score": 1649.7109375}, {"docid": "www/api/magick-image.html", "score": 1614.2103271484375}, {"docid": "www/perl-magick.html", "score": 1582.1490478515625}, {"docid": "www/Magick++/STL.html", "score": 1545.7073974609375}, {"docid": "www/command-line-options.html", "score": 1516.107666015625}, {"docid": "www/api/magick-property.html", "score": 1508.1324462890625}, {"docid": "www/api/cache-view.html", "score": 1504.7872314453125}, {"docid": "www/escape.html", "score": 1475.97607421875}, {"docid": "www/api/list.html", "score": 1459.786376953125}, {"docid": "www/api/module.html", "score": 1458.7060546875}], "function_summary": "This code snippet is from ImageMagick's HEIC (High Efficiency Image Format) coder module. The main functionality includes:\n\n**Reading HEIC Images:**\n- `ReadHEICImage()` - Main function that reads HEIC files using the libheif library\n- `ReadHEICImageByID()` - Reads individual images by their ID from the HEIC container\n- `ReadHEICColorProfile()` - Extracts ICC color profiles from HEIC images\n- `ReadHEICExifProfile()` - Extracts EXIF metadata from HEIC images\n- Supports multi-image HEIC files and handles YCbCr colorspace conversion\n\n**Writing HEIC Images:**\n- `WriteHEICImage()` - Encodes images to HEIC format using libheif\n- Converts RGB images to YCbCr colorspace for encoding\n- Supports quality settings and metadata preservation\n- `WriteProfile()` - Embeds EXIF and XMP metadata into output files\n\n**Format Detection:**\n- `IsHEIC()` - Identifies HEIC files by checking magic bytes (\"ftyp\" followed by \"heic\", \"heix\", or \"mif1\")\n\n**Module Registration:**\n- `RegisterHEICImage()` and `UnregisterHEICImage()` - Register the HEIC format with ImageMagick's coder system\n\nThe code handles both reading and writing operations, metadata preservation, multi-image sequences, and proper memory management while interfacing with the external libheif library for actual HEIC processing."}
{"instance_id": "uuykea_CVE-2019-20162", "hits": [{"docid": "doc/configuration.html", "score": 948.1956787109375}, {"docid": "gui/mpegu-core.js", "score": 732.2073974609375}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/GpacCallback.java", "score": 710.8331298828125}, {"docid": "gui/iphone_wm_gui.js", "score": 669.55908203125}, {"docid": "gui/mpegu-wm.js", "score": 653.3936767578125}, {"docid": "gui/gui_old.js", "score": 592.9044189453125}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/Osmo4.java", "score": 588.2985229492188}, {"docid": "gui/gwlib.js", "score": 577.0881958007812}, {"docid": "gui/extensions/player/player.js", "score": 574.2017211914062}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/Preview.java", "score": 559.9503784179688}, {"docid": "applications/osmo4_android_studio/app/src/main/assets/configuration.xml", "score": 529.1635131835938}, {"docid": "gui/extensions/widget_manager/init.js", "score": 504.0267028808594}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/GPACInstance.java", "score": 451.86590576171875}, {"docid": "gui/webvtt-renderer.js", "score": 420.1242980957031}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/MPEGVSensor.java", "score": 404.5249938964844}, {"docid": "gui/tv_wm_gui.js", "score": 384.39630126953125}, {"docid": "gui/extensions/player/stats.js", "score": 381.3196105957031}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/extra/ConfigFileEditor.java", "score": 360.5758056640625}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/SensorServices.java", "score": 348.4985046386719}, {"docid": "gui/extensions/H2B2VS/h2b2vs.js", "score": 340.9187927246094}], "function_summary": "This code snippet is part of a box parsing function for ISO Media File Format (ISOBMFF) files. It handles the initial parsing of box headers from a bitstream.\n\n**Key functionality:**\n1. **Parameter validation** - Checks for valid bitstream and output parameters, ensures sufficient data is available\n2. **Box header parsing** - Reads the standard 8-byte box header (4-byte size + 4-byte type)\n3. **Special case handling** - Handles legacy QuickTime boxes with small sizes (2-4 bytes) by converting them to VOID boxes\n4. **Zero-size box handling** - For boxes with size 0, treats them as extending to end-of-file if at root level, otherwise skips them\n5. **UUID box processing** - For UUID boxes, reads the additional 16-byte UUID identifier and resolves it to an internal type\n6. **Large box support** - Handles 64-bit extended sizes when the initial size field is 1\n7. **Box creation** - Creates appropriate box objects based on parent context:\n   - Track reference boxes (TREF) \u2192 REFT boxes\n   - Item reference boxes (IREF) \u2192 REFI boxes  \n   - Track group boxes (TRGR) \u2192 TRGT boxes\n   - Group list boxes (GRPL) \u2192 GRPT boxes\n   - Default case uses factory method with resolved type\n\nThe code ensures robust parsing of various box formats while maintaining backward compatibility with legacy file formats."}
{"instance_id": "Choser_CVE-2018-18088", "hits": [{"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaEncoder.java", "score": 1691.376953125}, {"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaDecoder.java", "score": 1349.10205078125}, {"docid": "src/bin/jpip/opj_viewer/src/PnmImage.java", "score": 1289.6683349609375}, {"docid": "src/bin/jpip/opj_viewer/src/ImgdecClient.java", "score": 1043.7158203125}, {"docid": "src/bin/jpip/opj_viewer/src/ImageViewer.java", "score": 948.1478881835938}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageViewer.java", "score": 948.1478881835938}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/JP2XMLparser.java", "score": 810.5584716796875}, {"docid": "src/bin/jpip/opj_viewer/src/JPIPHttpClient.java", "score": 713.5302734375}, {"docid": "src/bin/jpip/opj_viewer/src/RegimViewer.java", "score": 711.7274780273438}, {"docid": "src/bin/jpip/opj_viewer/src/ImageWindow.java", "score": 502.25469970703125}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageWindow.java", "score": 502.25469970703125}, {"docid": "src/bin/jpip/opj_viewer/src/ImageManager.java", "score": 478.0675048828125}, {"docid": "src/bin/wx/OPJViewer/about/about.htm", "score": 423.9460144042969}, {"docid": "src/bin/jpip/opj_viewer/src/MML.java", "score": 295.3735046386719}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/OptionPanel.java", "score": 203.49819946289062}, {"docid": "tools/abi-tracker/openjpeg.json", "score": 94.15080261230469}, {"docid": "appveyor.yml", "score": 64.74099731445312}, {"docid": "src/bin/jpip/opj_viewer/src/ResizeListener.java", "score": 61.744598388671875}], "function_summary": "This code snippet is part of a PNM (Portable Network Graphics) image format output function that handles pixel value adjustment and writing for grayscale or single-component images.\n\n**Key functionality:**\n\n1. **Data preparation**: Gets a pointer to the image component data (`red`) and calculates an adjustment value (`adjustR`) based on whether the component uses signed values\n2. **Signed value adjustment**: If the component is signed (`sgnd` flag), it calculates a bias adjustment of `1 << (prec - 1)` to convert from signed to unsigned representation\n3. **High precision processing**: For components with precision greater than 8 bits (`prec > 8`), it processes each pixel by:\n   - Adding the adjustment value to handle signed/unsigned conversion\n   - The adjusted value `v` is then ready for output (likely as 16-bit data based on the precision check)\n\n**Purpose**: This is part of converting OpenJPEG's internal image representation to PNM format, specifically handling the mathematical transformation needed when component data uses signed integers but the output format expects unsigned values. The adjustment ensures proper value range mapping for different bit depths while preserving image fidelity.\n\nThe snippet represents the setup phase before actual pixel data writing to the output file."}
{"instance_id": "Choser_CVE-2018-5727", "hits": [{"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaEncoder.java", "score": 684.1599731445312}, {"docid": "src/bin/jpip/opj_viewer/src/PnmImage.java", "score": 661.18017578125}, {"docid": "src/bin/jpip/opj_viewer/src/ImageViewer.java", "score": 482.7702941894531}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageViewer.java", "score": 482.7702941894531}, {"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaDecoder.java", "score": 469.79840087890625}, {"docid": "src/bin/jpip/opj_viewer/src/RegimViewer.java", "score": 437.54168701171875}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/JP2XMLparser.java", "score": 432.94580078125}, {"docid": "src/bin/jpip/opj_viewer/src/ImgdecClient.java", "score": 411.168212890625}, {"docid": "src/bin/jpip/opj_viewer/src/JPIPHttpClient.java", "score": 319.2745056152344}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageWindow.java", "score": 219.66709899902344}, {"docid": "src/bin/jpip/opj_viewer/src/ImageWindow.java", "score": 219.6623992919922}, {"docid": "src/bin/jpip/opj_viewer/src/MML.java", "score": 211.27340698242188}, {"docid": "src/bin/jpip/opj_viewer/src/ImageManager.java", "score": 202.06910705566406}, {"docid": "appveyor.yml", "score": 168.99420166015625}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/OptionPanel.java", "score": 88.3511962890625}, {"docid": "src/bin/wx/OPJViewer/about/about.htm", "score": 81.30999755859375}, {"docid": "src/bin/jpip/opj_viewer/src/ResizeListener.java", "score": 64.46859741210938}, {"docid": "tools/abi-tracker/openjpeg.json", "score": 30.064800262451172}], "function_summary": "This code snippet is part of a JPEG2000 encoder's Tier-1 coding process, specifically handling the preparation of codeblock data before encoding. The code performs quantization preprocessing on wavelet coefficient data.\n\nThe functionality branches based on the quantization method type (`tccp->qmfbid`):\n\n1. **For lossless/reversible quantization** (`qmfbid == 1`): The code performs a simple bit-shift operation by multiplying each coefficient by `(1 << T1_NMSEDEC_FRACBITS)`, which scales the values to account for fractional bits used in the encoding process.\n\n2. **For lossy/irreversible quantization** (`qmfbid == 0`): The code applies a more complex fixed-point multiplication using `opj_int_fix_mul_t1()` with a band-specific constant (`bandconst`), which implements the quantization step size scaling.\n\nThe operations iterate through a 2D codeblock of dimensions `cblk_w` \u00d7 `cblk_h`, processing each coefficient in the `tiledp` array. The `tileIndex` is incremented for each coefficient and adjusted by `tileLineAdvance` at the end of each row to account for the tile's stride.\n\nThis preprocessing ensures that the wavelet coefficients are properly scaled according to the JPEG2000 standard before they undergo the arithmetic coding stage of the Tier-1 encoder."}
{"instance_id": "Choser_CVE-2018-5785", "hits": [{"docid": "src/bin/jpip/opj_viewer/src/PnmImage.java", "score": 1018.8001708984375}, {"docid": "src/bin/jpip/opj_viewer/src/ImgdecClient.java", "score": 888.4263916015625}, {"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaDecoder.java", "score": 779.3685913085938}, {"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaEncoder.java", "score": 716.5714721679688}, {"docid": "src/bin/jpip/opj_viewer/src/JPIPHttpClient.java", "score": 570.851318359375}, {"docid": "src/bin/jpip/opj_viewer/src/ImageViewer.java", "score": 564.8909301757812}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageViewer.java", "score": 564.8909301757812}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/JP2XMLparser.java", "score": 383.76739501953125}, {"docid": "src/bin/jpip/opj_viewer/src/RegimViewer.java", "score": 293.26361083984375}, {"docid": "src/bin/wx/OPJViewer/about/about.htm", "score": 291.80029296875}, {"docid": "src/bin/jpip/opj_viewer/src/MML.java", "score": 218.88369750976562}, {"docid": "src/bin/jpip/opj_viewer/src/ImageManager.java", "score": 203.5316925048828}, {"docid": "src/bin/jpip/opj_viewer/src/ImageWindow.java", "score": 162.1562957763672}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageWindow.java", "score": 162.1562957763672}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/OptionPanel.java", "score": 119.3042984008789}, {"docid": "tools/abi-tracker/openjpeg.json", "score": 64.53389739990234}, {"docid": "src/bin/jpip/opj_viewer/src/ResizeListener.java", "score": 48.17110061645508}, {"docid": "appveyor.yml", "score": 32.54209899902344}], "function_summary": "This code snippet is part of a BMP (bitmap) file header parsing function that reads color mask and color space information from a BMP file's info header. \n\nThe snippet performs the following operations:\n\n1. **Reads color channel masks**: It reads 4-byte values for green, blue, and alpha channel bit masks from the input file stream using `getc()`. Each mask is constructed by reading 4 bytes and combining them using bitwise OR operations with appropriate bit shifts to form 32-bit values.\n\n2. **Reads color space information**: For BMP headers with size \u2265 108 bytes (BITMAPV4HEADER), it reads:\n   - Color space type (4 bytes)\n   - Color space endpoints (36 bytes) using `fread()`\n   \n3. **Error handling**: The code includes error checking for the `fread()` operation, printing an error message and returning `OPJ_FALSE` if the read operation fails.\n\nThis is part of the BMP to OpenJPEG image conversion functionality, where these color masks and color space parameters are essential for properly interpreting pixel data in BMP files that use bit masking for color channels (typically 16-bit and 32-bit BMP formats). The masks define which bits in each pixel correspond to specific color channels."}
{"instance_id": "Choser_CVE-2018-6616", "hits": [{"docid": "src/bin/jpip/opj_viewer/src/PnmImage.java", "score": 1016.470703125}, {"docid": "src/bin/jpip/opj_viewer/src/ImgdecClient.java", "score": 889.769287109375}, {"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaDecoder.java", "score": 770.434814453125}, {"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaEncoder.java", "score": 725.447021484375}, {"docid": "src/bin/jpip/opj_viewer/src/JPIPHttpClient.java", "score": 569.57958984375}, {"docid": "src/bin/jpip/opj_viewer/src/ImageViewer.java", "score": 562.22509765625}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageViewer.java", "score": 562.22509765625}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/JP2XMLparser.java", "score": 387.78021240234375}, {"docid": "src/bin/jpip/opj_viewer/src/RegimViewer.java", "score": 291.88079833984375}, {"docid": "src/bin/wx/OPJViewer/about/about.htm", "score": 278.44061279296875}, {"docid": "src/bin/jpip/opj_viewer/src/MML.java", "score": 222.43670654296875}, {"docid": "src/bin/jpip/opj_viewer/src/ImageManager.java", "score": 202.0948944091797}, {"docid": "src/bin/jpip/opj_viewer/src/ImageWindow.java", "score": 160.3675994873047}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageWindow.java", "score": 160.3675994873047}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/OptionPanel.java", "score": 117.29889678955078}, {"docid": "tools/abi-tracker/openjpeg.json", "score": 70.89990234375}, {"docid": "src/bin/jpip/opj_viewer/src/ResizeListener.java", "score": 48.52159881591797}, {"docid": "appveyor.yml", "score": 29.665800094604492}], "function_summary": "This code snippet implements the `bmp_read_rle8_data` function, which decodes RLE8 (Run-Length Encoded 8-bit) compressed BMP image data from a file stream.\n\nThe function reads compressed bitmap data and decompresses it into a pixel buffer. It processes the RLE8 format through a state machine that handles different command codes:\n\n- **Encoded runs**: When a non-zero count is read, it's followed by a color value that gets repeated for the specified count\n- **Escape sequences** (when count is 0):\n  - `0x00`: End of line - moves to the next scanline\n  - `0x01`: End of picture - terminates decoding\n  - `0x02`: Delta move - reads dx,dy offsets to reposition the pixel pointer\n  - `0x03-0xFF`: Absolute mode - reads the specified number of literal pixel values, with padding to maintain word alignment\n\nThe function maintains bounds checking to prevent buffer overflows, tracks the current position (x,y coordinates), and handles EOF conditions gracefully. It returns `OPJ_TRUE` on successful decompression or `OPJ_FALSE` on errors.\n\nThis is part of OpenJPEG's BMP format support, specifically handling the RLE8 compression variant commonly used in Windows bitmap files."}
{"instance_id": "Choser_CVE-2020-24829", "hits": [{"docid": "doc/configuration.html", "score": 3314.751708984375}, {"docid": "applications/osmo4_android_studio/app/src/main/assets/configuration.xml", "score": 1992.6864013671875}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/GpacCallback.java", "score": 1826.3155517578125}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/Osmo4.java", "score": 1613.2911376953125}, {"docid": "gui/iphone_wm_gui.js", "score": 1491.43603515625}, {"docid": "gui/extensions/player/player.js", "score": 1485.5621337890625}, {"docid": "gui/mpegu-core.js", "score": 1359.662841796875}, {"docid": "gui/mpegu-wm.js", "score": 1300.4014892578125}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/GPACInstance.java", "score": 1151.4696044921875}, {"docid": "gui/gui_old.js", "score": 1139.700439453125}, {"docid": "gui/extensions/widget_manager/init.js", "score": 1013.3353881835938}, {"docid": "gui/extensions/player/stats.js", "score": 1001.2332763671875}, {"docid": "applications/osmo4_android_studio/app/src/main/res/values/strings.xml", "score": 988.1868286132812}, {"docid": "gui/webvtt-renderer.js", "score": 972.4108276367188}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/GpacConfig.java", "score": 968.0313110351562}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/Preview.java", "score": 893.0194702148438}, {"docid": "applications/mp4box_android/src/com/enst/mp4box/mp4box.java", "score": 826.6796264648438}, {"docid": "gui/gwlib.js", "score": 803.9468994140625}, {"docid": "gui/tv_wm_gui.js", "score": 659.969970703125}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/SensorServices.java", "score": 638.3272705078125}], "function_summary": "This code snippet configures a DASH (Dynamic Adaptive Streaming over HTTP) segmenter for creating adaptive streaming content. It performs the following key operations:\n\n1. **Error Handling**: Checks if the dasher object was successfully created, and if not, returns an error code.\n\n2. **Basic Configuration**: Sets up DASH metadata including title, copyright, description, and source information using `gf_dasher_set_info()`.\n\n3. **URL and Timeline Setup**: \n   - Adds base URLs for the manifest\n   - Handles segment timeline configuration, automatically enabling URL templates when segment timeline is used\n   - Configures URL templates, segment extensions, and naming\n\n4. **DASH Parameters**: Configures multiple DASH-specific settings through a series of conditional function calls:\n   - Segment and fragment durations\n   - RAP (Random Access Point) splitting options\n   - Single segment/file modes\n   - Bitstream switching modes\n   - SIDX (Segment Index) boxes configuration\n   - Dynamic mode settings (live streaming)\n   - Buffer management and timing offsets\n\n5. **Input Processing**: Adds all input files to the dasher for processing.\n\n6. **Error Management**: Each configuration step checks for errors and stops processing if any configuration fails.\n\nThe code uses a pattern of conditional error checking (`if (!e)`) to ensure each step completes successfully before proceeding to the next configuration step."}
{"instance_id": "Choser_CVE-2020-27814", "hits": [{"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaEncoder.java", "score": 1149.0003662109375}, {"docid": "src/bin/jpip/opj_viewer/src/PnmImage.java", "score": 643.1478881835938}, {"docid": "wrapping/java/openjp2/java-sources/org/openJpeg/OpenJPEGJavaDecoder.java", "score": 577.9030151367188}, {"docid": "src/bin/jpip/opj_viewer/src/ImageViewer.java", "score": 514.7595825195312}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageViewer.java", "score": 514.7595825195312}, {"docid": "src/bin/jpip/opj_viewer/src/ImgdecClient.java", "score": 472.9845886230469}, {"docid": "src/bin/jpip/opj_viewer/src/JPIPHttpClient.java", "score": 426.408203125}, {"docid": "src/bin/jpip/opj_viewer/src/MML.java", "score": 362.88848876953125}, {"docid": "src/bin/jpip/opj_viewer/src/RegimViewer.java", "score": 332.9248046875}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/JP2XMLparser.java", "score": 272.48919677734375}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/ImageWindow.java", "score": 241.08059692382812}, {"docid": "src/bin/jpip/opj_viewer/src/ImageWindow.java", "score": 241.0760040283203}, {"docid": "src/bin/jpip/opj_viewer/src/ImageManager.java", "score": 239.7991943359375}, {"docid": "src/bin/wx/OPJViewer/about/about.htm", "score": 221.64480590820312}, {"docid": "src/bin/jpip/opj_viewer_xerces/src/OptionPanel.java", "score": 125.32730102539062}, {"docid": "src/bin/jpip/opj_viewer/src/ResizeListener.java", "score": 59.702598571777344}, {"docid": "appveyor.yml", "score": 44.315101623535156}, {"docid": "tools/abi-tracker/openjpeg.json", "score": 38.0}], "function_summary": "This code snippet is from the `opj_tcd_code_block_enc_allocate_data` function in OpenJPEG's tile component decoder (TCD) module. The main functionality is to allocate data memory for an encoding code block.\n\n**Key operations:**\n\n1. **Size calculation**: Calculates the required data size for a code block by computing its dimensions `(x1-x0) * (y1-y0)`, multiplying by `sizeof(OPJ_UINT32)`, and adding a safety margin of 2 bytes. The comments reference GitHub issues indicating this extra padding is needed to prevent buffer overflows.\n\n2. **Memory allocation decision**: Checks if the calculated size exceeds the currently allocated buffer size (`p_code_block->data_size`). \n\n3. **Conditional reallocation**: If more memory is needed, the function will proceed to free the existing buffer and allocate a new one with the required size.\n\nThe snippet includes a TODO comment questioning whether there's a theoretical upper bound for compressed code block size, suggesting this is part of a dynamic memory management system that grows buffers as needed. This is typical in JPEG 2000 encoding where code block sizes can vary significantly depending on image content and compression parameters."}
{"instance_id": "Choser_CVE-2021-29279", "hits": [{"docid": "share/deprecated/mpegu-core.js", "score": 1165.9434814453125}, {"docid": "share/python/libgpac.py", "score": 1052.069580078125}, {"docid": "share/vis/Code/TimelineRow.js", "score": 754.1119995117188}, {"docid": "share/scripts/jsf/avgen/init.js", "score": 679.7733764648438}, {"docid": "share/scripts/vout.js", "score": 598.7183837890625}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/GpacCallback.java", "score": 383.70941162109375}, {"docid": "share/gui/extensions/player/player.js", "score": 381.49530029296875}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/Osmo4.java", "score": 360.1886901855469}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/Preview.java", "score": 343.180908203125}, {"docid": "applications/osmo4_android_studio/app/src/main/assets/configuration.xml", "score": 339.55169677734375}, {"docid": "share/gui/gwlib.js", "score": 322.66900634765625}, {"docid": "share/deprecated/iphone_wm_gui.js", "score": 320.6736145019531}, {"docid": "share/deprecated/mpegu-wm.js", "score": 316.5860900878906}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/MPEGVSensor.java", "score": 308.2080078125}, {"docid": "share/scripts/ttml-renderer.js", "score": 283.08538818359375}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/SensorServices.java", "score": 280.3960876464844}, {"docid": "share/gui/extensions/player/stats.js", "score": 248.81590270996094}, {"docid": "share/gui/extensions/widget_manager/init.js", "score": 244.81590270996094}, {"docid": "share/deprecated/tv_wm_gui.js", "score": 244.23410034179688}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/GPACInstance.java", "score": 235.50230407714844}], "function_summary": "This code snippet is part of the main packet processing function (`flac_dmx_process`) in a FLAC reframer filter. The functionality includes:\n\n**Main Operations:**\n1. **Duration parsing** - Continuously reparses file duration if not yet determined\n2. **Packet retrieval** - Gets input packets from the filter pipeline, handling end-of-stream conditions\n3. **Buffer management** - Accumulates incoming packet data into an internal FLAC buffer, reallocating as needed\n4. **Byte offset tracking** - Maintains position tracking for seeking operations\n5. **Frame synchronization** - Searches for FLAC frame headers (0xFF sync patterns) in the buffered data\n\n**Key Logic:**\n- **Initialization handling** - On first run, parses the FLAC file header and metadata blocks to extract audio properties (sample rate, channels, bit depth, duration)\n- **Frame validation** - Verifies frame synchronization markers and drops invalid data\n- **Resume capability** - Supports resuming from specific buffer positions during seeking\n- **Stream configuration** - Sets up output PID properties based on parsed FLAC metadata\n\nThe code efficiently handles streaming FLAC data by buffering incomplete frames until enough data is available for proper parsing and frame boundary detection. It's designed to work with both file-based and streaming inputs while maintaining synchronization and proper timing information."}
{"instance_id": "Choser_CVE-2023-0770", "hits": [{"docid": "applications/deprecated/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/GpacCallback.java", "score": 1768.84619140625}, {"docid": "share/python/libgpac/libgpac.py", "score": 1543.9200439453125}, {"docid": "share/scripts/jsf/avmix/init.js", "score": 1472.837890625}, {"docid": "share/scripts/jsf/avmix/help.js", "score": 1314.166259765625}, {"docid": "applications/deprecated/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/Osmo4.java", "score": 1267.76171875}, {"docid": "share/deprecated/iphone_wm_gui.js", "score": 1154.1092529296875}, {"docid": "applications/gpac_android/src/main/java/io/gpac/gpac/GPAC.java", "score": 1135.1326904296875}, {"docid": "share/deprecated/mpegu-core.js", "score": 1000.4058837890625}, {"docid": "share/scripts/jsf/avmix/scenes/shape.js", "score": 994.3668823242188}, {"docid": "share/vis/extern/BrowserLib/Core/Code/DOM.js", "score": 993.8626708984375}, {"docid": "share/scripts/vout.js", "score": 983.531982421875}, {"docid": "share/gui/extensions/player/player.js", "score": 957.8076782226562}, {"docid": "share/vis/extern/BrowserLib/WindowManager/Code/Grid.js", "score": 936.2139282226562}, {"docid": "share/scripts/jsf/thumbs/init.js", "score": 932.9259033203125}, {"docid": "share/scripts/ttml-renderer.js", "score": 912.8184204101562}, {"docid": "share/vis/Code/TimelineRow.js", "score": 892.049072265625}, {"docid": "share/deprecated/mpegu-wm.js", "score": 889.3250122070312}, {"docid": "share/gui/gwlib.js", "score": 881.076171875}, {"docid": "share/scripts/jsf/avgen/init.js", "score": 873.9852294921875}, {"docid": "applications/deprecated/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/SensorServices.java", "score": 821.40869140625}], "function_summary": "This code snippet is part of a function that determines whether a VRML/X3D proto field represents an SFTime offset field. \n\nThe main functionality checks if a proto field should have its time value offset when the scene graph is cloned. It does this by:\n\n1. **Recursive Proto Check**: If the field is connected (via an IS route) to another proto node, it recursively calls itself to check that proto's field.\n\n2. **Time Field Detection**: If the field is connected to a regular node field, it checks if that field is named \"startTime\" or \"stopTime\" using case-insensitive string comparison.\n\n3. **Return Logic**: Returns `true` (1) if the field is connected to a startTime/stopTime field, indicating it should be time-offset during cloning operations. Returns `false` (0) otherwise.\n\nThis is part of GPAC's scene graph system for handling VRML/X3D proto instantiation. The function ensures that when proto instances are cloned, time-related fields like startTime and stopTime are properly adjusted relative to the current scene time, which is crucial for maintaining correct timing behavior in animated content when proto instances are created dynamically."}
{"instance_id": "Choser_CVE-2023-4754", "hits": [{"docid": "share/python/libgpac/libgpac.py", "score": 3361.661865234375}, {"docid": "share/emscripten/gpac.html", "score": 3223.064208984375}, {"docid": "applications/gpac_android/src/main/java/io/gpac/gpac/GPAC.java", "score": 2882.137451171875}, {"docid": "share/scripts/jsf/avmix/help.js", "score": 2873.255615234375}, {"docid": "share/scripts/jsf/avmix/init.js", "score": 2570.99267578125}, {"docid": "share/gui/gwlib.js", "score": 2273.576904296875}, {"docid": "share/scripts/jsf/uncvg.js", "score": 2115.634521484375}, {"docid": "share/scripts/jsf/avmix/scenes/shape.js", "score": 1894.8056640625}, {"docid": "share/scripts/jsf/avgen/init.js", "score": 1768.3255615234375}, {"docid": "share/deprecated/iphone_wm_gui.js", "score": 1642.9119873046875}, {"docid": "share/deprecated/mpegu-wm.js", "score": 1571.62109375}, {"docid": "share/scripts/jsf/thumbs/init.js", "score": 1509.8858642578125}, {"docid": "share/vis/Code/Remotery.js", "score": 1496.788818359375}, {"docid": "share/scripts/vout.js", "score": 1444.015625}, {"docid": "share/gui/extensions/player/player.js", "score": 1415.852294921875}, {"docid": "share/deprecated/mpegu-core.js", "score": 1338.037353515625}, {"docid": "share/gui/extensions/widget_manager/init.js", "score": 1254.2659912109375}, {"docid": "share/vis/Code/DataViewReader.js", "score": 1238.5850830078125}, {"docid": "applications/gpac_android/src/main/java/io/gpac/gpac/extra/FileChooserFragment.java", "score": 1237.9183349609375}, {"docid": "applications/gpac_android/src/main/java/io/gpac/gpac/SensorServices.java", "score": 1220.8238525390625}], "function_summary": "This code snippet is part of a SWF (Flash) font definition parser that handles two different font format revisions (0 and 1). \n\nFor **revision 0** (older format):\n- Reads the starting file position and a count value\n- Calculates the number of glyphs as count/2\n- Creates an offset table to store glyph positions, reading 16-bit offsets for each glyph\n- Iterates through each glyph, seeking to its position and parsing its shape definition\n\nFor **revision 1** (newer format):\n- Reads various font flags (layout, character encoding, styling)\n- Extracts font metadata including name length and font name characters\n- Reads the total number of glyphs\n- Creates an offset table with either 32-bit or 16-bit offsets depending on the `wide_offset` flag\n\nThe key functionality is building an offset table that maps each glyph to its location in the file, enabling efficient random access to glyph shape data. The code handles memory allocation for the offset table and adapts to different data widths based on font format capabilities. This is essential for SWF font rendering, as it allows the parser to locate and extract individual character shapes from the compressed font data."}
{"instance_id": "Choser_CVE-2023-4756", "hits": [{"docid": "share/emscripten/gpac.html", "score": 4108.8251953125}, {"docid": "share/python/libgpac/libgpac.py", "score": 3324.676513671875}, {"docid": "share/scripts/jsf/avmix/help.js", "score": 3304.086669921875}, {"docid": "share/scripts/jsf/avmix/init.js", "score": 2958.90771484375}, {"docid": "share/scripts/vout.js", "score": 2460.459228515625}, {"docid": "share/gui/extensions/player/player.js", "score": 2406.075927734375}, {"docid": "share/scripts/jsf/uncvg.js", "score": 2292.320068359375}, {"docid": "share/gui/gwlib.js", "score": 2043.8167724609375}, {"docid": "share/scripts/jsf/avmix/scenes/shape.js", "score": 2024.057373046875}, {"docid": "applications/gpac_android/src/main/java/io/gpac/gpac/GPAC.java", "score": 1950.9525146484375}, {"docid": "share/deprecated/mpegu-core.js", "score": 1905.322509765625}, {"docid": "share/deprecated/iphone_wm_gui.js", "score": 1854.0283203125}, {"docid": "share/deprecated/mpegu-wm.js", "score": 1732.857421875}, {"docid": "share/scripts/jsf/avgen/init.js", "score": 1628.392333984375}, {"docid": "share/gui/extensions/H2B2VS/h2b2vs.js", "score": 1530.38330078125}, {"docid": "share/scripts/jsf/thumbs/init.js", "score": 1466.9271240234375}, {"docid": "share/gui/extensions/widget_manager/init.js", "score": 1456.5926513671875}, {"docid": "share/gui/gui.js", "score": 1265.2464599609375}, {"docid": "share/vis/extern/BrowserLib/Core/Code/Convert.js", "score": 1264.76220703125}, {"docid": "share/gui/extensions/player/stats.js", "score": 1242.414306640625}], "function_summary": "This code snippet is from the `gf_bt_check_line` function in a BT (Binary Format for Scenes) parser for the GPAC multimedia framework. The function's main purpose is to skip whitespace characters and handle comment detection in the input stream.\n\n**Key functionality:**\n\n1. **Whitespace skipping**: The function iterates through the current line buffer, advancing the position pointer (`line_pos`) past any whitespace characters (spaces, tabs, newlines, carriage returns).\n\n2. **Comment detection**: After skipping whitespace, it checks for two types of comments:\n   - Single-line comments starting with `#`\n   - C++-style comments starting with `//`\n\n3. **Line truncation**: When a comment is detected, it effectively truncates the line by setting `line_size` to the current position, treating everything after the comment marker as ignored content.\n\n4. **End-of-input handling**: If the parser reaches the end of the current line content (when `line_size == line_pos`), it checks if this is string-based input. If so, and there's no gzipped file input stream (`gz_in`), it marks parsing as complete by setting `parser->done = 1`.\n\nThis function is essential for proper parsing of BT format files by ensuring the parser correctly handles formatting and comments while processing scene description data."}
{"instance_id": "Choser_CVE-2024-0321", "hits": [{"docid": "share/scripts/jsf/avmix/init.js", "score": 4721.583984375}, {"docid": "share/deprecated/mpegu-core.js", "score": 3822.097412109375}, {"docid": "share/python/libgpac/libgpac.py", "score": 2989.377197265625}, {"docid": "share/emscripten/gpac.html", "score": 2684.473388671875}, {"docid": "share/scripts/jsf/uncvg.js", "score": 2639.6796875}, {"docid": "share/scripts/jsf/thumbs/init.js", "score": 2439.024169921875}, {"docid": "share/vis/Code/TimelineRow.js", "score": 2413.577880859375}, {"docid": "share/scripts/ttml-renderer.js", "score": 2352.02197265625}, {"docid": "share/scripts/jsf/avmix/scenes/shape.js", "score": 2334.705078125}, {"docid": "share/scripts/vout.js", "score": 2326.13134765625}, {"docid": "share/scripts/jsf/avgen/init.js", "score": 2272.25341796875}, {"docid": "share/gui/extensions/player/player.js", "score": 2260.656005859375}, {"docid": "share/scripts/jsf/avmix/help.js", "score": 2079.83056640625}, {"docid": "share/gui/gwlib.js", "score": 2068.82763671875}, {"docid": "share/deprecated/mpegu-wm.js", "score": 1940.6727294921875}, {"docid": "share/deprecated/iphone_wm_gui.js", "score": 1924.3179931640625}, {"docid": "applications/gpac_android/src/main/java/io/gpac/gpac/GPAC.java", "score": 1913.7750244140625}, {"docid": "share/scripts/webvtt-renderer.js", "score": 1563.6099853515625}, {"docid": "share/gui/extensions/widget_manager/init.js", "score": 1521.05224609375}, {"docid": "share/vis/extern/BrowserLib/Core/Code/Keyboard.js", "score": 1376.3818359375}], "function_summary": "This code snippet is part of a UTF-8 text line conversion function in the GPAC multimedia framework's text import filter. The main functionality includes:\n\n1. **UTF-8 Conversion Loop**: The code processes characters from an input line (`szLine`) and converts them to proper UTF-8 format, storing the result in `szLineConv`.\n\n2. **Non-UTF8 Character Handling**: It detects non-UTF-8 characters (when `szLine[i] & 0x80` is true) and handles various UTF-8 encoding scenarios:\n   - Single-byte non-UTF8 characters are converted to 2-byte UTF-8 sequences\n   - Existing 2-byte, 3-byte, and 4-byte UTF-8 sequences are preserved\n   - Invalid sequences are skipped\n\n3. **Buffer Management**: The function includes bounds checking to prevent buffer overflow (`j >= GF_ARRAY_LENGTH(szLineConv)`) and logs warnings if lines are too long to convert.\n\n4. **Endianness Handling**: The snippet ends with a big-endian preprocessor check, indicating platform-specific byte order handling for UTF-16 processing.\n\nThe function essentially ensures that text input is properly converted to UTF-8 format while handling various encoding edge cases and maintaining data integrity during the conversion process."}
{"instance_id": "krrrlww_CVE-2019-15903", "hits": [{"docid": "expat/doc/reference.html", "score": 1492.2340087890625}, {"docid": "expat/doc/xmlwf.xml", "score": 239.2292022705078}, {"docid": "appveyor.yml", "score": 115.3949966430664}], "function_summary": "This code snippet contains several key XML parsing processor functions from the Expat XML parser library:\n\n## Main Functions:\n\n1. **`entityValueProcessor`** - Processes entity values in DTD declarations by tokenizing the content and storing it when the end is reached.\n\n2. **`prologProcessor`** - Handles XML prolog parsing by calling `doProlog` with the current encoding and token information.\n\n3. **`doProlog`** - The core DTD and prolog processing function that handles a comprehensive switch statement for different XML roles including:\n   - XML declarations and DOCTYPE declarations\n   - Entity declarations (general and parameter entities)\n   - Attribute list declarations\n   - Element declarations and content models\n   - Notation declarations\n   - Processing instructions and comments\n\n4. **`processInternalEntity`** - Manages internal entity expansion by setting up entity context and recursively calling appropriate processors.\n\n5. **`internalEntityProcessor`** - Continues processing internal entities that were suspended, handling both parameter entities (DTD context) and general entities (content context).\n\nThe code implements a state machine approach where different processors handle different parsing contexts. It manages complex XML features like entity references, DTD validation, namespace processing, and maintains proper parsing state throughout the process. Error handling is integrated throughout with specific XML error codes returned for various parsing failures."}
{"instance_id": "krrrlww_CVE-2024-28757", "hits": [{"docid": "expat/doc/reference.html", "score": 1892.2762451171875}, {"docid": "testdata/largefiles/nes96.xml", "score": 573.477294921875}, {"docid": "expat/doc/xmlwf.xml", "score": 382.875}, {"docid": "expat/xmlwf/xmlwf_helpgen.py", "score": 255.13710021972656}, {"docid": "appveyor.yml", "score": 187.9290008544922}, {"docid": "testdata/largefiles/aaaaaa_attr.xml", "score": 1.5628999471664429}, {"docid": "testdata/largefiles/aaaaaa_text.xml", "score": 0.5320000052452087}], "function_summary": "This code snippet implements a function called `accountingGetCurrentAmplification` that calculates the amplification factor for XML parsing operations in the Expat XML parser library.\n\n**Main functionality:**\n\n1. **Calculates total output bytes** by summing direct bytes (`countBytesDirect`) and indirect bytes (`countBytesIndirect`) from the parser's accounting structure.\n\n2. **Computes amplification factor** as the ratio of total output bytes to direct input bytes:\n   - If there are direct bytes: `amplificationFactor = totalOutput / directBytes`\n   - If no direct bytes: defaults to `1.0f` (no amplification)\n\n3. **Safety check** using an assertion to verify the parser is a root parser (has no parent).\n\n**Purpose:**\nThis function is part of Expat's billion laughs attack protection mechanism. XML entity expansion can cause significant memory amplification where small input can generate massive output through recursive entity references. By tracking the amplification factor (how much the output has grown relative to the direct input), the parser can detect and prevent such attacks by limiting excessive memory usage during XML processing.\n\nThe function returns the current amplification ratio as a float value, which can be used by the parser's security mechanisms to determine if processing should be halted."}
{"instance_id": "krrrlww_CVE-2019-20208", "hits": [{"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/MPEGVSensor.java", "score": 3937.7548828125}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/GpacCallback.java", "score": 2816.764404296875}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/Osmo4.java", "score": 2498.80078125}, {"docid": "gui/extensions/player/player.js", "score": 2191.470703125}, {"docid": "gui/iphone_wm_gui.js", "score": 2132.747314453125}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/GPACInstance.java", "score": 2083.3671875}, {"docid": "gui/gwlib.js", "score": 2014.9912109375}, {"docid": "gui/mpegu-wm.js", "score": 1984.05712890625}, {"docid": "gui/gui_old.js", "score": 1884.166015625}, {"docid": "applications/mp4box_android/src/com/enst/mp4box/mp4box.java", "score": 1829.898193359375}, {"docid": "gui/mpegu-core.js", "score": 1792.279296875}, {"docid": "doc/configuration.html", "score": 1739.283203125}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/GpacConfig.java", "score": 1696.7547607421875}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/Preview.java", "score": 1631.6121826171875}, {"docid": "gui/webvtt-renderer.js", "score": 1599.442626953125}, {"docid": "gui/extensions/player/stats.js", "score": 1575.1795654296875}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/logs/GpacLogger.java", "score": 1568.140869140625}, {"docid": "applications/osmo4_android_studio/app/src/main/assets/configuration.xml", "score": 1328.033447265625}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/SensorServices.java", "score": 1319.496337890625}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/extra/ConfigFileEditor.java", "score": 1193.5186767578125}], "function_summary": "This code snippet is part of a box writing function in the GPAC multimedia framework's ISO media file format implementation. It handles writing optional padding bits and sub-sample information to a bitstream.\n\nThe snippet performs two conditional write operations:\n\n1. **Padding Bits Writing**: If the `PaddingBits` field exists, it writes the padding bits box to the bitstream using `gf_isom_box_write()`. This handles cases where samples need specific bit padding information.\n\n2. **Sub-samples Writing**: If the `sub_samples` array exists, it writes all sub-sample information boxes to the bitstream using `gf_isom_box_array_write()`. Sub-samples represent subdivisions within media samples, commonly used for codecs that organize data hierarchically.\n\nBoth operations follow the same pattern: check for existence of the data structure, attempt to write it to the bitstream, and return any error that occurs during the write process. This is part of a larger sample table box writing function that serializes various optional metadata components for ISO media files (like MP4). The error handling ensures that any write failures are propagated up the call stack for proper error management."}
{"instance_id": "Choser_CVE-2018-9251", "hits": [{"docid": "doc/xml.html", "score": 2511.03076171875}, {"docid": "doc/libxml2-api.xml", "score": 2183.458984375}, {"docid": "doc/news.html", "score": 2060.507568359375}, {"docid": "genChRanges.py", "score": 2038.2691650390625}, {"docid": "gentest.py", "score": 1871.8580322265625}, {"docid": "doc/html/libxml-parser.html", "score": 1480.218505859375}, {"docid": "doc/devhelp/libxml2-parser.html", "score": 1471.308349609375}, {"docid": "doc/devhelp/libxml2-xmlreader.html", "score": 1466.8328857421875}, {"docid": "doc/html/libxml-xmlreader.html", "score": 1448.5606689453125}, {"docid": "doc/html/libxml-encoding.html", "score": 1411.6907958984375}, {"docid": "doc/devhelp/libxml2-encoding.html", "score": 1402.5782470703125}, {"docid": "doc/devhelp/libxml2-valid.html", "score": 1388.435546875}, {"docid": "doc/html/libxml-xmlregexp.html", "score": 1387.3746337890625}, {"docid": "doc/html/libxml-valid.html", "score": 1386.9896240234375}, {"docid": "doc/devhelp/libxml2-xmlregexp.html", "score": 1379.14453125}, {"docid": "doc/html/libxml-tree.html", "score": 1363.690673828125}, {"docid": "doc/devhelp/libxml2-tree.html", "score": 1358.749267578125}, {"docid": "result/valid/REC-xml-19980210.xml", "score": 1316.364501953125}, {"docid": "doc/xmlreader.html", "score": 1310.8050537109375}, {"docid": "doc/apibuild.py", "score": 1309.6029052734375}], "function_summary": "This code snippet is part of the decompression loop in the `xz_decomp` function. It handles the final steps after decompressing data from either LZMA or GZIP streams.\n\n**Key functionality:**\n\n1. **Loop termination**: The `while` loop continues decompressing until either the output buffer is full (`strm->avail_out == 0`) or the stream ends (`ret == LZMA_STREAM_END`).\n\n2. **Output buffer management**: After decompression, it calculates how much new data was produced by subtracting the remaining available output space from the original amount (`had - strm->avail_out`). This value is stored in `state->have`.\n\n3. **Pointer adjustment**: Sets `state->next` to point to the beginning of the newly decompressed data by moving back from the current output position.\n\n4. **CRC calculation**: When GZIP support is enabled, it updates the running CRC32 checksum (`state->zstrm.adler`) with the newly decompressed data to verify data integrity.\n\nThis snippet essentially finalizes each iteration of the decompression process by tracking how much data was produced and maintaining data integrity checks for GZIP streams."}
{"instance_id": "Choser_CVE-2020-23266", "hits": [{"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/MPEGVSensor.java", "score": 4059.261474609375}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/GpacCallback.java", "score": 2851.63427734375}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/Osmo4.java", "score": 2514.365966796875}, {"docid": "gui/extensions/player/player.js", "score": 2231.899658203125}, {"docid": "gui/iphone_wm_gui.js", "score": 2176.133544921875}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/GPACInstance.java", "score": 2120.58056640625}, {"docid": "gui/gwlib.js", "score": 2063.8115234375}, {"docid": "gui/mpegu-wm.js", "score": 2026.2030029296875}, {"docid": "gui/gui_old.js", "score": 1929.8658447265625}, {"docid": "applications/mp4box_android/src/com/enst/mp4box/mp4box.java", "score": 1858.12890625}, {"docid": "gui/mpegu-core.js", "score": 1831.396484375}, {"docid": "doc/configuration.html", "score": 1762.070068359375}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/GpacConfig.java", "score": 1715.2965087890625}, {"docid": "gui/webvtt-renderer.js", "score": 1670.734619140625}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/Preview.java", "score": 1639.2747802734375}, {"docid": "gui/extensions/player/stats.js", "score": 1631.3253173828125}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/logs/GpacLogger.java", "score": 1588.004638671875}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/SensorServices.java", "score": 1339.566162109375}, {"docid": "applications/osmo4_android_studio/app/src/main/assets/configuration.xml", "score": 1318.60302734375}, {"docid": "modules/widgetman/wgt_load_base.js", "score": 1227.469482421875}], "function_summary": "This code snippet contains functions for creating and reading an STBL (Sample Table Box) in the ISO Media File Format. Here's the main functionality:\n\n**stbl_Read() function (lines before the snippet):**\n- Reads and parses a sample table box from a bitstream\n- Uses `gf_isom_box_array_read()` to parse child boxes via the `stbl_AddBox` callback\n- Sets a flag (`no_sync_found`) if no sync sample box is present\n- Stores counts of sample group description boxes and other boxes for later reference\n- Validates that mandatory boxes are present (SampleToChunk, SampleSize, ChunkOffset, TimeToSample)\n- Returns an error if required boxes are missing\n\n**stbl_New() function:**\n- Creates and initializes a new Sample Table Box structure\n- Allocates memory for a `GF_SampleTableBox` with type `GF_ISOM_BOX_TYPE_STBL`\n- Sets default values including `MaxSamplePerChunk = 10` and `groupID = 1`\n- Returns the newly created box structure\n\nThe sample table box is a crucial component in MP4/ISO media files that contains metadata about media samples, including timing, size, location, and synchronization information. This code ensures proper initialization and validation of this critical data structure."}
{"instance_id": "Choser_CVE-2020-23267", "hits": [{"docid": "doc/configuration.html", "score": 1076.7298583984375}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/GpacCallback.java", "score": 875.9636840820312}, {"docid": "gui/webvtt-renderer.js", "score": 568.760986328125}, {"docid": "applications/osmo4_android_studio/app/src/main/assets/configuration.xml", "score": 531.197509765625}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/Osmo4.java", "score": 513.47021484375}, {"docid": "gui/iphone_wm_gui.js", "score": 512.9954833984375}, {"docid": "gui/extensions/player/player.js", "score": 494.26129150390625}, {"docid": "gui/mpegu-wm.js", "score": 463.5172119140625}, {"docid": "gui/extensions/player/stats.js", "score": 443.7572021484375}, {"docid": "gui/mpegu-core.js", "score": 440.3038024902344}, {"docid": "gui/gwlib.js", "score": 434.2059020996094}, {"docid": "gui/gui_old.js", "score": 425.96270751953125}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/Preview.java", "score": 395.1355895996094}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/GPACInstance.java", "score": 349.7633056640625}, {"docid": "gui/extensions/widget_manager/init.js", "score": 329.8951110839844}, {"docid": "gui/tv_wm_gui.js", "score": 288.848388671875}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/SensorServices.java", "score": 267.4693908691406}, {"docid": "gui/extensions/H2B2VS/h2b2vs.js", "score": 257.8005065917969}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/MPEGVSensor.java", "score": 243.49180603027344}, {"docid": "applications/osmo4_android_studio/app/src/main/java/com/gpac/Osmo4/extra/ConfigFileEditor.java", "score": 224.86419677734375}], "function_summary": "This code snippet is part of an AVC/H.264 NALU (Network Abstraction Layer Unit) parsing loop within a media streaming function. \n\nThe snippet extracts the size of individual NALUs from an AVC-encoded video sample. Here's what it does:\n\n1. **Size Extraction**: It reads the NALU size from the bitstream, where `avc_nalu_size` indicates how many bytes are used to encode the size (typically 1, 2, or 4 bytes)\n\n2. **Byte-by-byte Reading**: The `while (v)` loop reads each byte of the size field:\n   - Takes the current byte value `(u8) *ptr`\n   - Combines it with the running `size` value using bitwise OR\n   - Advances the pointer and decrements remaining bytes\n   - Shifts left by 8 bits for multi-byte sizes (except the last byte)\n\n3. **Big-endian Processing**: The size is read in big-endian format, building up the complete NALU size value progressively\n\nThis is a critical part of AVC/H.264 stream processing, as it allows the streamer to identify individual NALU boundaries within the compressed video data, enabling proper packetization for RTP streaming. The extracted size is then used to process each NALU separately for network transmission."}
{"instance_id": "sjtu_CVE-2022-4583", "hits": [{"docid": "src/main/java/org/lemsml/jlems/io/util/JUtil.java", "score": 1867.629150390625}, {"docid": "src/site/src/FileUtil.java", "score": 666.0150756835938}, {"docid": "src/main/java/org/lemsml/jlems/io/util/FileUtil.java", "score": 661.1810302734375}, {"docid": "src/main/java/org/lemsml/jlems/io/reader/JarResourceInclusionReader.java", "score": 454.41241455078125}, {"docid": "src/main/java/org/lemsml/jlems/io/reader/FileInclusionReader.java", "score": 407.5244140625}, {"docid": "src/main/java/org/lemsml/jlems/viz/datadisplay/ControlPanel.java", "score": 370.21160888671875}, {"docid": "src/main/java/org/lemsml/jlems/io/data/FormattedDataUtil.java", "score": 363.060791015625}, {"docid": "src/main/java/org/lemsml/jlems/core/selection/SelectionParser.java", "score": 359.6253967285156}, {"docid": "src/site/src/Navifier.java", "score": 350.7367858886719}, {"docid": "src/main/java/org/lemsml/jlems/io/out/FileResultWriter.java", "score": 336.1871032714844}, {"docid": "src/main/java/org/lemsml/jlems/core/run/PathDerivedVariable.java", "score": 321.9855041503906}, {"docid": "src/main/java/org/lemsml/jlems/core/expression/Parser.java", "score": 311.54681396484375}, {"docid": "src/main/java/org/lemsml/jlems/core/type/ComponentType.java", "score": 307.6545104980469}, {"docid": "src/main/java/org/lemsml/jlems/io/out/FileEventResultWriter.java", "score": 307.4468078613281}, {"docid": "src/main/java/org/lemsml/jlems/core/type/Component.java", "score": 306.8629150390625}, {"docid": "src/main/java/org/lemsml/jlems/viz/plot/Iconizer.java", "score": 298.3240051269531}, {"docid": "src/main/java/org/lemsml/jlems/core/type/PathEvaluator.java", "score": 297.077392578125}, {"docid": "src/main/java/org/lemsml/jlems/core/sim/RunnableAccessor.java", "score": 295.36529541015625}, {"docid": "src/main/java/org/lemsml/jlems/core/sim/AbstractInclusionReader.java", "score": 292.8465881347656}, {"docid": "src/main/java/org/lemsml/jlems/io/reader/LemsModelGenerator.java", "score": 285.6221008300781}], "function_summary": "This code snippet is part of the `unpackJar` method that extracts the contents of a JAR file to a destination directory. \n\nThe functionality includes:\n\n1. **JAR File Processing**: Opens the input JAR file and enumerates through all its entries\n2. **Directory Handling**: For each directory entry, it creates the corresponding directory structure in the output location using `mkdirs()`\n3. **File Extraction**: For regular files, it:\n   - Skips META-INF files (JAR metadata)\n   - Creates necessary parent directories\n   - Opens input/output streams to copy file contents byte-by-byte\n   - Properly closes streams after copying\n4. **Stream Management**: Uses basic byte-by-byte copying with `InputStream.available()` and `read()/write()` operations\n\nThe method systematically recreates the JAR's internal structure in the filesystem, excluding JAR-specific metadata files. It handles both directory creation and file extraction, ensuring the complete unpacking of the JAR archive to the specified output directory. The commented line suggests this operation is logged elsewhere in the application.\n\nNote: The copying mechanism uses a simple but potentially inefficient approach (byte-by-byte without buffering), as indicated by the \"EFF - buffering, file channels??\" comment."}
{"instance_id": "sjtu_CVE-2018-1002201", "hits": [{"docid": "src/main/java/org/zeroturnaround/zip/ZipUtil.java", "score": 9797.525390625}, {"docid": "src/main/java/org/zeroturnaround/zip/Zips.java", "score": 5277.96484375}, {"docid": "src/main/java/org/zeroturnaround/zip/commons/FileUtilsV2_2.java", "score": 3209.017822265625}, {"docid": "src/main/java/org/zeroturnaround/zip/commons/IOUtils.java", "score": 2948.015625}, {"docid": "src/main/java/org/zeroturnaround/zip/ZipEntryUtil.java", "score": 2627.134033203125}, {"docid": "src/main/java/org/zeroturnaround/zip/extra/AsiExtraField.java", "score": 2483.728515625}, {"docid": "src/main/java/org/zeroturnaround/zip/commons/FileUtils.java", "score": 2367.32275390625}, {"docid": "src/main/java/org/zeroturnaround/zip/FileSource.java", "score": 2012.187255859375}, {"docid": "src/main/java/org/zeroturnaround/zip/commons/FilenameUtils.java", "score": 1894.884521484375}, {"docid": "src/main/java/org/zeroturnaround/zip/transform/FileZipEntryTransformer.java", "score": 1826.4283447265625}, {"docid": "src/main/java/org/zeroturnaround/zip/ZipFileUtil.java", "score": 1665.719970703125}, {"docid": "src/main/java/org/zeroturnaround/zip/transform/ByteArrayZipEntryTransformer.java", "score": 1608.344970703125}, {"docid": "src/main/java/org/zeroturnaround/zip/transform/ZipEntrySourceZipEntryTransformer.java", "score": 1555.6588134765625}, {"docid": "src/main/java/org/zeroturnaround/zip/ZipEntrySource.java", "score": 1520.3863525390625}, {"docid": "src/main/java/org/zeroturnaround/zip/extra/UnrecognizedExtraField.java", "score": 1492.130615234375}, {"docid": "src/main/java/org/zeroturnaround/zip/NameMapper.java", "score": 1456.8927001953125}, {"docid": "src/main/java/org/zeroturnaround/zip/extra/ExtraFieldUtils.java", "score": 1424.5947265625}, {"docid": "src/main/java/org/zeroturnaround/zip/transform/StringZipEntryTransformer.java", "score": 1413.2535400390625}, {"docid": "src/main/java/org/zeroturnaround/zip/extra/ZipLong.java", "score": 1407.962158203125}, {"docid": "src/main/java/org/zeroturnaround/zip/ByteSource.java", "score": 1392.1405029296875}], "function_summary": "This code snippet contains two private static classes that implement `ZipEntryCallback` for extracting ZIP entries to a filesystem:\n\n**BackslashUnpacker (lines 1196-1230):**\n- Handles ZIP archives with broken path separators (using backslashes instead of forward slashes)\n- Treats every backslash as a directory separator and assumes all entries are files (no directory entries)\n- Splits entry names on backslashes, creates the directory structure, and extracts the file to the final path\n- Falls back to simple extraction for entries without backslashes\n\n**Unwraper (lines 1238-1273, partial):**\n- Extracts ZIP contents while removing a single root directory from the path structure\n- Validates that all entries share the same root directory; throws `ZipException` if multiple roots are found\n- Uses helper methods `getRootName()` and `getUnrootedName()` to manipulate paths\n- Creates directories or copies files based on entry type, similar to standard extraction but with path transformation\n\nBoth classes use a `NameMapper` for additional path transformations and `FileUtils` for file operations. The BackslashUnpacker specifically addresses compatibility issues with ZIP files created by non-compliant software that uses Windows-style path separators."}
{"instance_id": "sjtu_CVE-2019-3580", "hits": [{"docid": "extensions/wikidata/module/scripts/dialogs/schema-alignment-dialog.js", "score": 8090.29541015625}, {"docid": "extensions/wikidata/module/scripts/previewrenderer.js", "score": 3723.30224609375}, {"docid": "main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js", "score": 2491.2880859375}, {"docid": "main/webapp/modules/core/scripts/dialogs/extend-data-preview-dialog.js", "score": 2216.791015625}, {"docid": "main/webapp/modules/core/externals/suggest/suggest-4_3.js", "score": 2165.861572265625}, {"docid": "main/webapp/modules/core/scripts/views/data-table/data-table-view.js", "score": 2091.23828125}, {"docid": "extensions/wikidata/module/langs/translation-en.json", "score": 2047.8804931640625}, {"docid": "main/webapp/modules/core/externals/jquery-1.11.1.js", "score": 2046.5281982421875}, {"docid": "main/webapp/modules/core/scripts/index/open-project-ui.js", "score": 2025.9365234375}, {"docid": "extensions/wikidata/module/scripts/dialogs/perform-edits-dialog.js", "score": 2009.1005859375}, {"docid": "main/webapp/modules/core/scripts/dialogs/clustering-dialog.js", "score": 1970.387939453125}, {"docid": "main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js", "score": 1944.0947265625}, {"docid": "extensions/wikidata/module/langs/translation-nb_NO.json", "score": 1939.85546875}, {"docid": "main/webapp/modules/core/scripts/views/data-table/cell-ui.js", "score": 1928.9853515625}, {"docid": "main/webapp/modules/core/scripts/facets/list-facet.js", "score": 1927.614013671875}, {"docid": "main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.min.js", "score": 1922.8785400390625}, {"docid": "main/webapp/modules/core/scripts/reconciliation/standard-service-panel.js", "score": 1920.6668701171875}, {"docid": "main/webapp/modules/core/scripts/dialogs/custom-tabular-exporter-dialog.js", "score": 1899.4095458984375}, {"docid": "main/webapp/modules/core/scripts/views/data-table/menu-reconcile.js", "score": 1855.985107421875}, {"docid": "main/webapp/modules/core/scripts/facets/timerange-facet.js", "score": 1841.4688720703125}], "function_summary": "This code snippet implements the `getJSON` method for the `SchemaAlignmentDialog` object. The method's primary function is to serialize the current schema alignment configuration into a JSON format.\n\n**Key functionality:**\n\n1. **Data Collection**: It creates an empty array and iterates through all DOM elements with the class `.wbs-item` within the `#schema-alignment-statements-container`\n\n2. **Item Serialization**: For each item found, it calls `SchemaAlignmentDialog._itemToJSON()` to convert the DOM element and its associated data into a JSON representation, then adds it to the list\n\n3. **Schema Structure**: Returns a structured JSON object containing:\n   - `itemDocuments`: An array of all serialized items from the schema alignment interface\n   - `wikibasePrefix`: The Wikibase prefix URL (stored in `this._wikibasePrefix`)\n\nThis method essentially captures the current state of the schema alignment dialog - all the items, properties, statements, qualifiers, and references that have been configured by the user - and converts it into a portable JSON format that can be saved, transmitted, or processed by other parts of the system. It serves as the primary data extraction mechanism for persisting the schema configuration."}
{"instance_id": "sjtu_CVE-2018-1000850", "hits": [{"docid": "retrofit/src/main/java/retrofit2/RequestBuilder.java", "score": 1203.78955078125}, {"docid": "retrofit/src/main/java/retrofit2/RequestFactory.java", "score": 523.8591918945312}, {"docid": "retrofit/src/main/java/retrofit2/Retrofit.java", "score": 413.20941162109375}, {"docid": "retrofit/src/main/java/retrofit2/ParameterHandler.java", "score": 377.8753967285156}, {"docid": "website/index.html", "score": 328.59051513671875}, {"docid": "retrofit/src/main/java/retrofit2/OkHttpCall.java", "score": 280.24798583984375}, {"docid": "retrofit/src/main/java/retrofit2/Utils.java", "score": 277.8583984375}, {"docid": "samples/src/main/java/com/example/retrofit/ChunkingConverter.java", "score": 265.01959228515625}, {"docid": "retrofit-mock/src/main/java/retrofit2/mock/NetworkBehavior.java", "score": 224.02969360351562}, {"docid": "website/static/prettify.js", "score": 217.1157989501953}, {"docid": "retrofit/src/main/java/retrofit2/Response.java", "score": 214.89320373535156}, {"docid": "retrofit-mock/src/main/java/retrofit2/mock/Calls.java", "score": 205.46730041503906}, {"docid": "retrofit/src/main/java/retrofit2/http/Path.java", "score": 201.59030151367188}, {"docid": "retrofit-adapters/rxjava2/src/main/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactory.java", "score": 200.85240173339844}, {"docid": "retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/RxJavaCallAdapterFactory.java", "score": 197.3040008544922}, {"docid": "samples/src/main/java/com/example/retrofit/AnnotatedConverters.java", "score": 192.9438934326172}, {"docid": "retrofit/src/main/java/retrofit2/http/Query.java", "score": 191.8907928466797}, {"docid": "retrofit/src/main/java/retrofit2/Converter.java", "score": 191.15660095214844}, {"docid": "retrofit-converters/moshi/src/main/java/retrofit2/converter/moshi/MoshiConverterFactory.java", "score": 186.88189697265625}, {"docid": "retrofit/src/main/java/retrofit2/http/HTTP.java", "score": 186.26170349121094}], "function_summary": "This code snippet is part of the `addPathParam` method in Retrofit's `RequestBuilder` class. Its main functionality is to perform **path parameter substitution** in URL templates.\n\n**Key operations:**\n\n1. **Validation check**: First, it verifies that `relativeUrl` is not null. If it is null (which happens when query parameters have already been processed), it throws an `AssertionError` since path parameters must be set before query parameters.\n\n2. **Parameter substitution**: It replaces placeholder tokens in the URL template (formatted as `{paramName}`) with actual values. For example, `/users/{id}/posts` becomes `/users/123/posts` when `name=\"id\"` and `value=\"123\"`.\n\n3. **URL encoding**: Before substitution, it calls `canonicalizeForPath(value, encoded)` to properly encode the parameter value for use in a URL path. This ensures special characters are percent-encoded according to URL standards while respecting whether the value is already encoded.\n\nThis method is essential for Retrofit's dynamic URL construction, allowing developers to define REST API endpoints with placeholders that get filled in at runtime with actual parameter values. The encoding step ensures URL safety and compliance with HTTP standards."}
{"instance_id": "sjtu_CVE-2016-9177", "hits": [{"docid": "src/main/java/spark/resource/ExternalResourceHandler.java", "score": 348.123291015625}, {"docid": "src/main/java/spark/resource/ClassPathResourceHandler.java", "score": 313.7372131347656}, {"docid": "src/main/java/spark/resource/AbstractResourceHandler.java", "score": 175.61090087890625}, {"docid": "src/main/java/spark/resource/JarResourceHandler.java", "score": 169.13909912109375}, {"docid": "src/main/java/spark/utils/ResourceUtils.java", "score": 132.08880615234375}, {"docid": "src/main/java/spark/staticfiles/StaticFilesConfiguration.java", "score": 129.77639770507812}, {"docid": "src/main/java/spark/Service.java", "score": 118.17160034179688}, {"docid": "src/main/java/spark/resource/ClassPathResource.java", "score": 105.37020111083984}, {"docid": "src/main/java/spark/resource/AbstractResource.java", "score": 105.25859832763672}, {"docid": "src/main/java/spark/resource/ExternalResource.java", "score": 98.40969848632812}, {"docid": "src/main/java/spark/resource/Resource.java", "score": 94.36119842529297}, {"docid": "src/main/java/spark/resource/AbstractFileResolvingResource.java", "score": 86.70539855957031}, {"docid": "src/main/java/spark/utils/StringUtils.java", "score": 84.81819915771484}, {"docid": "src/main/java/spark/utils/ClassUtils.java", "score": 81.55709838867188}, {"docid": "src/main/java/spark/route/Routes.java", "score": 74.17530059814453}, {"docid": "src/main/java/spark/Spark.java", "score": 69.98370361328125}, {"docid": "src/main/java/spark/Request.java", "score": 67.78880310058594}, {"docid": "src/main/java/spark/servlet/SparkFilter.java", "score": 65.89959716796875}, {"docid": "src/main/java/spark/http/matching/MatcherFilter.java", "score": 63.139801025390625}, {"docid": "src/main/java/spark/Response.java", "score": 62.72819900512695}], "function_summary": "This code snippet implements the `getResource` method that locates and validates external file resources based on a given path. Here's the main functionality:\n\n**Path Validation & Processing:**\n- Validates that the input path is not null and starts with \"/\"\n- Canonicalizes the path using `UriPath.canonical()` to normalize it\n- Combines the base resource directory with the requested path\n\n**Resource Resolution:**\n- Creates an `ExternalResource` object for the resolved path\n- Handles directory requests by checking for a configured welcome file (like index.html)\n- If no welcome file is configured for directories, returns null (preventing directory browsing)\n\n**Security & Validation:**\n- Performs directory traversal protection using `DirectoryTraversal.protectAgainstForExternal()` to prevent access to files outside the intended directory structure\n- Only returns resources that actually exist on the filesystem\n\n**Error Handling:**\n- Throws `MalformedURLException` for invalid paths\n- Catches and logs exceptions during resource resolution\n- Returns null for non-existent or inaccessible resources\n\nThe method essentially serves as a secure file locator for external static resources, ensuring proper path validation, directory traversal protection, and welcome file handling for directory requests."}
{"instance_id": "sjtu_CVE-2018-12036", "hits": [{"docid": "core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java", "score": 1467.884765625}, {"docid": "core/src/main/java/org/owasp/dependencycheck/analyzer/ArchiveAnalyzer.java", "score": 1132.578857421875}, {"docid": "core/src/main/java/org/owasp/dependencycheck/analyzer/JarAnalyzer.java", "score": 822.1723022460938}, {"docid": "core/src/main/java/org/owasp/dependencycheck/analyzer/PythonDistributionAnalyzer.java", "score": 765.6644287109375}, {"docid": "utils/src/main/java/org/owasp/dependencycheck/utils/Settings.java", "score": 607.9757080078125}, {"docid": "maven/src/main/java/org/owasp/dependencycheck/maven/BaseDependencyCheckMojo.java", "score": 559.0947875976562}, {"docid": "core/src/main/java/org/owasp/dependencycheck/analyzer/RubyBundleAuditAnalyzer.java", "score": 551.1209106445312}, {"docid": "core/src/main/java/org/owasp/dependencycheck/analyzer/AssemblyAnalyzer.java", "score": 526.32568359375}, {"docid": "cli/src/main/java/org/owasp/dependencycheck/CliParser.java", "score": 511.8846130371094}, {"docid": "core/src/main/java/org/owasp/dependencycheck/reporting/ReportGenerator.java", "score": 510.6117858886719}, {"docid": "ant/src/main/java/org/owasp/dependencycheck/taskdefs/Check.java", "score": 477.8352966308594}, {"docid": "core/src/main/java/org/owasp/dependencycheck/analyzer/CPEAnalyzer.java", "score": 474.2655944824219}, {"docid": "core/src/main/java/org/owasp/dependencycheck/Engine.java", "score": 463.9996032714844}, {"docid": "core/src/main/java/org/owasp/dependencycheck/agent/DependencyCheckScanAgent.java", "score": 455.24530029296875}, {"docid": "core/src/main/java/org/owasp/dependencycheck/analyzer/AbstractAnalyzer.java", "score": 455.2041015625}, {"docid": "core/src/main/java/org/owasp/dependencycheck/data/nvdcve/CveDB.java", "score": 442.35589599609375}, {"docid": "cli/src/main/java/org/owasp/dependencycheck/App.java", "score": 432.2814025878906}, {"docid": "utils/src/main/java/org/owasp/dependencycheck/utils/Downloader.java", "score": 430.5791015625}, {"docid": "core/src/main/java/org/owasp/dependencycheck/analyzer/NodePackageAnalyzer.java", "score": 412.26080322265625}, {"docid": "core/src/main/java/org/owasp/dependencycheck/xml/pom/PomUtils.java", "score": 408.8924865722656}], "function_summary": "This code snippet is the core logic of the `extractFiles` method that extracts contents from ZIP-based archives (like WAR or EAR files) to a specified directory.\n\n**Key functionality:**\n\n1. **Input validation**: Returns early if either the archive or extraction directory is null\n\n2. **ZIP stream processing**: Creates a buffered ZIP input stream to read the archive file efficiently\n\n3. **Entry iteration**: Loops through each entry in the ZIP archive using `getNextEntry()`\n\n4. **Directory handling**: For directory entries, creates the corresponding directory structure in the destination, throwing an exception if directory creation fails\n\n5. **File extraction**: For file entries:\n   - Checks if an analysis engine is provided and whether it accepts the file type\n   - If accepted (or no engine filtering), extracts the file using `IOUtils.copy()`\n   - Creates the output file in the destination directory\n\n6. **Error handling**: Comprehensive exception handling for:\n   - File not found errors\n   - General I/O exceptions during extraction\n   - Archive reading errors\n\n7. **Resource management**: Uses try-with-resources to ensure proper cleanup of file streams\n\nThe method supports optional filtering through an `Engine` parameter that can determine which file types should be extracted based on supported analyzers."}
{"instance_id": "sjtu_CVE-2022-36007", "hits": [{"docid": "src/main/java/com/github/jlangch/venice/impl/util/io/LoadPaths.java", "score": 832.4951171875}, {"docid": "src/main/java/com/github/jlangch/venice/impl/functions/IOFunctions.java", "score": 474.1523132324219}, {"docid": "src/main/java/com/github/jlangch/venice/impl/functions/ZipFunctions.java", "score": 353.5812072753906}, {"docid": "src/main/java/com/github/jlangch/venice/impl/util/io/FileUtil.java", "score": 339.51470947265625}, {"docid": "src/main/java/com/github/jlangch/venice/javainterop/LoadPathsFactory.java", "score": 333.7466125488281}, {"docid": "src/main/java/com/github/jlangch/venice/impl/repl/REPL.java", "score": 311.6658935546875}, {"docid": "src/main/java/com/github/jlangch/venice/impl/util/io/zip/Zipper.java", "score": 310.0574035644531}, {"docid": "src/main/java/com/github/jlangch/venice/impl/functions/ShellFunctions.java", "score": 287.2962951660156}, {"docid": "cheatsheet.html", "score": 287.2366943359375}, {"docid": "src/main/java/com/github/jlangch/venice/impl/functions/ModuleFunctions.java", "score": 277.7284851074219}, {"docid": "src/main/java/com/github/jlangch/venice/impl/repl/FilePathCompleter.java", "score": 251.96009826660156}, {"docid": "src/main/java/com/github/jlangch/venice/Launcher.java", "score": 247.0532989501953}, {"docid": "src/main/java/com/github/jlangch/venice/impl/functions/SystemFunctions.java", "score": 241.84800720214844}, {"docid": "src/main/java/com/github/jlangch/venice/javainterop/ILoadPaths.java", "score": 231.24960327148438}, {"docid": "src/main/java/com/github/jlangch/venice/util/pdf/ClasspathUserAgent.java", "score": 224.51390075683594}, {"docid": "src/main/java/com/github/jlangch/venice/impl/VeniceInterpreter.java", "score": 216.66070556640625}, {"docid": "src/main/java/com/github/jlangch/venice/impl/util/io/ClassPathResource.java", "score": 216.14669799804688}, {"docid": "src/main/java/com/github/jlangch/venice/nanojson/JsonTokener.java", "score": 206.77279663085938}, {"docid": "src/main/java/com/github/jlangch/venice/impl/AppRunner.java", "score": 202.28909301757812}, {"docid": "src/main/java/com/github/jlangch/venice/impl/functions/PdfFunctions.java", "score": 195.2823028564453}], "function_summary": "This code snippet implements a security check to prevent directory traversal attacks when loading files from a specified directory path. \n\nThe method `isFileWithinDirectory` takes two parameters: a base directory (`dir`) and a target file (`file`). It performs the following key operations:\n\n1. **Path Resolution**: Converts the directory to an absolute path and creates a new File object by combining the directory with the target file's path.\n\n2. **Existence Validation**: Checks if the directory exists and is actually a directory, and verifies that the resolved file exists.\n\n3. **Security Check**: Uses canonical paths to determine if the resolved file is actually within the intended directory by checking if the file's canonical path starts with the directory's canonical path.\n\n4. **Directory Traversal Prevention**: The comment explicitly mentions preventing access to files outside the load-path using relative paths like `../../coffee`, which is a common directory traversal attack pattern.\n\nThe method returns `true` only if the file exists and is legitimately contained within the specified directory, and `false` otherwise. This is a crucial security measure in file loading systems to prevent unauthorized access to files outside the designated load paths."}
{"instance_id": "sjtu_CVE-2021-41189", "hits": [{"docid": "dspace-api/src/main/java/org/dspace/content/CollectionServiceImpl.java", "score": 4399.548828125}, {"docid": "dspace-api/src/main/java/org/dspace/content/CommunityServiceImpl.java", "score": 2606.6708984375}, {"docid": "dspace-api/src/main/java/org/dspace/content/ItemServiceImpl.java", "score": 2264.40185546875}, {"docid": "dspace-api/src/main/java/org/dspace/authorize/AuthorizeServiceImpl.java", "score": 2103.240478515625}, {"docid": "dspace-api/src/main/java/org/dspace/eperson/GroupServiceImpl.java", "score": 2016.23681640625}, {"docid": "dspace-api/src/main/java/org/dspace/content/service/CollectionService.java", "score": 2004.7205810546875}, {"docid": "dspace-api/src/main/java/org/dspace/xmlworkflow/XmlWorkflowServiceImpl.java", "score": 1945.8443603515625}, {"docid": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/CollectionRestRepository.java", "score": 1925.61279296875}, {"docid": "dspace-api/src/main/java/org/dspace/content/BundleServiceImpl.java", "score": 1851.343017578125}, {"docid": "dspace-api/src/main/java/org/dspace/content/WorkspaceItemServiceImpl.java", "score": 1765.6864013671875}, {"docid": "dspace-api/src/main/java/org/dspace/app/util/AuthorizeUtil.java", "score": 1734.5079345703125}, {"docid": "dspace-api/src/main/java/org/dspace/discovery/SolrServiceImpl.java", "score": 1686.46240234375}, {"docid": "dspace-api/src/main/java/org/dspace/content/Collection.java", "score": 1674.7430419921875}, {"docid": "dspace-api/src/main/java/org/dspace/content/packager/PackageUtils.java", "score": 1665.714599609375}, {"docid": "dspace-api/src/main/java/org/dspace/eperson/EPersonServiceImpl.java", "score": 1651.6387939453125}, {"docid": "dspace-api/src/main/java/org/dspace/content/packager/RoleDisseminator.java", "score": 1631.8365478515625}, {"docid": "dspace-api/src/main/java/org/dspace/authorize/service/AuthorizeService.java", "score": 1625.898193359375}, {"docid": "dspace-api/src/main/java/org/dspace/content/BitstreamServiceImpl.java", "score": 1612.423583984375}, {"docid": "dspace-api/src/main/java/org/dspace/content/service/ItemService.java", "score": 1593.8477783203125}, {"docid": "dspace-api/src/main/java/org/dspace/content/packager/AbstractMETSIngester.java", "score": 1590.8455810546875}], "function_summary": "This code snippet implements the `createDefaultReadGroup` method that creates a new group with default read permissions for a collection in DSpace. Here's what it does:\n\n1. **Creates a new group**: Uses the `groupService` to create a new group with a standardized naming convention: `\"COLLECTION_\" + collection.getID() + \"_\" + typeOfGroupString + \"_DEFAULT_READ\"`\n\n2. **Removes existing permissions**: Clears any existing policies for the specified `defaultRead` action on the collection using `removePoliciesActionFilter`\n\n3. **Grants new permissions**: Adds a new authorization policy to the collection, granting the newly created group the specified `defaultRead` permissions\n\n4. **Updates and returns**: Updates the group in the database and returns the newly created group\n\nThe method is designed to establish controlled access to collections by creating dedicated groups with specific read permissions, while ensuring clean permission management by removing conflicting existing policies first. This is typically used when setting up default access controls for collection content, allowing administrators to manage who can read items within a collection through group membership."}
{"instance_id": "sjtu_CVE-2024-2928", "hits": [{"docid": "mlflow/server/handlers.py", "score": 9950.9775390625}, {"docid": "mlflow/server/auth/__init__.py", "score": 3321.16650390625}, {"docid": "mlflow/tracking/fluent.py", "score": 2592.621826171875}, {"docid": "mlflow/store/tracking/sqlalchemy_store.py", "score": 2556.191162109375}, {"docid": "mlflow/tracking/client.py", "score": 2414.69921875}, {"docid": "mlflow/store/tracking/file_store.py", "score": 2397.424072265625}, {"docid": "mlflow/tracking/_tracking_service/client.py", "score": 2348.292724609375}, {"docid": "mlflow/transformers/__init__.py", "score": 2246.3017578125}, {"docid": "mlflow/cli.py", "score": 2190.863037109375}, {"docid": "mlflow/store/_unity_catalog/registry/rest_store.py", "score": 2181.582275390625}, {"docid": "mlflow/models/evaluation/base.py", "score": 2168.027587890625}, {"docid": "mlflow/pyfunc/scoring_server/__init__.py", "score": 2164.6376953125}, {"docid": "mlflow/pyfunc/__init__.py", "score": 2159.397705078125}, {"docid": "mlflow/sklearn/__init__.py", "score": 2137.165771484375}, {"docid": "mlflow/sagemaker/__init__.py", "score": 2124.92333984375}, {"docid": "mlflow/store/artifact/databricks_artifact_repo.py", "score": 2067.990478515625}, {"docid": "mlflow/pyspark/ml/__init__.py", "score": 2059.132568359375}, {"docid": "mlflow/store/tracking/rest_store.py", "score": 2034.3546142578125}, {"docid": "mlflow/tensorflow/__init__.py", "score": 2022.6722412109375}, {"docid": "mlflow/java/client/src/main/java/org/mlflow/api/proto/Service.java", "score": 1977.421142578125}], "function_summary": "This code snippet contains HTTP request handlers for MLflow's tracking server APIs. The main functionality includes:\n\n**Core Operations:**\n- **Experiment Management**: Create, get, delete, restore, update, and search experiments\n- **Run Management**: Create, update, delete, restore runs, and search runs with filtering/pagination\n- **Metrics & Parameters**: Log individual metrics/parameters and batch logging operations\n- **Artifacts**: List and manage run artifacts, including support for proxied artifact storage\n- **Tags**: Set and delete tags for experiments and runs\n- **Dataset Management**: Log dataset inputs and search datasets across experiments\n\n**Key Features:**\n- **Request Processing**: Uses `_get_request_message()` to parse and validate incoming requests with schema validation\n- **Error Handling**: All handlers are wrapped with `@catch_mlflow_exception` decorator for consistent error responses\n- **Security**: Validates artifact paths and query strings to prevent security vulnerabilities\n- **Artifact Proxying**: Supports proxied artifact storage through HTTP/HTTPS/mlflow-artifacts schemes\n- **Bulk Operations**: Handles bulk metric history retrieval with sampling and interval-based queries\n\n**Response Format**: All handlers return JSON responses using protobuf message serialization. The code includes comprehensive input validation, parameter checking, and proper HTTP status codes for different scenarios.\n\nThis forms the core REST API layer for MLflow's experiment tracking functionality."}
{"instance_id": "sjtu_CVE-2024-1483", "hits": [{"docid": "mlflow/server/handlers.py", "score": 9931.20703125}, {"docid": "mlflow/server/auth/__init__.py", "score": 3306.767333984375}, {"docid": "mlflow/tracking/fluent.py", "score": 2570.3896484375}, {"docid": "mlflow/store/tracking/sqlalchemy_store.py", "score": 2538.97900390625}, {"docid": "mlflow/tracking/client.py", "score": 2397.858642578125}, {"docid": "mlflow/store/tracking/file_store.py", "score": 2385.316162109375}, {"docid": "mlflow/tracking/_tracking_service/client.py", "score": 2324.640625}, {"docid": "mlflow/transformers/__init__.py", "score": 2237.48486328125}, {"docid": "mlflow/pyfunc/__init__.py", "score": 2208.527099609375}, {"docid": "mlflow/cli.py", "score": 2190.337158203125}, {"docid": "mlflow/store/_unity_catalog/registry/rest_store.py", "score": 2166.909423828125}, {"docid": "mlflow/pyfunc/scoring_server/__init__.py", "score": 2154.046630859375}, {"docid": "mlflow/models/evaluation/base.py", "score": 2150.557861328125}, {"docid": "mlflow/sklearn/__init__.py", "score": 2123.196044921875}, {"docid": "mlflow/sagemaker/__init__.py", "score": 2107.8037109375}, {"docid": "mlflow/store/artifact/databricks_artifact_repo.py", "score": 2053.10498046875}, {"docid": "mlflow/pyspark/ml/__init__.py", "score": 2036.8377685546875}, {"docid": "mlflow/store/tracking/rest_store.py", "score": 2032.1982421875}, {"docid": "mlflow/tensorflow/__init__.py", "score": 2006.9857177734375}, {"docid": "mlflow/java/client/src/main/java/org/mlflow/api/proto/Service.java", "score": 1952.1229248046875}], "function_summary": "This code snippet contains handler functions for MLflow's tracking server API endpoints. The main functionality includes:\n\n**Experiment Management:**\n- Creating experiments with validation of names, artifact locations, and tags\n- Getting experiments by ID or name\n- Deleting, restoring, and updating experiments\n- Searching experiments with filtering and pagination\n\n**Run Management:**\n- Creating, updating, deleting, and restoring ML runs\n- Logging metrics, parameters, tags, and model inputs to runs\n- Searching runs with complex filtering capabilities\n- Retrieving run details and metric history\n\n**Key Features:**\n- **Request validation**: Uses schema-based validation to ensure required fields are present and have correct types\n- **Error handling**: Wrapped with `@catch_mlflow_exception` decorator for consistent error responses\n- **Security**: Validates artifact locations and paths to prevent malicious attacks\n- **Artifact integration**: Handles both local and proxied artifact storage\n- **Backward compatibility**: Supports legacy `run_uuid` parameter alongside `run_id`\n\nThe handlers process HTTP requests, validate input parameters, interact with the tracking store backend, and return JSON responses. They support both REST API and AJAX endpoints, with proper content-type validation and response formatting using protocol buffer message serialization."}
{"instance_id": "GioldDiorld_CVE-2017-9988", "hits": [{"docid": "util/swftoperl.html", "score": 2275.50146484375}, {"docid": "py_ext/Zwiff/__init__.py", "score": 2113.9609375}, {"docid": "docs/libming/SWFOutput_writeFloat16.html", "score": 1994.5048828125}, {"docid": "docs/perl/SWF::DisplayItem.html", "score": 1960.954833984375}, {"docid": "docs/perl/SWF::Fill.html", "score": 1865.6766357421875}, {"docid": "docs/libming/newSWFJpegWithAlpha_fromInput.html", "score": 1825.3685302734375}, {"docid": "docs/libming/newSWFSound.html", "score": 1697.1259765625}, {"docid": "docs/libming/newSWFVideoStream_fromFile.html", "score": 1673.560302734375}, {"docid": "docs/perl/SWF::Movie.html", "score": 1503.8397216796875}, {"docid": "docs/perl/SWF::MovieClip.html", "score": 1349.2872314453125}, {"docid": "py_ext/ming.py", "score": 1216.3841552734375}, {"docid": "java_ext/SWFButtonI.java", "score": 1140.240478515625}, {"docid": "docs/perl/SWF::Button.html", "score": 1034.1502685546875}, {"docid": "java_ext/SWFMovie.java", "score": 987.9227294921875}, {"docid": "docs/perl/SWF::VideoStream.html", "score": 967.09619140625}, {"docid": "java_ext/SWFMovieClip.java", "score": 941.005126953125}, {"docid": "java_ext/SWFTextFieldI.java", "score": 880.4285278320312}, {"docid": "docs/perl/SWF.html", "score": 877.4193115234375}, {"docid": "docs/perl/SWF::FilterMatrix.html", "score": 848.4089965820312}, {"docid": "docs/perl/SWF::Blur.html", "score": 834.61328125}], "function_summary": "This code snippet implements the `parseABC_NS_SET_INFO` function, which parses a namespace set information structure from an ActionScript Bytecode (ABC) file format used in Flash/SWF files.\n\n**Key functionality:**\n\n1. **Reads count**: Uses `readEncUInt30(f)` to read the number of namespaces in the set from the file stream\n2. **Allocates memory**: Dynamically allocates memory for an array of `U30` (30-bit unsigned integers) to store namespace indices\n3. **Populates array**: Iterates through a loop to read each namespace index using `readEncUInt30(f)` and stores them in the allocated array\n\n**Purpose**: This function is part of a larger SWF/ABC parser that processes ActionScript 3.0 bytecode. Namespace sets are used in ActionScript 3.0's qualified naming system to group related namespaces together, allowing for more flexible name resolution in the virtual machine.\n\n**Structure**: The function follows a typical pattern for parsing variable-length arrays in binary formats: read the count first, allocate appropriate memory, then read each element. The `U30` type represents encoded 30-bit unsigned integers, which is a space-efficient encoding used in the ABC format.\n\nThis is a low-level parsing function that contributes to the overall decompilation and analysis of Flash content."}
{"instance_id": "GioldDiorld_CVE-2016-9829", "hits": [{"docid": "util/swftoperl.html", "score": 2259.605224609375}, {"docid": "py_ext/Zwiff/__init__.py", "score": 2059.5947265625}, {"docid": "docs/libming/SWFOutput_writeFloat16.html", "score": 1961.917724609375}, {"docid": "docs/perl/SWF::DisplayItem.html", "score": 1896.5660400390625}, {"docid": "docs/perl/SWF::Fill.html", "score": 1790.51806640625}, {"docid": "docs/libming/newSWFJpegWithAlpha_fromInput.html", "score": 1788.06640625}, {"docid": "docs/libming/newSWFSound.html", "score": 1658.822998046875}, {"docid": "docs/libming/newSWFVideoStream_fromFile.html", "score": 1631.4976806640625}, {"docid": "docs/perl/SWF::Movie.html", "score": 1466.4931640625}, {"docid": "docs/perl/SWF::MovieClip.html", "score": 1324.4075927734375}, {"docid": "py_ext/ming.py", "score": 1169.6978759765625}, {"docid": "java_ext/SWFButtonI.java", "score": 1145.7110595703125}, {"docid": "docs/perl/SWF::Button.html", "score": 1011.9503784179688}, {"docid": "java_ext/SWFMovie.java", "score": 972.3416748046875}, {"docid": "java_ext/SWFMovieClip.java", "score": 943.0999145507812}, {"docid": "docs/perl/SWF::VideoStream.html", "score": 916.875}, {"docid": "java_ext/SWFTextFieldI.java", "score": 886.9940185546875}, {"docid": "docs/perl/SWF.html", "score": 844.7969970703125}, {"docid": "docs/perl/SWF::FilterMatrix.html", "score": 810.4559936523438}, {"docid": "docs/perl/SWF::Blur.html", "score": 783.6743774414062}], "function_summary": "This code snippet implements a parser function for the SWF (Flash) DEFINEFONT tag, which defines a font with glyph shapes in a Flash file.\n\n**Key functionality:**\n\n1. **Font ID extraction**: Reads a 16-bit font identifier from the file stream\n2. **Glyph count calculation**: Reads the first offset value and divides by 2 to determine the number of glyphs in the font\n3. **Font registration**: Calls `Movie_addFontInfo()` to register the font information in the movie structure\n4. **Offset table parsing**: Allocates memory for and reads an array of 16-bit offset values that point to each glyph's shape data within the font definition\n5. **Glyph shape parsing**: For each glyph, calculates the length of shape data by finding the difference between consecutive offsets (or using the remaining length for the last glyph), then parses the actual shape data using `parseSWF_SHAPE()`\n\nThe parser handles the SWF DEFINEFONT format where glyphs are stored as vector shapes with their positions determined by an offset table. This allows the Flash player to efficiently locate and render individual characters from the font definition."}
{"instance_id": "GioldDiorld_CVE-2017-11728", "hits": [{"docid": "docs/perl/SWF::Movie.html", "score": 2593.621826171875}, {"docid": "docs/perl/SWF::VideoStream.html", "score": 2525.370849609375}, {"docid": "py_ext/ming.py", "score": 1978.1812744140625}, {"docid": "java_ext/SWFButtonI.java", "score": 1713.8145751953125}, {"docid": "docs/perl/SWF::MovieClip.html", "score": 1654.245849609375}, {"docid": "docs/perl/SWF::Button.html", "score": 1604.572509765625}, {"docid": "docs/perl/SWF::DisplayItem.html", "score": 1545.83837890625}, {"docid": "java_ext/SWFObject.java", "score": 1492.303466796875}, {"docid": "util/swftoperl.html", "score": 1328.9002685546875}, {"docid": "java_ext/SWFTextFieldI.java", "score": 1313.1541748046875}, {"docid": "docs/libming/SWFAction_getByteCode.html", "score": 1290.447265625}, {"docid": "docs/libming/SWFAction_compile.html", "score": 1267.7408447265625}, {"docid": "docs/perl/SWF::Action.html", "score": 1161.37841796875}, {"docid": "docs/perl/SWF::TextField.html", "score": 1102.180908203125}, {"docid": "docs/libming/readMP3Header.html", "score": 1091.4066162109375}, {"docid": "java_ext/SWFShape.java", "score": 1064.0068359375}, {"docid": "docs/perl/SWF.html", "score": 1050.0826416015625}, {"docid": "java_ext/SWFMovie.java", "score": 1034.222412109375}, {"docid": "py_ext/Zwiff/__init__.py", "score": 989.8496704101562}, {"docid": "docs/perl/SWF::Text.html", "score": 972.1030883789062}], "function_summary": "This code snippet defines a helper function called `OpCode` that safely retrieves the action code from an SWF (Flash) action at a specific index in an actions array.\n\n**Key functionality:**\n\n1. **Bounds checking**: The function first validates that the requested index `n` is within valid bounds (greater than 0 and less than `maxn`)\n\n2. **Error handling**: If the index is out of bounds, it:\n   - Optionally logs a debug warning (when DEBUG is enabled) showing the requested index and maximum allowed index\n   - Returns a sentinel value of `-999` to indicate an invalid/error condition\n\n3. **Safe access**: If the index is valid, it returns the ActionCode field from the SWF action record at the specified position\n\nThis is a defensive programming pattern commonly used in parsers and decompilers to prevent array bounds violations when navigating through SWF action sequences. The function appears to be part of a larger SWF decompiler system, where it's used to safely peek at opcodes during the decompilation process without risking crashes from invalid memory access.\n\nThe return value of `-999` serves as an easily identifiable error code that calling functions can check for to handle invalid opcode requests gracefully."}
{"instance_id": "GioldDiorld_CVE-2017-11729", "hits": [{"docid": "docs/perl/SWF::Movie.html", "score": 2601.790283203125}, {"docid": "docs/perl/SWF::VideoStream.html", "score": 2515.581298828125}, {"docid": "py_ext/ming.py", "score": 1979.8551025390625}, {"docid": "java_ext/SWFButtonI.java", "score": 1711.233642578125}, {"docid": "docs/perl/SWF::MovieClip.html", "score": 1654.3011474609375}, {"docid": "docs/perl/SWF::Button.html", "score": 1605.0748291015625}, {"docid": "docs/perl/SWF::DisplayItem.html", "score": 1548.0211181640625}, {"docid": "java_ext/SWFObject.java", "score": 1486.2071533203125}, {"docid": "util/swftoperl.html", "score": 1328.3935546875}, {"docid": "java_ext/SWFTextFieldI.java", "score": 1309.2340087890625}, {"docid": "docs/libming/SWFAction_getByteCode.html", "score": 1299.2713623046875}, {"docid": "docs/libming/SWFAction_compile.html", "score": 1274.1978759765625}, {"docid": "docs/perl/SWF::Action.html", "score": 1165.2366943359375}, {"docid": "docs/perl/SWF::TextField.html", "score": 1104.3809814453125}, {"docid": "docs/libming/readMP3Header.html", "score": 1085.04052734375}, {"docid": "java_ext/SWFShape.java", "score": 1062.4576416015625}, {"docid": "docs/perl/SWF.html", "score": 1049.0897216796875}, {"docid": "java_ext/SWFMovie.java", "score": 1029.5863037109375}, {"docid": "py_ext/Zwiff/__init__.py", "score": 986.7816772460938}, {"docid": "docs/perl/SWF::Text.html", "score": 971.4902954101562}], "function_summary": "This code snippet defines the `OpCode` function, which is a helper utility for safely retrieving action codes from an array of SWF (Flash) actions during decompilation.\n\n**Main functionality:**\n- Takes three parameters: an array index `n`, an `actions` array, and `maxn` (maximum array size)\n- Performs bounds checking to ensure the requested index is valid (not 0 and less than the maximum)\n- If the index is out of bounds, it optionally logs a debug warning and returns a sentinel value (-999) to indicate an error\n- If the index is valid, it returns the ActionCode field from the SWF action record at the specified index\n\n**Key operations:**\n- Bounds validation to prevent array access violations\n- Debug logging when bounds checking fails (conditional compilation)\n- Safe array access with error handling\n\nThis function is essential for the SWF decompiler's operation, as it allows other parts of the code to safely examine action opcodes without risking crashes from invalid array access. The -999 return value serves as an easily identifiable error indicator that calling code can check for when processing action sequences. This type of defensive programming is crucial when parsing potentially malformed or corrupted SWF bytecode."}
{"instance_id": "GioldDiorld_CVE-2016-9827", "hits": [{"docid": "util/swftoperl.html", "score": 2281.0947265625}, {"docid": "py_ext/Zwiff/__init__.py", "score": 2108.835693359375}, {"docid": "docs/libming/SWFOutput_writeFloat16.html", "score": 1990.8671875}, {"docid": "docs/perl/SWF::DisplayItem.html", "score": 1968.7386474609375}, {"docid": "docs/perl/SWF::Fill.html", "score": 1866.2501220703125}, {"docid": "docs/libming/newSWFJpegWithAlpha_fromInput.html", "score": 1827.4542236328125}, {"docid": "docs/libming/newSWFSound.html", "score": 1692.8297119140625}, {"docid": "docs/libming/newSWFVideoStream_fromFile.html", "score": 1670.4324951171875}, {"docid": "docs/perl/SWF::Movie.html", "score": 1525.34765625}, {"docid": "docs/perl/SWF::MovieClip.html", "score": 1361.573486328125}, {"docid": "py_ext/ming.py", "score": 1236.825927734375}, {"docid": "java_ext/SWFButtonI.java", "score": 1161.60009765625}, {"docid": "docs/perl/SWF::Button.html", "score": 1043.6474609375}, {"docid": "java_ext/SWFMovie.java", "score": 1011.244384765625}, {"docid": "docs/perl/SWF::VideoStream.html", "score": 971.2128295898438}, {"docid": "java_ext/SWFMovieClip.java", "score": 968.1245727539062}, {"docid": "java_ext/SWFTextFieldI.java", "score": 917.5247192382812}, {"docid": "docs/perl/SWF.html", "score": 871.394775390625}, {"docid": "docs/perl/SWF::FilterMatrix.html", "score": 852.255615234375}, {"docid": "docs/perl/SWF::Blur.html", "score": 832.9943237304688}], "function_summary": "This code snippet is a parser function for the SWF (Shockwave Flash) file format's `PROTECT` block. The function `parseSWF_PROTECT` reads protection information from a Flash file.\n\n**Key functionality:**\n\n1. **Structure initialization**: Uses the `PAR_BEGIN` macro to set up a parser structure for the `SWF_PROTECT` block type.\n\n2. **Conditional password reading**: \n   - If the block has data (`length != 0`), it reads the entire block content as password bytes using `readBytes(f, length)`\n   - If the block is empty (`length == 0`), it sets the password field to `NULL`\n\n3. **Protection mechanism**: The PROTECT block is used in SWF files to prevent decompilation or editing. When present, it can optionally contain a password that would be required to remove the protection.\n\n4. **Memory management**: The function allocates memory to store password data when present, or explicitly sets it to NULL when no password is provided.\n\n5. **Structure return**: Uses the `PAR_END` macro to return the parsed structure.\n\nThis is part of a larger SWF file parser that handles various block types within Flash files, with this particular function specifically dealing with content protection features."}
{"instance_id": "GioldDiorld_CVE-2016-9831", "hits": [{"docid": "docs/perl/SWF::VideoStream.html", "score": 124.14520263671875}, {"docid": "util/swftoperl.html", "score": 123.72039794921875}, {"docid": "docs/perl/SWF::Movie.html", "score": 116.33670043945312}, {"docid": "docs/perl/SWF::MovieClip.html", "score": 94.0177001953125}, {"docid": "docs/perl/SWF::Bitmap.html", "score": 91.33390045166016}, {"docid": "docs/libming/newSWFJpegWithAlpha_fromInput.html", "score": 81.1509017944336}, {"docid": "docs/perl/SWF::DisplayItem.html", "score": 79.08550262451172}, {"docid": "docs/libming/newSWFSound.html", "score": 72.89299774169922}, {"docid": "py_ext/ming.py", "score": 66.09850311279297}, {"docid": "py_ext/Zwiff/__init__.py", "score": 64.8187026977539}, {"docid": "docs/libming/SWFAction_getByteCode.html", "score": 60.09859848022461}, {"docid": "docs/perl/SWF::Fill.html", "score": 57.87590026855469}, {"docid": "docs/libming/SWFShape_setLineStyle2_internal.html", "score": 56.00279998779297}, {"docid": "docs/perl/SWF::Shape.html", "score": 54.68550109863281}, {"docid": "docs/libming/SWFShape_setLine2.html", "score": 54.54779815673828}, {"docid": "docs/libming/newSWFLineStyle2.html", "score": 54.22529983520508}, {"docid": "docs/perl/SWF::Button.html", "score": 53.67399978637695}, {"docid": "docs/perl/SWF::TextField.html", "score": 51.95029830932617}, {"docid": "docs/libming/SWFGradient_addEntry.html", "score": 51.185298919677734}, {"docid": "docs/libming/SWFButton_setScalingGrid.html", "score": 49.475399017333984}], "function_summary": "This code snippet handles reading and skipping JPEG block data after identifying a JPEG marker. Here's what it does:\n\n**Line 55**: Reads the next two bytes from the file and combines them into a 16-bit length value using big-endian byte order (shifting the first byte left by 8 bits and adding the second byte). This represents the total size of the JPEG block including the 2-byte length field itself.\n\n**Line 56**: Prints the length value to show how many bytes the current JPEG block contains.\n\n**Lines 58-59**: Skips over the remaining data in the block by reading and discarding bytes. It decrements the length by 2 (since the length field itself was already read) and then reads `l` bytes one by one using `fgetc(f)` in a loop, effectively advancing the file pointer past the block's data payload.\n\nThis is a common pattern in JPEG parsing where each block starts with a marker (0xFF + type), followed by a 2-byte length field, followed by the actual data. This snippet extracts the length information and skips past the data to move to the next block, which is useful for analyzing JPEG file structure without processing the actual block contents."}
{"instance_id": "GioldDiorld_CVE-2018-7868", "hits": [{"docid": "docs/perl/SWF::Movie.html", "score": 2604.343994140625}, {"docid": "docs/perl/SWF::VideoStream.html", "score": 2529.91357421875}, {"docid": "py_ext/ming.py", "score": 1999.6822509765625}, {"docid": "java_ext/SWFButtonI.java", "score": 1703.6072998046875}, {"docid": "docs/perl/SWF::MovieClip.html", "score": 1639.970458984375}, {"docid": "docs/perl/SWF::Button.html", "score": 1581.947998046875}, {"docid": "java_ext/SWFObject.java", "score": 1535.0440673828125}, {"docid": "docs/perl/SWF::DisplayItem.html", "score": 1532.257080078125}, {"docid": "util/swftoperl.html", "score": 1351.3243408203125}, {"docid": "java_ext/SWFTextFieldI.java", "score": 1326.646240234375}, {"docid": "docs/libming/SWFAction_getByteCode.html", "score": 1286.57275390625}, {"docid": "docs/libming/SWFAction_compile.html", "score": 1269.220458984375}, {"docid": "docs/perl/SWF::Action.html", "score": 1157.5225830078125}, {"docid": "docs/perl/SWF::TextField.html", "score": 1103.5224609375}, {"docid": "docs/libming/readMP3Header.html", "score": 1086.5335693359375}, {"docid": "java_ext/SWFShape.java", "score": 1077.913330078125}, {"docid": "java_ext/SWFMovie.java", "score": 1061.8062744140625}, {"docid": "docs/perl/SWF.html", "score": 1049.1907958984375}, {"docid": "py_ext/Zwiff/__init__.py", "score": 998.8203735351562}, {"docid": "docs/perl/SWF::Text.html", "score": 982.19091796875}], "function_summary": "This code snippet implements the `getString` function, which converts ActionScript bytecode parameters into their string representations for decompilation purposes.\n\n**Main Functionality:**\nThe function takes a `SWF_ACTIONPUSHPARAM` structure and returns a string representation based on the parameter's type. It handles various ActionScript data types through a switch statement:\n\n**Key Operations:**\n- **String literals**: Wraps strings in single quotes with proper memory allocation\n- **Primitives**: Returns literal representations (\"null\", \"undefined\", \"true\"/\"false\")\n- **Numeric types**: Converts integers and doubles to string format using `sprintf`\n- **Registers**: Either returns the register's variable name or a default \"R#\" format\n- **Constants**: Retrieves values from a constant pool and wraps them in quotes, using `strcatext` for proper escaping\n- **Variables**: Returns the raw string value for incremented/decremented/regular variables\n\n**Important Logic:**\n- Memory management through `malloc` for dynamically sized strings\n- Special handling for register types (avoiding certain type conflicts)\n- Use of helper functions like `strlenext` and `strcatext` for escaped string handling\n- Error handling for unknown types with stderr output\n- Debug output when DEBUG is enabled\n\nThis function is essential for converting binary ActionScript data back into readable source code during the SWF decompilation process."}
{"instance_id": "GioldDiorld_CVE-2018-8962", "hits": [{"docid": "docs/perl/SWF::Movie.html", "score": 2602.642333984375}, {"docid": "docs/perl/SWF::VideoStream.html", "score": 2531.474853515625}, {"docid": "py_ext/ming.py", "score": 1996.622314453125}, {"docid": "java_ext/SWFButtonI.java", "score": 1705.4322509765625}, {"docid": "docs/perl/SWF::MovieClip.html", "score": 1640.3525390625}, {"docid": "docs/perl/SWF::Button.html", "score": 1585.7335205078125}, {"docid": "java_ext/SWFObject.java", "score": 1536.827880859375}, {"docid": "docs/perl/SWF::DisplayItem.html", "score": 1533.0650634765625}, {"docid": "util/swftoperl.html", "score": 1348.056640625}, {"docid": "java_ext/SWFTextFieldI.java", "score": 1331.854736328125}, {"docid": "docs/libming/SWFAction_getByteCode.html", "score": 1295.7109375}, {"docid": "docs/libming/SWFAction_compile.html", "score": 1270.5888671875}, {"docid": "docs/perl/SWF::Action.html", "score": 1162.4644775390625}, {"docid": "docs/perl/SWF::TextField.html", "score": 1106.8919677734375}, {"docid": "docs/libming/readMP3Header.html", "score": 1086.71337890625}, {"docid": "java_ext/SWFShape.java", "score": 1077.6220703125}, {"docid": "java_ext/SWFMovie.java", "score": 1062.23974609375}, {"docid": "docs/perl/SWF.html", "score": 1050.0789794921875}, {"docid": "py_ext/Zwiff/__init__.py", "score": 995.8112182617188}, {"docid": "docs/perl/SWF::Text.html", "score": 985.4096069335938}], "function_summary": "This code snippet implements the `getString` function, which converts different types of SWF (Flash) action parameters into their string representations for decompilation purposes.\n\n**Key functionality:**\n\n- **Type-based conversion**: Uses a switch statement to handle different parameter types (PUSH_STRING, PUSH_NULL, PUSH_REGISTER, etc.)\n\n- **String formatting**: \n  - Wraps string literals and constants in single quotes\n  - Returns literal values for null (\"null\"), undefined (\"undefined\"), and booleans (\"true\"/\"false\")\n  - Formats numbers (integers and doubles) as decimal strings\n\n- **Register handling**: For register types, either returns the register's associated name (if available) or a formatted register identifier like \"R1\", \"R2\"\n\n- **Constant pool support**: Handles 8-bit and 16-bit constants by looking up values from a global `pool` array and applying proper string escaping\n\n- **Memory management**: Dynamically allocates memory for formatted strings using `malloc`\n\n- **Special cases**: Handles incremented/decremented variables (types 11, 12) by returning the raw string value\n\n- **Error handling**: Prints error messages for unhandled types and returns empty string as fallback\n\nThe function is essential for the decompiler's ability to generate readable ActionScript code from binary SWF bytecode."}
{"instance_id": "GioldDiorld_CVE-2018-8807", "hits": [{"docid": "docs/perl/SWF::Movie.html", "score": 2597.04931640625}, {"docid": "docs/perl/SWF::VideoStream.html", "score": 2526.412841796875}, {"docid": "py_ext/ming.py", "score": 1994.2247314453125}, {"docid": "java_ext/SWFButtonI.java", "score": 1704.097412109375}, {"docid": "docs/perl/SWF::MovieClip.html", "score": 1637.738037109375}, {"docid": "docs/perl/SWF::Button.html", "score": 1582.0184326171875}, {"docid": "docs/perl/SWF::DisplayItem.html", "score": 1525.630126953125}, {"docid": "java_ext/SWFObject.java", "score": 1521.00341796875}, {"docid": "util/swftoperl.html", "score": 1341.73779296875}, {"docid": "java_ext/SWFTextFieldI.java", "score": 1330.0098876953125}, {"docid": "docs/libming/SWFAction_getByteCode.html", "score": 1290.813720703125}, {"docid": "docs/libming/SWFAction_compile.html", "score": 1269.86572265625}, {"docid": "docs/perl/SWF::Action.html", "score": 1155.222900390625}, {"docid": "docs/perl/SWF::TextField.html", "score": 1096.5350341796875}, {"docid": "docs/libming/readMP3Header.html", "score": 1088.0872802734375}, {"docid": "java_ext/SWFShape.java", "score": 1074.785888671875}, {"docid": "java_ext/SWFMovie.java", "score": 1053.645751953125}, {"docid": "docs/perl/SWF.html", "score": 1040.3692626953125}, {"docid": "py_ext/Zwiff/__init__.py", "score": 992.01611328125}, {"docid": "docs/perl/SWF::Text.html", "score": 976.0950927734375}], "function_summary": "This code snippet is a function called `getString` that converts different types of ActionScript/Flash bytecode parameters into their string representations for decompilation purposes.\n\nThe function takes a `SWF_ACTIONPUSHPARAM` structure and uses a switch statement to handle different parameter types:\n\n- **PUSH_STRING**: Wraps the string value in single quotes\n- **PUSH_NULL/PUSH_UNDEF**: Returns literal \"null\" or \"undefined\" \n- **PUSH_REGISTER**: Returns the register name (either from a lookup table or formatted as \"R#\")\n- **PUSH_BOOLEAN**: Returns \"true\" or \"false\"\n- **PUSH_DOUBLE/PUSH_INT**: Formats numeric values as strings\n- **PUSH_CONSTANT/PUSH_CONSTANT16**: Retrieves strings from a constant pool and wraps them in quotes, using special extended string functions to handle escaped characters\n- **Cases 11/12 and PUSH_VARIABLE**: Returns variable names directly\n\nThe function dynamically allocates memory for formatted strings and uses helper functions like `strlenext` and `strcatext` to handle strings with special characters that need escaping. This is part of a Flash/SWF decompiler that converts bytecode back into readable ActionScript source code."}
{"instance_id": "GioldDiorld_CVE-2017-7578", "hits": [{"docid": "util/swftoperl.html", "score": 2273.4921875}, {"docid": "py_ext/Zwiff/__init__.py", "score": 2105.037109375}, {"docid": "docs/libming/SWFOutput_writeFloat16.html", "score": 1997.6326904296875}, {"docid": "docs/perl/SWF::DisplayItem.html", "score": 1966.084228515625}, {"docid": "docs/perl/SWF::Fill.html", "score": 1881.2818603515625}, {"docid": "docs/libming/newSWFJpegWithAlpha_fromInput.html", "score": 1821.6842041015625}, {"docid": "docs/libming/newSWFSound.html", "score": 1696.8775634765625}, {"docid": "docs/libming/newSWFVideoStream_fromFile.html", "score": 1666.7764892578125}, {"docid": "docs/perl/SWF::Movie.html", "score": 1501.83984375}, {"docid": "docs/perl/SWF::MovieClip.html", "score": 1354.748779296875}, {"docid": "py_ext/ming.py", "score": 1235.52685546875}, {"docid": "java_ext/SWFButtonI.java", "score": 1161.4202880859375}, {"docid": "docs/perl/SWF::Button.html", "score": 1045.9154052734375}, {"docid": "java_ext/SWFMovie.java", "score": 992.076416015625}, {"docid": "docs/perl/SWF::VideoStream.html", "score": 965.8469848632812}, {"docid": "java_ext/SWFMovieClip.java", "score": 950.5789184570312}, {"docid": "java_ext/SWFTextFieldI.java", "score": 900.5573120117188}, {"docid": "docs/perl/SWF.html", "score": 880.1614990234375}, {"docid": "docs/perl/SWF::FilterMatrix.html", "score": 845.2100830078125}, {"docid": "docs/perl/SWF::Blur.html", "score": 834.2811279296875}], "function_summary": "This code snippet implements the `parseSWF_FOCALGRADIENT` function, which parses focal gradient data from a SWF (Flash) file format. \n\nThe function reads and populates a focal gradient structure with the following key operations:\n\n1. **Gradient Properties**: Reads 2-bit values for `SpreadMode` and `InterpolationMode` that control how the gradient behaves at its boundaries and how colors are interpolated.\n\n2. **Gradient Count**: Reads a 4-bit value for `NumGradients` indicating how many color stops the gradient contains, with validation to ensure it doesn't exceed 15 gradients (with a warning printed if it does).\n\n3. **Gradient Records**: Iterates through each gradient record, calling `parseSWF_GRADIENTRECORD` to parse individual color stops that define the gradient's color transitions.\n\n4. **Focal Point**: Reads a 16-bit unsigned integer representing the focal point of the gradient, which determines where the gradient's center appears to be positioned.\n\nThis function is part of a larger SWF file parser and specifically handles focal gradients, which are radial gradients with an adjustable focal point that can create more complex lighting and shading effects compared to standard radial gradients."}
{"instance_id": "GioldDiorld_CVE-2018-11095", "hits": [{"docid": "docs/perl/SWF::Movie.html", "score": 2595.412109375}, {"docid": "docs/perl/SWF::VideoStream.html", "score": 2515.915283203125}, {"docid": "py_ext/ming.py", "score": 1976.1109619140625}, {"docid": "java_ext/SWFButtonI.java", "score": 1710.536865234375}, {"docid": "docs/perl/SWF::MovieClip.html", "score": 1651.795654296875}, {"docid": "docs/perl/SWF::Button.html", "score": 1595.241943359375}, {"docid": "docs/perl/SWF::DisplayItem.html", "score": 1535.667236328125}, {"docid": "java_ext/SWFObject.java", "score": 1491.0245361328125}, {"docid": "util/swftoperl.html", "score": 1324.1343994140625}, {"docid": "java_ext/SWFTextFieldI.java", "score": 1312.0887451171875}, {"docid": "docs/libming/SWFAction_getByteCode.html", "score": 1291.8980712890625}, {"docid": "docs/libming/SWFAction_compile.html", "score": 1266.9443359375}, {"docid": "docs/perl/SWF::Action.html", "score": 1154.235107421875}, {"docid": "docs/perl/SWF::TextField.html", "score": 1097.661865234375}, {"docid": "docs/libming/readMP3Header.html", "score": 1085.2918701171875}, {"docid": "java_ext/SWFShape.java", "score": 1064.2080078125}, {"docid": "docs/perl/SWF.html", "score": 1045.78955078125}, {"docid": "java_ext/SWFMovie.java", "score": 1031.4603271484375}, {"docid": "py_ext/Zwiff/__init__.py", "score": 989.790771484375}, {"docid": "docs/perl/SWF::Text.html", "score": 967.377685546875}], "function_summary": "This code snippet implements a bounds-checking helper function called `OpCode` that safely retrieves the action code from an array of SWF (Flash) actions.\n\n**Key functionality:**\n\n1. **Bounds validation**: The function first checks if the requested index `n` is valid by ensuring it's not zero and doesn't exceed the maximum array size `maxn`\n\n2. **Error handling**: If the bounds check fails, it optionally logs a debug warning (when `DEBUG` is defined) showing the requested index and maximum allowed value, then returns a sentinel value of `-999` to indicate an error\n\n3. **Safe access**: If the index is valid, it safely accesses the `actions` array at position `n` and returns the `ActionCode` field from the `SWF_ACTIONRECORD` structure\n\nThis function appears to be part of a Flash/SWF decompiler that processes ActionScript bytecode. The bounds checking is crucial for preventing buffer overflows and crashes when analyzing potentially malformed or corrupted SWF files. The `-999` return value serves as an error indicator that calling code can check for to handle invalid array access attempts gracefully.\n\nThe function is used throughout the decompiler to safely examine action opcodes before processing them."}
{"instance_id": "Choser_CVE-2018-11813", "hits": [{"docid": "doc/html/group___turbo_j_p_e_g.html", "score": 945.2338256835938}, {"docid": "java/TJBench.java", "score": 777.4833984375}, {"docid": "java/org/libjpegturbo/turbojpeg/TJ.java", "score": 748.1237182617188}, {"docid": "java/TJExample.java", "score": 679.5010986328125}, {"docid": "java/org/libjpegturbo/turbojpeg/TJDecompressor.java", "score": 675.9434204101562}, {"docid": "java/org/libjpegturbo/turbojpeg/TJCompressor.java", "score": 650.7393188476562}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJ.html", "score": 649.4083251953125}, {"docid": "java/org/libjpegturbo/turbojpeg/YUVImage.java", "score": 619.6282958984375}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJDecompressor.html", "score": 606.7081298828125}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJCompressor.html", "score": 599.0695190429688}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/YUVImage.html", "score": 591.61181640625}, {"docid": "java/doc/index-all.html", "score": 560.25048828125}, {"docid": "java/TJUnitTest.java", "score": 556.7216796875}, {"docid": "java/org/libjpegturbo/turbojpeg/TJTransformer.java", "score": 535.0587158203125}, {"docid": "doc/html/jquery.js", "score": 502.7455139160156}, {"docid": "java/org/libjpegturbo/turbojpeg/TJTransform.java", "score": 499.4331970214844}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJTransformer.html", "score": 496.4635009765625}, {"docid": "doc/html/search/search.js", "score": 469.3247985839844}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJTransform.html", "score": 452.1505126953125}, {"docid": "doc/html/structtjregion.html", "score": 423.5910949707031}], "function_summary": "This code snippet contains two functions that read pixel data from Targa image files:\n\n**`read_non_rle_pixel`** (lines 128-135): A straightforward function that reads one uncompressed pixel from the input file. It reads `pixel_size` bytes sequentially using `getc()` and stores them in the `tga_pixel` array.\n\n**`read_rle_pixel`** (lines 139-163): A more complex function that handles Run-Length Encoded (RLE) compressed Targa pixels. RLE compression reduces file size by encoding sequences of identical pixels. The function implements the following logic:\n\n1. **Pixel duplication**: If `dup_pixel_count > 0`, it reuses the previously read pixel data without reading new bytes\n2. **Block header processing**: When `block_count` reaches zero, it reads a new RLE block header byte:\n   - If the high bit (0x80) is set, it indicates a run of duplicate pixels\n   - Otherwise, it indicates a run of literal (different) pixels\n3. **Pixel reading**: For new pixels, it reads `pixel_size` bytes from the file\n\nBoth functions store pixel data in the `sinfo->tga_pixel` array. The RLE version efficiently handles compressed data by tracking state information (`dup_pixel_count` and `block_count`) to minimize file I/O operations while decompressing the pixel stream."}
{"instance_id": "Choser_CVE-2018-14498", "hits": [{"docid": "doc/html/group___turbo_j_p_e_g.html", "score": 1129.882568359375}, {"docid": "java/TJBench.java", "score": 1048.498779296875}, {"docid": "java/org/libjpegturbo/turbojpeg/TJ.java", "score": 879.7077026367188}, {"docid": "java/TJUnitTest.java", "score": 849.3079223632812}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJ.html", "score": 822.3784790039062}, {"docid": "java/org/libjpegturbo/turbojpeg/TJDecompressor.java", "score": 799.8220825195312}, {"docid": "java/org/libjpegturbo/turbojpeg/TJCompressor.java", "score": 797.9255981445312}, {"docid": "java/TJExample.java", "score": 786.0656127929688}, {"docid": "java/org/libjpegturbo/turbojpeg/YUVImage.java", "score": 719.2396240234375}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/YUVImage.html", "score": 705.5695190429688}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJCompressor.html", "score": 679.0639038085938}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJDecompressor.html", "score": 677.6447143554688}, {"docid": "doc/html/jquery.js", "score": 661.0493774414062}, {"docid": "java/doc/index-all.html", "score": 609.3610229492188}, {"docid": "doc/html/search/search.js", "score": 576.54248046875}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJTransformer.html", "score": 565.3922729492188}, {"docid": "java/org/libjpegturbo/turbojpeg/TJTransformer.java", "score": 562.9202270507812}, {"docid": "java/org/libjpegturbo/turbojpeg/TJTransform.java", "score": 547.3046875}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJTransform.html", "score": 505.8533935546875}, {"docid": "doc/html/structtjtransform.html", "score": 466.3576965332031}], "function_summary": "This code snippet is the `get_8bit_row` function that processes one row of an 8-bit colormapped BMP image for JPEG compression. Here's its main functionality:\n\n**Input Source Handling:**\n- Retrieves pixel data either from a virtual array (if `use_inversion_array` is true) or directly from the input file buffer\n- The virtual array method allows reading bottom-up BMP data in top-down order\n\n**Colormap Expansion:**\nThe function's core purpose is to expand 8-bit palette indices into full color values by:\n- Reading each pixel's colormap index value\n- Looking up the corresponding RGB values in the stored colormap\n- Converting to the target color space\n\n**Color Space Support:**\n- **Grayscale**: Maps index to single grayscale value\n- **CMYK**: Converts RGB colormap values to CMYK using `rgb_to_cmyk()`\n- **RGB variants**: Maps to appropriate RGB channels (red, green, blue) with optional alpha channel support\n\n**Alpha Channel Handling:**\n- For color spaces with alpha channels, sets alpha to 0xFF (fully opaque)\n- Uses color space-specific pixel size and channel indexing\n\nThe function processes the entire row pixel by pixel, performing the colormap lookup and color space conversion, then returns 1 to indicate one row was successfully processed."}
{"instance_id": "Choser_CVE-2018-19664", "hits": [{"docid": "doc/html/group___turbo_j_p_e_g.html", "score": 806.8735961914062}, {"docid": "java/TJBench.java", "score": 763.7100830078125}, {"docid": "java/TJExample.java", "score": 716.7619018554688}, {"docid": "java/org/libjpegturbo/turbojpeg/TJ.java", "score": 660.9102172851562}, {"docid": "java/TJUnitTest.java", "score": 606.6436767578125}, {"docid": "java/org/libjpegturbo/turbojpeg/TJDecompressor.java", "score": 594.4487915039062}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJ.html", "score": 575.3759765625}, {"docid": "java/org/libjpegturbo/turbojpeg/TJCompressor.java", "score": 543.159423828125}, {"docid": "java/org/libjpegturbo/turbojpeg/YUVImage.java", "score": 522.9451293945312}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJDecompressor.html", "score": 515.4628295898438}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/YUVImage.html", "score": 492.6748962402344}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJCompressor.html", "score": 473.3319091796875}, {"docid": "doc/html/jquery.js", "score": 452.70819091796875}, {"docid": "doc/html/search/search.js", "score": 444.1117858886719}, {"docid": "java/doc/index-all.html", "score": 401.8800964355469}, {"docid": "java/org/libjpegturbo/turbojpeg/TJTransform.java", "score": 387.5751953125}, {"docid": "java/org/libjpegturbo/turbojpeg/TJTransformer.java", "score": 381.8725891113281}, {"docid": "doc/html/structtjtransform.html", "score": 366.3642883300781}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJTransformer.html", "score": 362.7450866699219}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJTransform.html", "score": 350.45989990234375}], "function_summary": "This code snippet is part of the BMP output module initialization in a JPEG decompression library. It assigns the appropriate pixel writing function based on the output color space format:\n\n**Key functionality:**\n- **Grayscale output** (JCS_GRAYSCALE): Uses `put_gray_rows` function for single-channel pixel data\n- **RGB output** (extended RGB formats): \n  - If colors are quantized (reduced palette), uses `put_gray_rows` \n  - If full color (unquantized), uses `put_pixel_rows` for 24-bit RGB data\n- **Special formats** (JCS_RGB565, JCS_CMYK): Uses `put_pixel_rows` to handle 16-bit RGB565 or CMYK color conversion to 24-bit RGB\n- **Error handling**: Throws an error for unsupported color spaces\n\nThe logic determines which pixel writing method to use based on whether the output needs color conversion, quantization, or special format handling. `put_gray_rows` is used for simpler cases (grayscale or indexed color), while `put_pixel_rows` handles more complex color conversions and 24-bit output. This ensures the BMP file is written with the correct pixel format and color representation."}
{"instance_id": "Choser_CVE-2018-20330", "hits": [{"docid": "doc/html/group___turbo_j_p_e_g.html", "score": 5325.29150390625}, {"docid": "java/TJBench.java", "score": 4525.43896484375}, {"docid": "java/org/libjpegturbo/turbojpeg/TJDecompressor.java", "score": 4193.1103515625}, {"docid": "java/TJUnitTest.java", "score": 3950.854248046875}, {"docid": "java/org/libjpegturbo/turbojpeg/TJCompressor.java", "score": 3682.02880859375}, {"docid": "java/org/libjpegturbo/turbojpeg/YUVImage.java", "score": 3496.33056640625}, {"docid": "java/TJExample.java", "score": 3315.398681640625}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJDecompressor.html", "score": 3046.03369140625}, {"docid": "java/org/libjpegturbo/turbojpeg/TJ.java", "score": 2897.54833984375}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/YUVImage.html", "score": 2864.1865234375}, {"docid": "java/org/libjpegturbo/turbojpeg/TJTransformer.java", "score": 2833.376953125}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJ.html", "score": 2784.9833984375}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJCompressor.html", "score": 2732.53125}, {"docid": "doc/html/jquery.js", "score": 2526.512451171875}, {"docid": "java/doc/index-all.html", "score": 2328.724853515625}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJTransformer.html", "score": 2139.580810546875}, {"docid": "doc/html/search/search.js", "score": 2104.75244140625}, {"docid": "doc/html/search/all_74.js", "score": 1974.7689208984375}, {"docid": "java/org/libjpegturbo/turbojpeg/TJTransform.java", "score": 1692.0677490234375}, {"docid": "doc/html/structtjtransform.html", "score": 1478.623779296875}], "function_summary": "This code snippet is part of the `tjLoadImage()` function in the TurboJPEG library, which loads image files (BMP or PPM format) into memory. Here's what it does:\n\n**Main functionality:**\n- **Input validation**: Checks that required parameters (filename, width, height, pixelFormat) are valid and that alignment is a power of 2\n- **Initialization**: Creates a TurboJPEG compression handle and opens the input file for reading\n- **File type detection**: Reads the first character to determine if it's a BMP file ('B') or PPM file ('P')\n- **Format-specific setup**: Initializes appropriate bitmap/PPM loaders and sets inversion flags based on the file type and bottom-up flag\n- **Image processing preparation**: Configures the JPEG compression info structure, starts input processing, and retrieves image dimensions\n- **Memory allocation**: Calculates the pitch (row stride) with proper alignment and allocates a destination buffer\n\n**Key operations:**\n- Error handling using `setjmp/longjmp` for JPEG library errors\n- File I/O with proper error checking\n- Memory management with alignment considerations\n- Support for both BMP and PPM image formats\n\nThe snippet sets up the foundation for reading image data into a properly aligned memory buffer, with the actual pixel data reading occurring in subsequent code."}
{"instance_id": "Choser_CVE-2019-2201", "hits": [{"docid": "java/TJBench.java", "score": 6933.9052734375}, {"docid": "java/TJUnitTest.java", "score": 3286.511474609375}, {"docid": "doc/html/group___turbo_j_p_e_g.html", "score": 2693.586181640625}, {"docid": "java/TJExample.java", "score": 2619.61962890625}, {"docid": "doc/html/jquery.js", "score": 1867.1785888671875}, {"docid": "java/org/libjpegturbo/turbojpeg/TJDecompressor.java", "score": 1812.3653564453125}, {"docid": "java/org/libjpegturbo/turbojpeg/TJCompressor.java", "score": 1765.0333251953125}, {"docid": "java/org/libjpegturbo/turbojpeg/TJTransformer.java", "score": 1542.4364013671875}, {"docid": "java/org/libjpegturbo/turbojpeg/YUVImage.java", "score": 1503.966552734375}, {"docid": "java/doc/index-all.html", "score": 1497.6163330078125}, {"docid": "java/org/libjpegturbo/turbojpeg/TJ.java", "score": 1406.683837890625}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/YUVImage.html", "score": 1343.223388671875}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJ.html", "score": 1333.907958984375}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJDecompressor.html", "score": 1307.16357421875}, {"docid": "doc/html/search/search.js", "score": 1244.4627685546875}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJCompressor.html", "score": 1205.9337158203125}, {"docid": "java/org/libjpegturbo/turbojpeg/TJTransform.java", "score": 1172.9871826171875}, {"docid": "doc/html/search/all_74.js", "score": 1170.4385986328125}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJTransformer.html", "score": 1002.8338012695312}, {"docid": "java/doc/org/libjpegturbo/turbojpeg/TJTransform.html", "score": 916.234619140625}], "function_summary": "This code snippet is part of a JPEG decompression benchmarking function in the tjbench utility. Here's what it does:\n\n**Buffer Initialization:**\n- Sets the destination buffer (`dstBuf`) to a gray value (127) to detect whether the decompressor actually writes to it\n- If YUV mode is enabled (`doYUV`), it calculates the required YUV buffer size, allocates memory for it, and initializes it to gray (127)\n\n**Benchmark Setup:**\n- Initializes benchmarking variables (`iter = -1`, `elapsed = 0`) \n- Enters the main benchmarking loop that will repeatedly perform decompression operations to measure performance\n\n**Tile Processing Setup:**\n- Begins setting up nested loops to process image tiles\n- The outer loop iterates through tile rows, advancing the destination pointer (`dstPtr`) by the appropriate pitch and tile height for each row\n\nThis snippet is essentially preparing for and beginning the core decompression benchmark, where the image will be processed either as a whole or in tiles (depending on the `doTile` setting). The gray buffer initialization serves as a debugging aid to verify that decompression actually occurs, while the YUV buffer allocation supports testing YUV-based decompression workflows."}
{"instance_id": "jzquan_CVE-2017-9048", "hits": [{"docid": "doc/libxml2-api.xml", "score": 14655.22265625}, {"docid": "doc/html/libxml-valid.html", "score": 14326.17578125}, {"docid": "doc/devhelp/libxml2-valid.html", "score": 14238.287109375}, {"docid": "doc/html/libxml-tree.html", "score": 13350.087890625}, {"docid": "doc/devhelp/libxml2-tree.html", "score": 13245.4208984375}, {"docid": "doc/xml.html", "score": 12646.7880859375}, {"docid": "gentest.py", "score": 10658.8447265625}, {"docid": "doc/html/libxml-parserInternals.html", "score": 10203.6865234375}, {"docid": "doc/devhelp/libxml2-parserInternals.html", "score": 10190.3291015625}, {"docid": "doc/html/libxml-parser.html", "score": 9876.95703125}, {"docid": "doc/devhelp/libxml2-parser.html", "score": 9835.4833984375}, {"docid": "doc/news.html", "score": 9612.7236328125}, {"docid": "doc/html/libxml-HTMLparser.html", "score": 9221.7060546875}, {"docid": "doc/devhelp/libxml2-HTMLparser.html", "score": 9130.171875}, {"docid": "doc/xmlreader.html", "score": 8624.5478515625}, {"docid": "doc/html/libxml-xpathInternals.html", "score": 8541.232421875}, {"docid": "doc/devhelp/libxml2-xpathInternals.html", "score": 8427.2939453125}, {"docid": "doc/html/libxml-xmlreader.html", "score": 8121.57958984375}, {"docid": "doc/devhelp/libxml2-xmlreader.html", "score": 8031.73828125}, {"docid": "python/libxml.py", "score": 8020.40283203125}], "function_summary": "This code snippet is part of the `xmlSnprintfElementContent` function that formats XML element content definitions into a string buffer. The function handles different types of XML element content:\n\n**Key functionality:**\n\n1. **XML_ELEMENT_CONTENT_ELEMENT**: Formats element names, including namespace prefixes if present (e.g., \"prefix:elementname\")\n\n2. **XML_ELEMENT_CONTENT_SEQ**: Handles sequence content models, recursively formatting child elements separated by commas (\" , \"). It determines whether to add parentheses around sub-expressions based on their type and occurrence patterns.\n\n3. **XML_ELEMENT_CONTENT_OR**: Handles choice content models, recursively formatting alternatives separated by pipes (\" | \"). Similar parenthesization logic applies.\n\n**Important logic:**\n- **Buffer overflow protection**: Checks remaining buffer space before adding content and appends \"...\" if space is insufficient\n- **Parenthesization rules**: Automatically adds parentheses around complex sub-expressions (OR/SEQ types) while avoiding unnecessary parentheses around simple elements\n- **Recursive processing**: Calls itself to handle nested content structures\n- **Occurrence handling**: Considers element occurrence patterns when deciding parenthesization\n\nThe function is designed for debugging purposes to create human-readable representations of XML DTD element content models, with safety checks to prevent buffer overruns."}
{"instance_id": "YilZhong_CVE-2017-5969", "hits": [{"docid": "doc/libxml2-api.xml", "score": 14672.96484375}, {"docid": "doc/html/libxml-valid.html", "score": 14354.1083984375}, {"docid": "doc/devhelp/libxml2-valid.html", "score": 14264.65625}, {"docid": "doc/html/libxml-tree.html", "score": 13376.4248046875}, {"docid": "doc/devhelp/libxml2-tree.html", "score": 13273.365234375}, {"docid": "doc/xml.html", "score": 12670.1875}, {"docid": "gentest.py", "score": 10693.36328125}, {"docid": "doc/html/libxml-parserInternals.html", "score": 10223.0595703125}, {"docid": "doc/devhelp/libxml2-parserInternals.html", "score": 10210.251953125}, {"docid": "doc/html/libxml-parser.html", "score": 9908.525390625}, {"docid": "doc/devhelp/libxml2-parser.html", "score": 9867.3095703125}, {"docid": "doc/news.html", "score": 9639.63671875}, {"docid": "doc/html/libxml-HTMLparser.html", "score": 9245.3154296875}, {"docid": "doc/devhelp/libxml2-HTMLparser.html", "score": 9152.978515625}, {"docid": "doc/xmlreader.html", "score": 8652.892578125}, {"docid": "doc/html/libxml-xpathInternals.html", "score": 8561.708984375}, {"docid": "doc/devhelp/libxml2-xpathInternals.html", "score": 8446.6884765625}, {"docid": "doc/html/libxml-xmlreader.html", "score": 8159.25732421875}, {"docid": "doc/devhelp/libxml2-xmlreader.html", "score": 8069.2431640625}, {"docid": "python/libxml.py", "score": 8045.25732421875}], "function_summary": "This code snippet is part of the `xmlSnprintfElementContent` function in libxml2's validation module. It handles formatting XML element content declarations for debug output.\n\n**Main functionality:**\n- Processes `XML_ELEMENT_CONTENT_ELEMENT` type content nodes\n- Calculates the required buffer space for a qualified name (QName)\n- Constructs qualified element names in the format `prefix:name`\n\n**Key operations:**\n1. **Length calculation**: Computes the total length needed for the element name, including prefix and colon separator if present\n2. **Buffer overflow protection**: Checks if remaining buffer space is sufficient (needs at least `qnameLen + 10` characters)\n3. **Fallback handling**: If insufficient space, appends \"...\" and returns early to prevent buffer overflow\n4. **Prefix handling**: Begins constructing the qualified name by first adding the namespace prefix if it exists\n\n**Important logic:**\n- The function prioritizes safety by checking buffer bounds before writing\n- It accounts for both the element name and optional namespace prefix\n- The `+ 1` accounts for the colon separator between prefix and local name\n- The `+ 10` provides additional buffer margin for safety\n\nThis is part of libxml2's DTD validation system, specifically used for generating human-readable representations of element content models for debugging and error reporting."}
{"instance_id": "Choser_CVE-2014-0160", "hits": [{"docid": "doc/openssl_button.html", "score": 32.53779983520508}], "function_summary": "This code snippet is part of the `dtls1_process_heartbeat` function that handles DTLS heartbeat messages. Here's what it does:\n\n**Main Functionality:**\n1. **Parse incoming heartbeat message**: Extracts the heartbeat type and payload length from the received data\n2. **Process heartbeat requests**: When receiving a `TLS1_HB_REQUEST`, it creates and sends a heartbeat response\n\n**Key Operations:**\n- Reads the heartbeat type (`hbtype`) and payload length from the incoming message\n- Calls a message callback if configured for logging/monitoring purposes\n- For heartbeat requests:\n  - Allocates memory for the response buffer (message type + payload length + payload + padding)\n  - Constructs the response with `TLS1_HB_RESPONSE` type\n  - Copies the original payload back to the sender (echo functionality)\n  - Adds random padding for security\n  - Sends the response using `dtls1_write_bytes()`\n  - Triggers another callback for the outgoing message\n  - Frees the allocated buffer\n\n**Important Logic:**\nThis implements the server-side heartbeat response mechanism in DTLS, which is used to keep connections alive and verify that the peer is still reachable. The function essentially echoes back the payload it received, which is a standard heartbeat protocol behavior."}
{"instance_id": "Choser_CVE-2017-9047", "hits": [{"docid": "doc/libxml2-api.xml", "score": 14658.5537109375}, {"docid": "doc/html/libxml-valid.html", "score": 14337.859375}, {"docid": "doc/devhelp/libxml2-valid.html", "score": 14248.7421875}, {"docid": "doc/html/libxml-tree.html", "score": 13369.26171875}, {"docid": "doc/devhelp/libxml2-tree.html", "score": 13266.3515625}, {"docid": "doc/xml.html", "score": 12648.0146484375}, {"docid": "gentest.py", "score": 10670.4033203125}, {"docid": "doc/html/libxml-parserInternals.html", "score": 10211.9609375}, {"docid": "doc/devhelp/libxml2-parserInternals.html", "score": 10199.0556640625}, {"docid": "doc/html/libxml-parser.html", "score": 9898.447265625}, {"docid": "doc/devhelp/libxml2-parser.html", "score": 9856.2724609375}, {"docid": "doc/news.html", "score": 9614.470703125}, {"docid": "doc/html/libxml-HTMLparser.html", "score": 9226.1103515625}, {"docid": "doc/devhelp/libxml2-HTMLparser.html", "score": 9133.60546875}, {"docid": "doc/xmlreader.html", "score": 8628.2978515625}, {"docid": "doc/html/libxml-xpathInternals.html", "score": 8554.0908203125}, {"docid": "doc/devhelp/libxml2-xpathInternals.html", "score": 8439.7802734375}, {"docid": "doc/html/libxml-xmlreader.html", "score": 8136.1796875}, {"docid": "doc/devhelp/libxml2-xmlreader.html", "score": 8045.78662109375}, {"docid": "python/libxml.py", "score": 8033.38525390625}], "function_summary": "This code snippet is part of the `xmlSnprintfElementContent` function, which formats XML element content into a string buffer for debugging purposes. \n\nThe snippet handles the `XML_ELEMENT_CONTENT_ELEMENT` case in a switch statement. Its main functionality is:\n\n1. **Prefix handling**: If the element has a namespace prefix, it checks if there's enough buffer space remaining (at least prefix length + 10 characters). If not, it appends \" ...\" to indicate truncation and returns early.\n\n2. **Prefix formatting**: If space is available, it appends the prefix followed by a colon (\":\") to the buffer using `strcat()`.\n\n3. **Name space check**: After handling the prefix, it performs another buffer space check for the element name (ensuring at least name length + 10 characters remain).\n\nThe code uses defensive programming by checking buffer bounds before each append operation to prevent buffer overflows. The `xmlStrlen()` function is used to get string lengths, and the function maintains a safety margin of 10 characters to account for additional formatting that may follow.\n\nThis is part of a larger XML validation system that generates human-readable representations of element content models for error reporting and debugging."}
{"instance_id": "Capsa_CVE-2022-26049", "hits": [{"docid": "src/main/java/com/diffplug/gradle/ZipMisc.java", "score": 953.0687866210938}, {"docid": "src/main/java/com/diffplug/gradle/eclipserunner/launcher/Main.java", "score": 288.80450439453125}, {"docid": "src/main/java/com/diffplug/gradle/FileMisc.java", "score": 224.7136993408203}, {"docid": "src/main/java/com/diffplug/gradle/osgi/BndManifestPlugin.java", "score": 222.9113006591797}, {"docid": "src/main/java/com/diffplug/gradle/JavaExecWinFriendly.java", "score": 192.27139282226562}, {"docid": "src/main/java/com/diffplug/gradle/oomph/BrandingProductPlugin.java", "score": 177.45899963378906}, {"docid": "src/main/java/com/diffplug/gradle/JavaExecable.java", "score": 175.8874053955078}, {"docid": "src/main/java/com/diffplug/gradle/eclipse/BuildPropertiesPlugin.java", "score": 168.4311981201172}, {"docid": "src/main/java/com/diffplug/gradle/oomph/OomphIdeExtension.java", "score": 164.3708038330078}, {"docid": "src/main/java/com/diffplug/gradle/ConfigMisc.java", "score": 159.86810302734375}, {"docid": "src/main/java/com/diffplug/gradle/CmdLine.java", "score": 154.9949951171875}, {"docid": "src/main/java/com/diffplug/gradle/pde/PdeInstallation.java", "score": 146.2843017578125}, {"docid": "src/main/java/com/diffplug/gradle/SerializableMisc.java", "score": 144.74220275878906}, {"docid": "src/main/java/com/diffplug/gradle/oomph/WorkspaceRegistry.java", "score": 143.06260681152344}, {"docid": "src/main/java/com/diffplug/gradle/eclipse/ProjectDepsPlugin.java", "score": 142.43020629882812}, {"docid": "src/main/java/com/diffplug/gradle/p2/P2BootstrapInstallation.java", "score": 137.63079833984375}, {"docid": "src/main/java/com/diffplug/gradle/OrderingConstraints.java", "score": 137.5843963623047}, {"docid": "src/main/java/com/diffplug/gradle/eclipse/MavenCentralMapping.java", "score": 136.0509033203125}, {"docid": "src/main/java/com/diffplug/gradle/pde/PdeBuildTask.java", "score": 133.39950561523438}, {"docid": "src/main/java/com/diffplug/gradle/p2/P2Model.java", "score": 133.25689697265625}], "function_summary": "This code snippet implements the core logic for unzipping/extracting a ZIP file to a destination directory. Here's what it does:\n\n**Main Functionality:**\n- Opens a ZIP file as a `ZipInputStream` with buffered reading for better performance\n- Iterates through each entry in the ZIP file using `getNextEntry()`\n- For each entry, creates a corresponding `File` object in the destination directory\n\n**Key Operations:**\n1. **Directory handling**: If an entry is a directory, it creates the directory structure using `FileMisc.mkdirs()`\n2. **File extraction**: If an entry is a regular file:\n   - Creates parent directories as needed\n   - Opens a buffered output stream to write the file\n   - Copies the content from the ZIP input stream to the output file using a helper `copy()` method\n\n**Important Logic:**\n- Uses try-with-resources to ensure proper cleanup of streams\n- Maintains the original directory structure from the ZIP file\n- Handles both files and directories appropriately\n- Uses buffered streams for efficient I/O operations\n\nThis is a standard ZIP extraction implementation that safely extracts all contents while preserving the archive's internal structure."}
{"instance_id": "Capsa_CVE-2022-23457", "hits": [{"docid": "src/main/java/org/owasp/esapi/reference/DefaultValidator.java", "score": 6462.38916015625}, {"docid": "src/main/java/org/owasp/esapi/Validator.java", "score": 4850.68408203125}, {"docid": "src/main/java/org/owasp/esapi/filters/SecurityWrapperRequest.java", "score": 3049.93994140625}, {"docid": "src/main/java/org/owasp/esapi/reference/validation/StringValidationRule.java", "score": 2870.144287109375}, {"docid": "src/main/java/org/owasp/esapi/reference/validation/HTMLValidationRule.java", "score": 2728.938232421875}, {"docid": "src/main/java/org/owasp/esapi/reference/validation/NumberValidationRule.java", "score": 2702.751953125}, {"docid": "src/main/java/org/owasp/esapi/reference/validation/DateValidationRule.java", "score": 2670.647705078125}, {"docid": "src/main/java/org/owasp/esapi/reference/validation/BaseValidationRule.java", "score": 2637.243896484375}, {"docid": "src/main/java/org/owasp/esapi/reference/validation/IntegerValidationRule.java", "score": 2612.716796875}, {"docid": "src/main/java/org/owasp/esapi/reference/validation/CreditCardValidationRule.java", "score": 2355.74072265625}, {"docid": "src/main/java/org/owasp/esapi/Encoder.java", "score": 2352.2587890625}, {"docid": "src/main/java/org/owasp/esapi/reference/DefaultHTTPUtilities.java", "score": 2244.84619140625}, {"docid": "src/main/java/org/owasp/esapi/reference/DefaultEncoder.java", "score": 2191.823486328125}, {"docid": "src/main/java/org/owasp/esapi/crypto/KeyDerivationFunction.java", "score": 2171.773681640625}, {"docid": "src/main/java/org/owasp/esapi/reference/crypto/JavaEncryptor.java", "score": 2061.8076171875}, {"docid": "src/main/java/org/owasp/esapi/reference/accesscontrol/FileBasedACRs.java", "score": 1985.2393798828125}, {"docid": "src/main/java/org/owasp/esapi/ValidationRule.java", "score": 1983.9034423828125}, {"docid": "src/main/java/org/owasp/esapi/filters/SecurityWrapperResponse.java", "score": 1958.736328125}, {"docid": "src/main/java/org/owasp/esapi/HTTPUtilities.java", "score": 1915.7232666015625}, {"docid": "src/main/java/org/owasp/esapi/reference/DefaultSecurityConfiguration.java", "score": 1915.2318115234375}], "function_summary": "This code snippet implements directory path validation as part of the OWASP ESAPI security framework. The main functionality includes:\n\n**Input Validation**: First checks if the input directory path is empty, returning null if allowed or throwing a ValidationException if not.\n\n**File System Checks**: Validates that:\n- The directory exists on the file system\n- The path actually points to a directory (not a file)\n- The specified parent directory exists and is valid\n- The target directory is located within the specified parent directory (using canonical paths to prevent directory traversal attacks)\n\n**Security Validation**: \n- Uses `getCanonicalPath()` to resolve any symbolic links, relative paths (like `../`), or other path manipulation attempts\n- Validates the canonical path against a \"DirectoryName\" pattern using a file validator\n- Ensures the canonical path matches the original input to detect path manipulation attacks\n\n**Error Handling**: Throws descriptive ValidationExceptions for various failure scenarios (missing directory, invalid parent, path traversal attempts, etc.) and wraps any unexpected exceptions.\n\nThis validation is crucial for preventing directory traversal attacks where attackers might try to access files outside of intended directories using paths like `../../etc/passwd`. The canonical path comparison helps ensure the validated directory is truly within the expected parent directory."}
{"instance_id": "Capsa_CVE-2022-21675", "hits": [{"docid": "src/main/java/the/bytecode/club/bytecodeviewer/util/ZipUtils.java", "score": 1191.14697265625}, {"docid": "src/main/java/the/bytecode/club/bytecodeviewer/util/JarUtils.java", "score": 439.4396057128906}, {"docid": "src/main/java/the/bytecode/club/bytecodeviewer/bootloader/Boot.java", "score": 340.1299133300781}, {"docid": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/ProcyonDecompiler.java", "score": 319.28131103515625}, {"docid": "src/main/java/the/bytecode/club/bytecodeviewer/resources/ResourceContainerImporter.java", "score": 311.39239501953125}, {"docid": "src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/CFRDecompiler.java", "score": 311.0419921875}, {"docid": "src/main/java/the/bytecode/club/bytecodeviewer/bootloader/UpdateCheck.java", "score": 288.6831970214844}, {"docid": "src/main/java/the/bytecode/club/bytecodeviewer/util/MiscUtils.java", "score": 273.6724853515625}, {"docid": "src/main/java/the/bytecode/club/bytecodeviewer/resources/importing/impl/XAPKResourceImporter.java", "score": 268.7195129394531}, {"docid": "src/main/java/the/bytecode/club/bytecodeviewer/BytecodeViewer.java", "score": 254.81069946289062}, {"docid": "src/main/java/me/konloch/kontainer/io/DiskWriter.java", "score": 232.1284942626953}, {"docid": "src/main/java/the/bytecode/club/bytecodeviewer/bootloader/resource/external/ExternalLibrary.java", "score": 225.73309326171875}, {"docid": "src/main/java/the/bytecode/club/bytecodeviewer/gui/resourcelist/ResourceListPane.java", "score": 219.29739379882812}, {"docid": "src/main/java/the/bytecode/club/bytecodeviewer/plugin/strategies/CompiledJavaPluginLaunchStrategy.java", "score": 218.3022003173828}, {"docid": "src/main/java/the/bytecode/club/bytecodeviewer/CommandLineInput.java", "score": 211.0612030029297}, {"docid": "src/main/java/the/bytecode/club/bytecodeviewer/resources/ResourceDecompiling.java", "score": 208.09249877929688}, {"docid": "src/main/resources/translations/html/intro.english.draft.html", "score": 205.60940551757812}, {"docid": "src/main/java/the/bytecode/club/bytecodeviewer/resources/ExternalResources.java", "score": 203.24440002441406}, {"docid": "src/main/java/the/bytecode/club/bytecodeviewer/util/FileDrop.java", "score": 199.08770751953125}, {"docid": "src/main/resources/translations/english.json", "score": 198.91400146484375}], "function_summary": "This code snippet is part of the `unzipFilesToPath` method that extracts files from a JAR/ZIP archive to a specified destination directory.\n\n**Key functionality:**\n\n1. **Opens the JAR file** using a try-with-resources block for automatic cleanup\n2. **Iterates through all entries** in the JAR file using an enumeration\n3. **Creates the full file path** by combining the destination directory with each entry's name\n4. **Ensures parent directories exist** by calling `mkdirs()` on the parent directory if it doesn't exist\n5. **Extracts file contents** for non-directory entries (those not ending with \"/\") by:\n   - Opening an input stream from the JAR entry\n   - Creating a file output stream to the destination file\n   - Reading bytes from the input stream and writing them to the output file\n\n**Important notes:**\n- There's commented-out code that would have pre-created all directories first\n- The current implementation creates parent directories on-demand as needed\n- Directory entries (ending with \"/\") are skipped during file extraction\n- The extraction uses a simple byte-by-byte copying approach via `is.read()` and `fos.write()`\n\nThis is a standard JAR/ZIP extraction implementation that handles both directory creation and file content extraction."}
{"instance_id": "Capsa_CVE-2024-1594", "hits": [{"docid": "mlflow/server/handlers.py", "score": 9929.041015625}, {"docid": "mlflow/server/auth/__init__.py", "score": 3282.728271484375}, {"docid": "mlflow/tracking/fluent.py", "score": 2551.342041015625}, {"docid": "mlflow/store/tracking/sqlalchemy_store.py", "score": 2519.413330078125}, {"docid": "mlflow/tracking/client.py", "score": 2375.400390625}, {"docid": "mlflow/store/tracking/file_store.py", "score": 2350.807373046875}, {"docid": "mlflow/tracking/_tracking_service/client.py", "score": 2307.744140625}, {"docid": "mlflow/transformers/__init__.py", "score": 2230.158935546875}, {"docid": "mlflow/pyfunc/__init__.py", "score": 2198.15576171875}, {"docid": "mlflow/cli.py", "score": 2173.40869140625}, {"docid": "mlflow/store/_unity_catalog/registry/rest_store.py", "score": 2138.1494140625}, {"docid": "mlflow/pyfunc/scoring_server/__init__.py", "score": 2137.21142578125}, {"docid": "mlflow/models/evaluation/base.py", "score": 2129.8515625}, {"docid": "mlflow/sklearn/__init__.py", "score": 2105.378662109375}, {"docid": "mlflow/sagemaker/__init__.py", "score": 2094.88037109375}, {"docid": "mlflow/store/artifact/databricks_artifact_repo.py", "score": 2038.76025390625}, {"docid": "mlflow/store/tracking/rest_store.py", "score": 2025.31005859375}, {"docid": "mlflow/pyspark/ml/__init__.py", "score": 2012.7510986328125}, {"docid": "mlflow/tensorflow/__init__.py", "score": 1979.2373046875}, {"docid": "mlflow/java/client/src/main/java/org/mlflow/api/proto/Service.java", "score": 1943.054443359375}], "function_summary": "This code snippet defines the `_create_experiment()` function, which is a Flask request handler for creating new MLflow experiments via the REST API.\n\n**Key functionality:**\n\n1. **Request validation**: Parses and validates the incoming request using a schema that requires:\n   - `name` (required string)\n   - `artifact_location` (optional string) \n   - `tags` (optional array)\n\n2. **Tag processing**: Converts request tags into `ExperimentTag` objects for internal use.\n\n3. **Security validation**: Parses the artifact location URL and validates its query string to prevent potential security attacks.\n\n4. **Experiment creation**: Calls the tracking store to create the experiment with the provided name, artifact location, and tags, returning a unique experiment ID.\n\n5. **Response formatting**: Constructs a JSON response containing the newly created experiment ID using the protobuf message format.\n\nThe function is decorated with `@catch_mlflow_exception` for error handling and `@_disable_if_artifacts_only` to ensure it's only available when the server is running in full mode (not artifacts-only mode). This is part of MLflow's experiment tracking system that allows users to organize their machine learning runs into logical groups."}
{"instance_id": "Capsa_CVE-2024-1593", "hits": [{"docid": "mlflow/server/handlers.py", "score": 11875.1875}, {"docid": "mlflow/server/auth/__init__.py", "score": 3889.276123046875}, {"docid": "mlflow/tracking/fluent.py", "score": 2837.0322265625}, {"docid": "mlflow/tracking/client.py", "score": 2783.84375}, {"docid": "mlflow/store/tracking/sqlalchemy_store.py", "score": 2702.12451171875}, {"docid": "mlflow/store/tracking/file_store.py", "score": 2579.92041015625}, {"docid": "mlflow/tracking/_tracking_service/client.py", "score": 2525.200927734375}, {"docid": "mlflow/store/_unity_catalog/registry/rest_store.py", "score": 2507.9169921875}, {"docid": "mlflow/cli.py", "score": 2501.47509765625}, {"docid": "mlflow/transformers/__init__.py", "score": 2497.2470703125}, {"docid": "mlflow/pyfunc/__init__.py", "score": 2492.255859375}, {"docid": "mlflow/sklearn/__init__.py", "score": 2472.29541015625}, {"docid": "mlflow/sagemaker/__init__.py", "score": 2445.279052734375}, {"docid": "mlflow/pyfunc/scoring_server/__init__.py", "score": 2400.776123046875}, {"docid": "mlflow/models/evaluation/base.py", "score": 2342.463623046875}, {"docid": "mlflow/tensorflow/__init__.py", "score": 2336.599365234375}, {"docid": "mlflow/store/artifact/databricks_artifact_repo.py", "score": 2314.962646484375}, {"docid": "mlflow/store/model_registry/sqlalchemy_store.py", "score": 2313.32666015625}, {"docid": "mlflow/spark/__init__.py", "score": 2296.672119140625}, {"docid": "mlflow/pyspark/ml/__init__.py", "score": 2293.566650390625}], "function_summary": "This code snippet implements the `_create_experiment` handler function for MLflow's REST API. Here's what it does:\n\n**Main Functionality:**\n- Handles HTTP requests to create a new MLflow experiment\n- Processes and validates incoming request data for experiment creation\n\n**Key Operations:**\n1. **Request Parsing & Validation**: Uses `_get_request_message()` to parse the incoming request into a `CreateExperiment` protobuf message, validating required fields:\n   - `name` (required string)\n   - `artifact_location` (optional string) \n   - `tags` (optional array)\n\n2. **Security Validation**: Parses the artifact location URL and validates its query string using `validate_query_string()` to prevent security attacks through malicious query parameters.\n\n3. **Tag Processing**: Converts request tags into `ExperimentTag` objects.\n\n4. **Experiment Creation**: Calls the tracking store to create the experiment with the provided name, artifact location, and tags.\n\n5. **Response Generation**: Creates a JSON response containing the newly created experiment's ID.\n\nThe function is decorated with `@catch_mlflow_exception` for error handling and `@_disable_if_artifacts_only` to ensure it's only available when the server isn't running in artifacts-only mode. This is a core API endpoint for MLflow's experiment tracking functionality."}
{"instance_id": "zju-cve-2021-3728", "hits": [{"docid": "routes/web.php", "score": 9882.2080078125}, {"docid": "routes/api.php", "score": 5020.6845703125}, {"docid": "resources/lang/en_US/firefly.php", "score": 3600.586669921875}, {"docid": "resources/lang/en_GB/firefly.php", "score": 3600.464599609375}, {"docid": "resources/lang/id_ID/firefly.php", "score": 3093.8505859375}, {"docid": "resources/lang/cs_CZ/firefly.php", "score": 3054.604248046875}, {"docid": "resources/lang/tr_TR/firefly.php", "score": 3013.260009765625}, {"docid": "routes/breadcrumbs.php", "score": 2961.316650390625}, {"docid": "resources/lang/nb_NO/firefly.php", "score": 2824.54638671875}, {"docid": "app/Http/Controllers/CurrencyController.php", "score": 2709.738037109375}, {"docid": "app/Http/Controllers/ReportController.php", "score": 2678.542236328125}, {"docid": "app/Http/Controllers/ProfileController.php", "score": 2674.9599609375}, {"docid": "app/Http/Controllers/Budget/BudgetLimitController.php", "score": 2621.389892578125}, {"docid": "resources/lang/zh_TW/firefly.php", "score": 2593.875732421875}, {"docid": "app/Http/Controllers/TagController.php", "score": 2544.403076171875}, {"docid": "app/Http/Controllers/Transaction/ConvertController.php", "score": 2487.99755859375}, {"docid": "app/Http/Controllers/Budget/ShowController.php", "score": 2481.473876953125}, {"docid": "app/Api/V1/Controllers/Models/TransactionCurrency/ListController.php", "score": 2467.9521484375}, {"docid": "app/Http/Controllers/Chart/BudgetController.php", "score": 2413.419921875}, {"docid": "app/Support/Http/Controllers/PeriodOverview.php", "score": 2408.126953125}], "function_summary": "This code snippet defines routes for the Budget Limit Controller within a Laravel web application (Firefly III, a personal finance manager).\n\n**Main functionality:**\n- **Delete budget limit**: GET route to `/budget-limits/delete/{budgetLimit}` that displays a delete confirmation page for a specific budget limit\n- **Update budget limit**: POST route to `/budget-limits/update/{budgetLimit}` that processes updates to an existing budget limit\n\n**Key characteristics:**\n- Routes are grouped under the `budget-limits` prefix with `budget-limits.` naming convention\n- Requires `user-full-auth` middleware (user must be fully authenticated)\n- Uses the `FireflyIII\\Http\\Controllers` namespace\n- Routes accept a `{budgetLimit}` parameter, likely representing the budget limit ID or model\n- Part of a larger budget management system within the personal finance application\n\n**Route purposes:**\n- `delete`: Shows confirmation interface before removing a budget limit\n- `update`: Handles form submission to modify budget limit details (amount, dates, etc.)\n\nThese routes enable users to manage their budget limits by providing deletion and modification capabilities within the broader budget management functionality of Firefly III."}
{"instance_id": "zju-cve-2021-3729", "hits": [{"docid": "routes/web.php", "score": 9870.7958984375}, {"docid": "routes/api.php", "score": 4986.95263671875}, {"docid": "resources/lang/en_US/firefly.php", "score": 3618.36865234375}, {"docid": "resources/lang/en_GB/firefly.php", "score": 3618.24658203125}, {"docid": "resources/lang/id_ID/firefly.php", "score": 3115.970458984375}, {"docid": "resources/lang/cs_CZ/firefly.php", "score": 3068.5693359375}, {"docid": "resources/lang/tr_TR/firefly.php", "score": 3035.541015625}, {"docid": "routes/breadcrumbs.php", "score": 2962.58544921875}, {"docid": "resources/lang/nb_NO/firefly.php", "score": 2847.66552734375}, {"docid": "app/Http/Controllers/CurrencyController.php", "score": 2767.6181640625}, {"docid": "app/Http/Controllers/ProfileController.php", "score": 2663.05615234375}, {"docid": "app/Http/Controllers/ReportController.php", "score": 2654.756103515625}, {"docid": "resources/lang/zh_TW/firefly.php", "score": 2613.05224609375}, {"docid": "app/Http/Controllers/Budget/BudgetLimitController.php", "score": 2575.3447265625}, {"docid": "app/Http/Controllers/TagController.php", "score": 2544.345947265625}, {"docid": "app/Http/Controllers/Transaction/ConvertController.php", "score": 2505.147705078125}, {"docid": "app/Api/V1/Controllers/Models/TransactionCurrency/ListController.php", "score": 2450.19873046875}, {"docid": "app/Http/Controllers/Budget/ShowController.php", "score": 2434.6767578125}, {"docid": "app/Support/Http/Controllers/PeriodOverview.php", "score": 2410.954345703125}, {"docid": "app/Http/Controllers/Chart/BudgetController.php", "score": 2386.537353515625}], "function_summary": "This code snippet defines HTTP routes for currency management functionality in the Firefly III personal finance application. The routes are grouped under the `/currencies` prefix and require full user authentication (`user-full-auth` middleware).\n\nThe snippet includes six GET routes that handle various currency operations:\n\n1. **create** - Displays a form to create a new currency\n2. **edit/{currency}** - Shows an edit form for a specific currency\n3. **delete/{currency}** - Displays a confirmation page for deleting a currency\n4. **default/{currency}** - Sets a specific currency as the default currency\n5. **enable/{currency}** - Enables a currency for use\n6. **disable/{currency}** - Disables a currency from being used\n\nEach route is mapped to a corresponding method in the `CurrencyController` class and given a named route alias (e.g., 'currencies.create', 'currencies.edit') for easy reference throughout the application. The routes that take a `{currency}` parameter expect a currency identifier to be passed in the URL, allowing the controller to perform operations on specific currency records.\n\nThis represents the standard CRUD (Create, Read, Update, Delete) operations plus additional currency-specific actions like setting defaults and enabling/disabling currencies."}
{"instance_id": "zju-cve-2021-3730", "hits": [{"docid": "routes/web.php", "score": 9879.9560546875}, {"docid": "routes/api.php", "score": 4995.40771484375}, {"docid": "resources/lang/en_US/firefly.php", "score": 3594.415283203125}, {"docid": "resources/lang/en_GB/firefly.php", "score": 3594.293212890625}, {"docid": "resources/lang/id_ID/firefly.php", "score": 3093.91162109375}, {"docid": "resources/lang/cs_CZ/firefly.php", "score": 3049.5869140625}, {"docid": "resources/lang/tr_TR/firefly.php", "score": 3013.901123046875}, {"docid": "routes/breadcrumbs.php", "score": 2954.386962890625}, {"docid": "resources/lang/nb_NO/firefly.php", "score": 2825.37841796875}, {"docid": "app/Http/Controllers/CurrencyController.php", "score": 2710.022216796875}, {"docid": "app/Http/Controllers/ReportController.php", "score": 2671.41357421875}, {"docid": "app/Http/Controllers/ProfileController.php", "score": 2669.769775390625}, {"docid": "resources/lang/zh_TW/firefly.php", "score": 2594.4931640625}, {"docid": "app/Http/Controllers/Budget/BudgetLimitController.php", "score": 2582.373046875}, {"docid": "app/Http/Controllers/TagController.php", "score": 2551.954833984375}, {"docid": "app/Http/Controllers/Transaction/ConvertController.php", "score": 2486.13427734375}, {"docid": "app/Api/V1/Controllers/Models/TransactionCurrency/ListController.php", "score": 2457.11962890625}, {"docid": "app/Http/Controllers/Budget/ShowController.php", "score": 2447.3876953125}, {"docid": "app/Support/Http/Controllers/PeriodOverview.php", "score": 2414.978515625}, {"docid": "app/Http/Controllers/Admin/LinkController.php", "score": 2383.270751953125}], "function_summary": "This code snippet defines a Laravel route group for managing \"Available Budget\" functionality in the Firefly III personal finance application. The routes are:\n\n1. **Update route** (line 253): A POST route that handles updating an existing available budget record. It accepts an `availableBudget` model parameter along with `start_date` and `end_date` parameters, directing to the `Budget\\AvailableBudgetController@update` method.\n\n2. **Delete route** (line 255): A GET route that displays a confirmation page for deleting an available budget. It takes an `availableBudget` parameter and routes to the `Budget\\AvailableBudgetController@delete` method.\n\nThe route group is configured with:\n- `user-full-auth` middleware (requires fully authenticated users)\n- `FireflyIII\\Http\\Controllers` namespace\n- `available-budgets` URL prefix\n- `available-budgets.` route name prefix\n\nThis appears to be part of a budgeting system where users can set available budget amounts for specific time periods, and these routes handle the modification and deletion of those budget allocations. The date parameters suggest budget periods are time-bound."}
{"instance_id": "zju-cve-2021-3819", "hits": [{"docid": "routes/web.php", "score": 9911.3427734375}, {"docid": "routes/api.php", "score": 5007.9736328125}, {"docid": "resources/lang/en_US/firefly.php", "score": 3699.015869140625}, {"docid": "resources/lang/en_GB/firefly.php", "score": 3698.88818359375}, {"docid": "resources/lang/id_ID/firefly.php", "score": 3165.3515625}, {"docid": "resources/lang/cs_CZ/firefly.php", "score": 3135.109375}, {"docid": "resources/lang/tr_TR/firefly.php", "score": 3115.904296875}, {"docid": "resources/lang/nb_NO/firefly.php", "score": 2993.98046875}, {"docid": "routes/breadcrumbs.php", "score": 2971.9404296875}, {"docid": "app/Http/Controllers/CurrencyController.php", "score": 2834.89990234375}, {"docid": "app/Http/Controllers/ProfileController.php", "score": 2720.524169921875}, {"docid": "app/Http/Controllers/ReportController.php", "score": 2689.59423828125}, {"docid": "resources/lang/zh_TW/firefly.php", "score": 2689.167724609375}, {"docid": "public/v2/js/transactions/create.js", "score": 2630.761474609375}, {"docid": "public/v2/js/transactions/edit.js", "score": 2623.259521484375}, {"docid": "app/Http/Controllers/TagController.php", "score": 2603.025390625}, {"docid": "app/Http/Controllers/Transaction/ConvertController.php", "score": 2519.887939453125}, {"docid": "app/Api/V1/Controllers/Models/TransactionCurrency/ListController.php", "score": 2509.44921875}, {"docid": "app/Http/Controllers/Budget/BudgetLimitController.php", "score": 2495.43603515625}, {"docid": "app/Support/Http/Controllers/PeriodOverview.php", "score": 2462.231201171875}], "function_summary": "This code snippet defines HTTP routes for currency management in the Firefly III personal finance application. It's part of a route group that handles currency-related operations under the `/currencies` URL prefix.\n\nThe snippet includes the following currency management routes:\n\n**GET Routes:**\n- `delete/{currency}` - Shows a confirmation page for deleting a specific currency\n- `enable/{currency}` - Enables a specific currency for use\n- `disable/{currency}` - Disables a specific currency\n\n**POST Routes:**\n- `default` - Sets a currency as the default currency for the application\n- `store` - Creates and saves a new currency to the system\n\nAll routes are protected by the `user-full-auth` middleware, ensuring only authenticated users with full account access can manage currencies. The routes use Laravel's resource controller pattern, mapping to methods in the `CurrencyController` class within the `FireflyIII\\Http\\Controllers` namespace. Each route is assigned a named alias (using the `as` parameter) following the pattern `currencies.{action}` for easy reference throughout the application."}
{"instance_id": "zju-cve-2021-3900", "hits": [{"docid": "routes/web.php", "score": 10003.3173828125}, {"docid": "routes/api.php", "score": 5046.22998046875}, {"docid": "resources/lang/en_US/firefly.php", "score": 3741.990234375}, {"docid": "resources/lang/en_GB/firefly.php", "score": 3741.828857421875}, {"docid": "resources/lang/id_ID/firefly.php", "score": 3196.084716796875}, {"docid": "resources/lang/cs_CZ/firefly.php", "score": 3169.870849609375}, {"docid": "resources/lang/tr_TR/firefly.php", "score": 3144.60400390625}, {"docid": "resources/lang/nb_NO/firefly.php", "score": 3022.039306640625}, {"docid": "routes/breadcrumbs.php", "score": 3009.709228515625}, {"docid": "app/Http/Controllers/CurrencyController.php", "score": 2799.1533203125}, {"docid": "app/Http/Controllers/ProfileController.php", "score": 2717.452880859375}, {"docid": "resources/lang/zh_TW/firefly.php", "score": 2715.92138671875}, {"docid": "app/Http/Controllers/ReportController.php", "score": 2687.25244140625}, {"docid": "public/v2/js/transactions/create.js", "score": 2643.263916015625}, {"docid": "public/v2/js/transactions/edit.js", "score": 2635.576171875}, {"docid": "app/Http/Controllers/TagController.php", "score": 2613.4755859375}, {"docid": "app/Http/Controllers/Transaction/ConvertController.php", "score": 2509.108154296875}, {"docid": "app/Api/V1/Controllers/Models/TransactionCurrency/ListController.php", "score": 2502.890380859375}, {"docid": "public/v2/js/accounts/create.js", "score": 2471.957763671875}, {"docid": "app/Http/Controllers/Budget/BudgetLimitController.php", "score": 2466.391845703125}], "function_summary": "This code snippet defines HTTP GET routes for managing rule groups in the Firefly III personal finance application. The routes are part of a Laravel web application and handle the following rule group operations:\n\n1. **Edit rule group** (`edit/{ruleGroup}`) - Routes to the EditController's edit method for modifying an existing rule group\n2. **Delete rule group** (`delete/{ruleGroup}`) - Routes to the DeleteController's delete method for removing a rule group\n3. **Move up** (`up/{ruleGroup}`) - Routes to the EditController's up method for changing the order/priority of a rule group by moving it up\n4. **Move down** (`down/{ruleGroup}`) - Routes to the EditController's down method for changing the order/priority of a rule group by moving it down  \n5. **Select transactions** (`select/{ruleGroup}`) - Routes to the ExecutionController's selectTransactions method for choosing which transactions a rule group should apply to\n\nAll routes use the `rule-groups.` naming prefix and are protected by the `user-full-auth` middleware, ensuring only fully authenticated users can access these rule group management features. The routes accept a `{ruleGroup}` parameter to identify which specific rule group to operate on."}
{"instance_id": "zju-cve-2021-3901", "hits": [{"docid": "routes/web.php", "score": 9983.5185546875}, {"docid": "routes/api.php", "score": 5046.9912109375}, {"docid": "resources/lang/en_US/firefly.php", "score": 3740.636474609375}, {"docid": "resources/lang/en_GB/firefly.php", "score": 3740.474853515625}, {"docid": "resources/lang/id_ID/firefly.php", "score": 3204.17529296875}, {"docid": "resources/lang/cs_CZ/firefly.php", "score": 3171.989501953125}, {"docid": "resources/lang/tr_TR/firefly.php", "score": 3154.9140625}, {"docid": "resources/lang/nb_NO/firefly.php", "score": 3027.513671875}, {"docid": "routes/breadcrumbs.php", "score": 2998.36669921875}, {"docid": "app/Http/Controllers/CurrencyController.php", "score": 2812.53125}, {"docid": "app/Http/Controllers/ProfileController.php", "score": 2720.379638671875}, {"docid": "resources/lang/zh_TW/firefly.php", "score": 2718.031494140625}, {"docid": "app/Http/Controllers/ReportController.php", "score": 2689.941162109375}, {"docid": "public/v2/js/transactions/create.js", "score": 2658.294921875}, {"docid": "public/v2/js/transactions/edit.js", "score": 2651.097412109375}, {"docid": "app/Http/Controllers/TagController.php", "score": 2612.5771484375}, {"docid": "app/Api/V1/Controllers/Models/TransactionCurrency/ListController.php", "score": 2523.798095703125}, {"docid": "app/Http/Controllers/Transaction/ConvertController.php", "score": 2500.6875}, {"docid": "public/v2/js/accounts/create.js", "score": 2484.756103515625}, {"docid": "public/v2/js/bills/create.js", "score": 2478.040283203125}], "function_summary": "This code snippet defines HTTP routes for a bill management system within a Laravel web application. It's part of a route group that requires user authentication (`user-full-auth` middleware) and is prefixed with `/bills`.\n\nThe snippet establishes four main routes for bill operations:\n\n1. **Index route** (`GET /bills`) - Maps to `Bill\\IndexController@index` to display a list of bills\n2. **Rescan route** (`GET /bills/rescan/{bill}`) - Maps to `Bill\\ShowController@rescan` to rescan a specific bill (likely for automatic transaction matching)\n3. **Create route** (`GET /bills/create`) - Maps to `Bill\\CreateController@create` to show the form for creating a new bill\n4. **Edit route** (`GET /bills/edit/{bill}`) - Maps to `Bill\\EditController@edit` to show the form for editing an existing bill\n\nEach route uses Laravel's route naming convention with the `bills.` prefix (e.g., `bills.index`, `bills.rescan`). The `{bill}` parameter in the rescan and edit routes represents a bill model binding, allowing the application to automatically resolve the bill entity from the URL parameter.\n\nThis appears to be part of Firefly III, a personal finance management application, where bills represent recurring expenses that need to be tracked and managed."}
{"instance_id": "zju-cve-2021-3921", "hits": [{"docid": "routes/web.php", "score": 9930.318359375}, {"docid": "routes/api.php", "score": 4996.51611328125}, {"docid": "resources/lang/en_US/firefly.php", "score": 3710.25634765625}, {"docid": "resources/lang/en_GB/firefly.php", "score": 3710.094970703125}, {"docid": "resources/lang/id_ID/firefly.php", "score": 3171.4609375}, {"docid": "resources/lang/cs_CZ/firefly.php", "score": 3136.462158203125}, {"docid": "resources/lang/tr_TR/firefly.php", "score": 3122.30224609375}, {"docid": "resources/lang/nb_NO/firefly.php", "score": 3001.731201171875}, {"docid": "routes/breadcrumbs.php", "score": 2959.26025390625}, {"docid": "app/Http/Controllers/CurrencyController.php", "score": 2817.1748046875}, {"docid": "app/Http/Controllers/ProfileController.php", "score": 2770.494140625}, {"docid": "app/Http/Controllers/ReportController.php", "score": 2702.33154296875}, {"docid": "resources/lang/zh_TW/firefly.php", "score": 2691.66552734375}, {"docid": "public/v2/js/transactions/create.js", "score": 2618.833984375}, {"docid": "app/Http/Controllers/TagController.php", "score": 2612.179443359375}, {"docid": "public/v2/js/transactions/edit.js", "score": 2611.61474609375}, {"docid": "app/Http/Controllers/Transaction/ConvertController.php", "score": 2519.757568359375}, {"docid": "app/Api/V1/Controllers/Models/TransactionCurrency/ListController.php", "score": 2492.691162109375}, {"docid": "app/Http/Controllers/Budget/BudgetLimitController.php", "score": 2480.712158203125}, {"docid": "app/Support/Http/Controllers/PeriodOverview.php", "score": 2458.610595703125}], "function_summary": "This code snippet defines routes for authenticated users in a Laravel web application (appears to be Firefly III, a personal finance manager). The routes are grouped with the `user-simple-auth` middleware, which requires basic user authentication but not full account verification or 2FA.\n\nThe defined routes include:\n\n1. **Error handling**: A route to display errors (`/error`)\n2. **Authentication**: A logout route (`/logout`) that accepts any HTTP method\n3. **Debug utilities**: \n   - A flush route (`/flush`) for clearing caches or data\n   - A debug route (`/debug`) for displaying debug information\n   - A commented-out routes inspection route\n\nAll routes are mapped to controllers in the `FireflyIII\\Http\\Controllers` namespace:\n- `DebugController` handles error display, flushing, and debug information\n- `Auth\\LoginController` handles user logout functionality\n\nThe routes use Laravel's route naming convention (via the `as` parameter) to create named routes like `error`, `logout`, `flush`, and `debug`, making them easier to reference throughout the application. This appears to be a utility section providing essential debugging and authentication functions for logged-in users."}
{"instance_id": "zju-cve-2021-4005", "hits": [{"docid": "routes/web.php", "score": 9974.5185546875}, {"docid": "routes/api.php", "score": 5003.74609375}, {"docid": "resources/lang/en_US/firefly.php", "score": 3727.569580078125}, {"docid": "resources/lang/en_GB/firefly.php", "score": 3727.407958984375}, {"docid": "resources/lang/id_ID/firefly.php", "score": 3193.962158203125}, {"docid": "resources/lang/cs_CZ/firefly.php", "score": 3150.831787109375}, {"docid": "resources/lang/tr_TR/firefly.php", "score": 3079.44775390625}, {"docid": "resources/lang/nb_NO/firefly.php", "score": 3031.34814453125}, {"docid": "routes/breadcrumbs.php", "score": 2956.810546875}, {"docid": "app/Http/Controllers/CurrencyController.php", "score": 2833.627197265625}, {"docid": "app/Http/Controllers/ProfileController.php", "score": 2802.01220703125}, {"docid": "resources/lang/zh_TW/firefly.php", "score": 2715.146484375}, {"docid": "app/Http/Controllers/ReportController.php", "score": 2673.55517578125}, {"docid": "public/v2/js/transactions/create.js", "score": 2616.745849609375}, {"docid": "public/v2/js/transactions/edit.js", "score": 2609.121826171875}, {"docid": "app/Http/Controllers/TagController.php", "score": 2590.8076171875}, {"docid": "app/Http/Controllers/Budget/BudgetLimitController.php", "score": 2519.294189453125}, {"docid": "app/Api/V1/Controllers/Models/TransactionCurrency/ListController.php", "score": 2493.876708984375}, {"docid": "app/Http/Controllers/Transaction/ConvertController.php", "score": 2489.079345703125}, {"docid": "public/v2/js/bills/create.js", "score": 2443.6201171875}], "function_summary": "This code snippet defines routes for two-factor authentication (2FA) backup code management within a user profile section of what appears to be the Firefly III personal finance application.\n\nThe snippet contains four specific routes:\n\n1. **GET 2fa/code** - Displays a page for managing 2FA codes (handled by `ProfileController@code`)\n2. **POST 2fa/code** - Processes form submission for 2FA code operations (handled by `ProfileController@postCode`, aliased as 'code.store')\n3. **GET /delete-code** - Provides functionality to delete existing 2FA codes (handled by `ProfileController@deleteCode`)\n4. **GET 2fa/new-codes** - Generates new backup codes for 2FA (handled by `ProfileController@newBackupCodes`)\n\nAll routes are protected by the 'user-full-auth' middleware, ensuring only fully authenticated users can access these security-sensitive features. The routes are grouped under the 'profile.' namespace with a 'profile' prefix, indicating they're part of user profile management functionality. These routes specifically handle the management of backup codes that users can use to regain access to their accounts if they lose access to their primary 2FA device."}
{"instance_id": "zju-cve-2021-4015", "hits": [{"docid": "routes/web.php", "score": 9974.0419921875}, {"docid": "routes/api.php", "score": 5056.720703125}, {"docid": "resources/lang/en_US/firefly.php", "score": 3735.0068359375}, {"docid": "resources/lang/en_GB/firefly.php", "score": 3734.84521484375}, {"docid": "resources/lang/id_ID/firefly.php", "score": 3199.41845703125}, {"docid": "resources/lang/cs_CZ/firefly.php", "score": 3167.689697265625}, {"docid": "resources/lang/tr_TR/firefly.php", "score": 3082.330810546875}, {"docid": "resources/lang/nb_NO/firefly.php", "score": 3029.14111328125}, {"docid": "routes/breadcrumbs.php", "score": 2959.50390625}, {"docid": "app/Http/Controllers/CurrencyController.php", "score": 2827.02099609375}, {"docid": "resources/lang/zh_TW/firefly.php", "score": 2721.755859375}, {"docid": "app/Http/Controllers/ProfileController.php", "score": 2720.997802734375}, {"docid": "app/Http/Controllers/ReportController.php", "score": 2675.170166015625}, {"docid": "public/v2/js/transactions/create.js", "score": 2674.6083984375}, {"docid": "public/v2/js/transactions/edit.js", "score": 2667.806640625}, {"docid": "app/Http/Controllers/TagController.php", "score": 2605.3642578125}, {"docid": "app/Http/Controllers/Transaction/ConvertController.php", "score": 2502.031005859375}, {"docid": "public/v2/js/bills/create.js", "score": 2486.127197265625}, {"docid": "app/Api/V1/Controllers/Models/TransactionCurrency/ListController.php", "score": 2485.304931640625}, {"docid": "public/v2/js/accounts/edit.js", "score": 2478.98681640625}], "function_summary": "This code snippet defines Laravel web routes for managing transaction links within the Firefly III personal finance application. The routes are grouped under the `transactions.link.` namespace and handle the following functionality:\n\n**Key Operations:**\n1. **Modal Display** (`GET modal/{tj}`) - Shows a modal interface for linking transactions, where `{tj}` is a transaction journal parameter\n2. **Create Link** (`POST store/{tj}`) - Stores a new link between transactions\n3. **Delete Link** (`GET delete/{journalLink}`) - Displays a confirmation page for deleting a transaction link\n4. **Switch Link Direction** (`GET switch/{journalLink}`) - Allows reversing the direction of an existing transaction link\n5. **Destroy Link** (`POST destroy/{journalLink}`) - Permanently removes a transaction link from the database\n\nThe routes enable users to create relationships between different transactions (e.g., linking a transfer from one account to a deposit in another), manage these connections through a web interface, and maintain referential integrity by providing proper deletion workflows. All routes require full user authentication (`user-full-auth` middleware) and are handled by the `Transaction\\LinkController` class. This functionality is essential for tracking related financial transactions and maintaining accurate financial records in the application."}
{"instance_id": "zju-cve-2020-21564", "hits": [{"docid": "data/inc/files.php", "score": 766.86181640625}, {"docid": "data/inc/images.php", "score": 540.6243286132812}, {"docid": "data/modules/albums/albums.admin.php", "score": 413.79339599609375}, {"docid": "data/inc/themeinstall.php", "score": 411.5549011230469}, {"docid": "data/inc/modules_install.php", "score": 396.0198974609375}, {"docid": "data/inc/functions.admin.php", "score": 369.3345031738281}, {"docid": "data/modules/blog/blog.admin.php", "score": 351.18438720703125}, {"docid": "data/inc/editpage.php", "score": 317.5758972167969}, {"docid": "data/inc/trashcan.php", "score": 310.1911926269531}, {"docid": "data/inc/modules_manage_addtosite.php", "score": 304.1796875}, {"docid": "data/modules/albums/functions.php", "score": 302.6112976074219}, {"docid": "install.php", "score": 286.6310119628906}, {"docid": "data/inc/modules_manage.php", "score": 281.01190185546875}, {"docid": "data/inc/lib/tarlib.class.php", "score": 274.5535888671875}, {"docid": "data/inc/settings.php", "score": 274.39208984375}, {"docid": "data/modules/blog/blog.site.php", "score": 273.1336975097656}, {"docid": "data/inc/lib/unzip.class.php", "score": 272.83319091796875}, {"docid": "data/inc/theme.php", "score": 270.2296142578125}, {"docid": "data/inc/functions.all.php", "score": 262.5096130371094}, {"docid": "login.php", "score": 262.25860595703125}], "function_summary": "This code snippet implements a security mechanism for file uploads by blocking potentially dangerous file extensions. Here's how it works:\n\n**Main Functionality:**\n1. **Defines blocked extensions** - Creates an array of dangerous file types including PHP scripts (.php, .php3-7, .phtml, etc.), ASP files (.asp), and CGI scripts (.cgi)\n\n2. **Checks file extension** - Examines the last 4-5 characters of the uploaded filename (`$lastfour`, `$lastfive`) and also checks for .htaccess files\n\n3. **Security enforcement** - If the file has a blocked extension or contains \".htaccess\", it automatically renames the file by appending \".txt\" to make it safe\n\n4. **Error handling** - If the rename operation fails, it displays an upload failure error\n\n**Purpose:** This is a security feature that prevents users from uploading executable scripts or configuration files that could compromise the web server. By renaming dangerous files with a .txt extension, it neutralizes their potential to execute malicious code while still allowing the file to be stored.\n\nThis approach helps protect the CMS from common attack vectors where malicious users might try to upload PHP shells or other executable files to gain unauthorized access to the server."}
{"instance_id": "zju-cve-2020-29607", "hits": [{"docid": "data/inc/lib/unzip.class.php", "score": 101.15630340576172}, {"docid": "data/inc/functions.admin.php", "score": 86.22799682617188}, {"docid": "data/inc/security.php", "score": 75.16560363769531}, {"docid": "data/inc/lib/tarlib.class.php", "score": 70.07659912109375}, {"docid": "data/modules/albums/albums_getimage.php", "score": 59.17279815673828}, {"docid": "docs/update.php", "score": 56.26089859008789}, {"docid": "data/inc/lang/en.php", "score": 54.95759963989258}, {"docid": "data/modules/tinymce/plugins/codesample/plugin.min.js", "score": 53.42729949951172}, {"docid": "data/inc/functions.site.php", "score": 52.49660110473633}, {"docid": "data/inc/files.php", "score": 49.248199462890625}, {"docid": "data/inc/lang/it.php", "score": 46.08890151977539}, {"docid": "data/inc/functions.all.php", "score": 45.16080093383789}, {"docid": "data/modules/tinymce/tinymce.min.js", "score": 45.042301177978516}, {"docid": "login.php", "score": 44.340301513671875}, {"docid": "data/inc/lang/el.php", "score": 43.55339813232422}, {"docid": "data/modules/tinymce/themes/mobile/theme.min.js", "score": 43.39899826049805}, {"docid": "data/modules/tinymce/themes/silver/theme.min.js", "score": 43.24869918823242}, {"docid": "data/inc/lang/lv.php", "score": 41.17539978027344}, {"docid": "data/inc/lang/fr.php", "score": 40.8203010559082}, {"docid": "data/inc/lang/he.php", "score": 37.48759841918945}], "function_summary": "This code snippet is part of an Apache `.htaccess` configuration file that implements security restrictions:\n\n**Main functionality:**\n- **Line 7**: Closes a `FilesMatch` directive block that was targeting `.phtml` files (based on the context from line 5)\n- **Line 9**: Disables CGI script execution by setting `Options -ExecCGI`\n\n**Key security measures:**\nThe `Options -ExecCGI` directive prevents the web server from executing CGI (Common Gateway Interface) scripts in this directory. This is a security hardening measure that:\n- Blocks execution of potentially dangerous scripts\n- Prevents unauthorized code execution\n- Reduces attack surface by disabling CGI functionality\n\n**Context from full file:**\nThe snippet is part of a broader security configuration that also disables PHP execution for `.php` and `.phtml` files by removing their handlers. Combined with the CGI restriction, this creates a comprehensive protection scheme that prevents script execution in what appears to be a directory meant for static files or uploads.\n\nThis type of configuration is commonly used in upload directories, template folders, or other locations where executable content should be restricted for security purposes."}
{"instance_id": "zju-cve-2021-36440", "hits": [{"docid": "server/Application/Api/Controller/AdminUpdateController.class.php", "score": 2240.8701171875}, {"docid": "web/static/lang/zh-CN.js", "score": 769.1934814453125}, {"docid": "web_src/static/lang/zh-CN.js", "score": 767.8438720703125}, {"docid": "server/ThinkPHP/Library/Think/Upload/Driver/Bcs/bcs.class.php", "score": 747.8496704101562}, {"docid": "server/ThinkPHP/Common/functions.php", "score": 713.3372192382812}, {"docid": "web/static/js/app.01674f0df057e1fed70e.js", "score": 696.706787109375}, {"docid": "server/Application/Api/Controller/BaseController.class.php", "score": 670.05908203125}, {"docid": "server/Application/Api/Controller/AttachmentController.class.php", "score": 660.090087890625}, {"docid": "server/Application/Api/Controller/UserController.class.php", "score": 645.609375}, {"docid": "server/ThinkPHP/Conf/convention.php", "score": 640.9998168945312}, {"docid": "server/vendor/qcloud/cos-sdk-v5/src/Qcloud/Cos/Service.php", "score": 613.492919921875}, {"docid": "server/ThinkPHP/Library/Think/Upload.class.php", "score": 596.2540893554688}, {"docid": "server/Application/Home/Lang/zh-cn.php", "score": 590.6401977539062}, {"docid": "server/Application/Api/Lang/zh-cn.php", "score": 588.155029296875}, {"docid": "Sqlite/showdoc.db.php", "score": 576.4813842773438}, {"docid": "server/Application/Home/Controller/IndexController.class.php", "score": 565.2777709960938}, {"docid": "server/Application/Api/Controller/ItemController.class.php", "score": 559.0579223632812}, {"docid": "server/Application/Api/Controller/PageController.class.php", "score": 542.8107299804688}, {"docid": "server/ThinkPHP/Library/Think/Template.class.php", "score": 538.0396118164062}, {"docid": "install/lang.zh.php", "score": 535.4213256835938}], "function_summary": "This code snippet is the beginning of a `download()` method in a PHP controller class that handles downloading update packages for a ShowDoc application. \n\nThe method performs the following key operations:\n\n1. **Resource Configuration**: Sets execution time limit to 1000 seconds and increases memory limit to 500MB to handle potentially large file downloads and processing operations.\n\n2. **Parameter Extraction**: Retrieves two input parameters:\n   - `new_version`: The version identifier of the update to be downloaded\n   - `file_url`: The URL location where the update package can be downloaded from\n\nThis appears to be part of an automated update system where the method prepares the environment for downloading and processing update files. The increased time and memory limits suggest this operation involves downloading substantial files (likely zip archives containing application updates) that may take considerable time and resources to process.\n\nThe method is likely called as part of a larger update workflow, where version information and download URLs are provided to fetch the latest version of the ShowDoc application for automated updates."}
{"instance_id": "zju-cve-2022-0409", "hits": [{"docid": "server/Application/Api/Controller/AttachmentController.class.php", "score": 4063.998779296875}, {"docid": "server/Application/Api/Model/AttachmentModel.class.php", "score": 2096.16796875}, {"docid": "server/Application/Api/Controller/PageController.class.php", "score": 1766.510986328125}, {"docid": "web/static/js/app.f55134787766bd0dbf66.js", "score": 1714.2762451171875}, {"docid": "server/Application/Api/Controller/ItemController.class.php", "score": 1651.9219970703125}, {"docid": "server/Application/Home/Controller/PageController.class.php", "score": 1611.3529052734375}, {"docid": "server/Application/Api/Controller/CatalogController.class.php", "score": 1473.421875}, {"docid": "web/static/lang/zh-CN.js", "score": 1420.007080078125}, {"docid": "web_src/static/lang/zh-CN.js", "score": 1420.007080078125}, {"docid": "server/Application/Api/Model/PageModel.class.php", "score": 1405.7703857421875}, {"docid": "server/Application/Home/Controller/UpdateController.class.php", "score": 1364.412841796875}, {"docid": "server/Application/Api/Controller/BaseController.class.php", "score": 1352.822265625}, {"docid": "server/Application/Api/Controller/UserController.class.php", "score": 1348.45166015625}, {"docid": "server/ThinkPHP/Common/functions.php", "score": 1332.5863037109375}, {"docid": "server/Application/Api/Controller/FlowController.class.php", "score": 1319.734375}, {"docid": "server/ThinkPHP/Library/Think/Upload/Driver/Bcs/bcs.class.php", "score": 1303.0919189453125}, {"docid": "server/Application/Api/Controller/TemplateController.class.php", "score": 1289.2032470703125}, {"docid": "server/Application/Api/Model/CatalogModel.class.php", "score": 1260.8946533203125}, {"docid": "server/Application/Home/Controller/ItemController.class.php", "score": 1258.443603515625}, {"docid": "server/Application/Api/Controller/ExportController.class.php", "score": 1256.8455810546875}], "function_summary": "This code snippet is part of an image upload validation process in the `uploadImg()` method. Here's what it does:\n\n**Main Functionality:**\n1. **File Extension Handling**: If the uploaded file has a generic name 'blob' (common with drag-and-drop or clipboard uploads), it automatically appends '.jpg' to give it a proper image file extension.\n\n2. **Upload Validation**: Checks if the expected file input field `'editormd-image-file'` actually contains an uploaded file.\n\n**Key Operations:**\n- **Line 74-76**: Detects if the uploaded file is named 'blob' and converts it to 'blob.jpg' to ensure proper file handling\n- **Line 78-80**: Validates that a file was actually uploaded in the expected form field, returning `false` if no file is present\n\n**Purpose**: This appears to be part of a markdown editor's image upload feature (indicated by the 'editormd-image-file' field name). The blob handling is particularly useful for handling images pasted from clipboard or dropped directly into the editor, which often come without proper file extensions. The validation ensures the upload process only continues if a valid file is present.\n\nThis is a preliminary validation step before more comprehensive security checks and the actual file upload processing that follows in the method."}
{"instance_id": "zju-cve-2022-0950", "hits": [{"docid": "server/Application/Api/Controller/AttachmentController.class.php", "score": 3946.420654296875}, {"docid": "server/Application/Api/Model/AttachmentModel.class.php", "score": 2055.953125}, {"docid": "server/Application/Api/Controller/PageController.class.php", "score": 1778.4119873046875}, {"docid": "web/static/js/app.da56aa7637f49190ed94.js", "score": 1694.1953125}, {"docid": "server/Application/Api/Controller/ItemController.class.php", "score": 1675.901611328125}, {"docid": "server/Application/Home/Controller/PageController.class.php", "score": 1532.1890869140625}, {"docid": "server/Application/Api/Controller/CatalogController.class.php", "score": 1477.34716796875}, {"docid": "web/static/lang/zh-CN.js", "score": 1429.7781982421875}, {"docid": "web_src/static/lang/zh-CN.js", "score": 1429.508544921875}, {"docid": "server/Application/Api/Model/PageModel.class.php", "score": 1401.985107421875}, {"docid": "server/Application/Home/Controller/UpdateController.class.php", "score": 1371.5997314453125}, {"docid": "server/Application/Api/Controller/BaseController.class.php", "score": 1339.2869873046875}, {"docid": "server/Application/Api/Controller/UserController.class.php", "score": 1334.343017578125}, {"docid": "server/ThinkPHP/Common/functions.php", "score": 1325.934326171875}, {"docid": "server/Application/Api/Controller/FlowController.class.php", "score": 1324.1051025390625}, {"docid": "server/ThinkPHP/Library/Think/Upload/Driver/Bcs/bcs.class.php", "score": 1312.652587890625}, {"docid": "server/Application/Api/Controller/TemplateController.class.php", "score": 1291.9541015625}, {"docid": "server/Application/Api/Controller/ExportController.class.php", "score": 1271.0072021484375}, {"docid": "server/Application/Home/Controller/ItemController.class.php", "score": 1268.83642578125}, {"docid": "server/Application/Api/Model/CatalogModel.class.php", "score": 1265.3306884765625}], "function_summary": "This code snippet is a security validation check within a file upload process. Here's what it does:\n\n**Main Functionality:**\n- **File Type Security Validation**: The code checks if an uploaded file has a potentially dangerous filename that could pose security risks to the system.\n\n**Key Operations:**\n1. Calls the `isDangerFilename()` method from the Attachment model/class, passing the uploaded file's name as a parameter\n2. If the filename is identified as dangerous, it:\n   - Sends an error response with error code 10100\n   - Displays the message \"\u4e0d\u652f\u6301\u6b64\u6587\u4ef6\u7c7b\u578b\" (Chinese for \"This file type is not supported\")\n   - Immediately returns false to halt the upload process\n\n**Context:**\nThis validation occurs after checking if the upload file exists (line 110) and before proceeding with the actual file upload process. It's a crucial security measure to prevent malicious files from being uploaded to the server.\n\n**Purpose:**\nThis is a standard security practice in web applications to filter out potentially harmful file types (like executable files, scripts, etc.) that could be used for attacks if uploaded and executed on the server."}
{"instance_id": "zju-cve-2022-1034", "hits": [{"docid": "server/Application/Api/Controller/AdminUpdateController.class.php", "score": 2261.207763671875}, {"docid": "web/static/lang/zh-CN.js", "score": 792.7946166992188}, {"docid": "web_src/static/lang/zh-CN.js", "score": 791.4462280273438}, {"docid": "server/ThinkPHP/Library/Think/Upload/Driver/Bcs/bcs.class.php", "score": 752.5958251953125}, {"docid": "server/ThinkPHP/Common/functions.php", "score": 720.3328857421875}, {"docid": "web/static/js/app.879c793351fb436498b2.js", "score": 719.9619750976562}, {"docid": "server/Application/Api/Controller/BaseController.class.php", "score": 684.4697265625}, {"docid": "server/Application/Api/Controller/AttachmentController.class.php", "score": 678.3079833984375}, {"docid": "server/ThinkPHP/Conf/convention.php", "score": 642.55078125}, {"docid": "server/Application/Api/Controller/UserController.class.php", "score": 632.2647705078125}, {"docid": "server/ThinkPHP/Library/Think/Upload.class.php", "score": 597.0518798828125}, {"docid": "web_src/src/components/admin/about/Index.vue", "score": 594.668212890625}, {"docid": "server/Application/Home/Lang/zh-cn.php", "score": 586.3920288085938}, {"docid": "server/Application/Api/Lang/zh-cn.php", "score": 582.45751953125}, {"docid": "Sqlite/showdoc.db.php", "score": 572.7816162109375}, {"docid": "server/Application/Api/Model/AttachmentModel.class.php", "score": 571.4274291992188}, {"docid": "server/Application/Home/Controller/IndexController.class.php", "score": 569.80712890625}, {"docid": "server/Application/Api/Controller/ItemController.class.php", "score": 561.3272705078125}, {"docid": "server/ThinkPHP/Library/Think/Template.class.php", "score": 544.2139282226562}, {"docid": "install/common.php", "score": 541.1030883789062}], "function_summary": "This code snippet is part of the `download()` method in an admin update controller for ShowDoc. It performs initial setup and parameter processing for downloading software updates:\n\n**Key Operations:**\n\n1. **Performance Configuration**: Sets execution time limit to 1000 seconds and memory limit to 500MB to handle potentially large download operations\n\n2. **Parameter Retrieval**: Uses the `I()` function (likely a framework helper) to extract two input parameters:\n   - `new_version`: The target version to download\n   - `file_url`: The URL where the update package can be downloaded\n\n3. **Version String Processing**: Removes the \"v\" prefix from the version number using `str_replace()` to create a clean version number for file naming and processing\n\nThis snippet represents the initialization phase of an automated update download process, preparing the system with adequate resources and extracting the necessary information (version and download URL) needed for the subsequent download and installation steps. The increased memory and time limits suggest this method handles substantial file operations that could take significant time and resources to complete."}
{"instance_id": "zju-cve-2025-54418", "hits": [{"docid": "system/Images/Handlers/ImageMagickHandler.php", "score": 2356.739501953125}, {"docid": "system/Images/Handlers/GDHandler.php", "score": 1515.377685546875}, {"docid": "system/Images/Handlers/BaseHandler.php", "score": 1424.6912841796875}, {"docid": "system/Images/ImageHandlerInterface.php", "score": 1066.830810546875}, {"docid": "system/CLI/CLI.php", "score": 657.9622802734375}, {"docid": "system/Router/RouteCollection.php", "score": 574.5064697265625}, {"docid": "system/Images/Image.php", "score": 538.8900756835938}, {"docid": "system/Common.php", "score": 507.2384033203125}, {"docid": "system/Database/BaseConnection.php", "score": 489.73590087890625}, {"docid": "system/CLI/GeneratorTrait.php", "score": 478.7738952636719}, {"docid": "system/HTTP/ContentSecurityPolicy.php", "score": 470.8706970214844}, {"docid": "system/Database/SQLSRV/Connection.php", "score": 466.27801513671875}, {"docid": "system/HTTP/CURLRequest.php", "score": 464.9342041015625}, {"docid": "system/Email/Email.php", "score": 464.9104919433594}, {"docid": "system/View/Parser.php", "score": 464.8847961425781}, {"docid": "system/Language/en/Images.php", "score": 459.59368896484375}, {"docid": "system/Database/OCI8/Connection.php", "score": 454.78131103515625}, {"docid": "system/Helpers/html_helper.php", "score": 452.5202941894531}, {"docid": "system/Database/MigrationRunner.php", "score": 451.8080139160156}, {"docid": "system/HTTP/ResponseTrait.php", "score": 451.5548095703125}], "function_summary": "This code snippet is part of the `_resize()` method in the ImageMagickHandler class, which handles image resizing using ImageMagick command-line tools.\n\nThe snippet constructs an ImageMagick command string for resizing images with two different behaviors:\n\n1. **Maintain aspect ratio**: When `$maintainRatio` is true, it creates a resize command that preserves the original image proportions using the format `-resize WIDTHxHEIGHT`\n\n2. **Force exact dimensions**: When `$maintainRatio` is false, it adds an exclamation mark (`!`) to the command, which forces ImageMagick to resize to exact dimensions regardless of aspect ratio, potentially distorting the image\n\nKey technical details:\n- Uses null coalescing operator (`??`) to default width/height to 0 if not set\n- Handles Windows vs Unix path escaping with the `$escape` variable  \n- Constructs command with source and destination file paths in quotes\n- Calls `$this->process($action)` to execute the ImageMagick command\n\nThe command format follows ImageMagick's CLI syntax where the `!` modifier tells ImageMagick to ignore aspect ratio and force the image into the specified dimensions exactly."}
{"instance_id": "zju-cve-2025-2945", "hits": [{"docid": "web/pgadmin/tools/sqleditor/__init__.py", "score": 11819.0166015625}, {"docid": "web/pgadmin/tools/debugger/__init__.py", "score": 5844.40771484375}, {"docid": "web/pgadmin/tools/schema_diff/__init__.py", "score": 5797.24853515625}, {"docid": "web/pgadmin/tools/sqleditor/utils/start_running_query.py", "score": 5566.7412109375}, {"docid": "web/pgadmin/tools/erd/__init__.py", "score": 4835.07080078125}, {"docid": "web/pgadmin/tools/sqleditor/utils/filter_dialog.py", "score": 4639.7451171875}, {"docid": "web/pgadmin/browser/server_groups/servers/__init__.py", "score": 4591.56396484375}, {"docid": "web/pgadmin/utils/driver/psycopg3/connection.py", "score": 4427.70947265625}, {"docid": "web/pgadmin/misc/file_manager/__init__.py", "score": 4391.93798828125}, {"docid": "web/pgadmin/tools/sqleditor/command.py", "score": 4182.97802734375}, {"docid": "web/pgadmin/tools/psql/__init__.py", "score": 4017.0}, {"docid": "web/pgadmin/browser/server_groups/servers/databases/__init__.py", "score": 3999.277587890625}, {"docid": "web/pgadmin/browser/server_groups/servers/roles/__init__.py", "score": 3998.03076171875}, {"docid": "web/pgadmin/tools/restore/__init__.py", "score": 3899.16845703125}, {"docid": "web/pgadmin/browser/server_groups/servers/databases/schemas/views/__init__.py", "score": 3885.9140625}, {"docid": "web/pgadmin/browser/server_groups/servers/databases/schemas/tables/indexes/__init__.py", "score": 3797.16845703125}, {"docid": "web/pgadmin/browser/server_groups/servers/resource_groups/__init__.py", "score": 3774.72607421875}, {"docid": "web/pgadmin/browser/server_groups/servers/databases/schemas/tables/constraints/index_constraint/__init__.py", "score": 3763.870361328125}, {"docid": "web/pgadmin/tools/grant_wizard/__init__.py", "score": 3736.761962890625}, {"docid": "web/pgadmin/tools/backup/__init__.py", "score": 3700.580810546875}], "function_summary": "This code snippet is part of a query download functionality in pgAdmin's SQL editor. It processes request parameters to extract SQL query information and prepare it for execution.\n\n**Key functionality:**\n\n1. **Parameter Processing**: Iterates through request data (likely from a form submission) to find two specific parameters:\n   - `query`: The SQL statement to execute\n   - `query_commited`: A boolean flag indicating if the query has been committed\n\n2. **Type Conversion**: For the `query_commited` parameter, it safely converts string values to boolean using `eval()` if the value is a string, otherwise uses the value directly.\n\n3. **Fallback SQL Retrieval**: If no SQL query is found in the request parameters, it falls back to retrieving the SQL from the transaction object using `trans_obj.get_sql(sync_conn)`.\n\nThis appears to be part of a larger function that handles downloading query results as CSV files. The snippet ensures that the system has a valid SQL query to execute, either from the user's request or from the current transaction state, before proceeding with the download operation. The `query_commited` flag likely determines whether the query needs to be re-executed to get fresh data."}
{"instance_id": "zju-CVE-2021-32615", "hits": [{"docid": "admin/user_list_backend.php", "score": 1774.6568603515625}, {"docid": "admin/include/functions.php", "score": 645.1884155273438}, {"docid": "include/functions.inc.php", "score": 637.418212890625}, {"docid": "themes/default/js/plugins/jquery.dataTables.js", "score": 621.2720947265625}, {"docid": "include/functions_user.inc.php", "score": 600.9594116210938}, {"docid": "admin/batch_manager.php", "score": 568.8416137695312}, {"docid": "include/ws_functions/pwg.images.php", "score": 562.21337890625}, {"docid": "include/ws_functions/pwg.users.php", "score": 546.9428100585938}, {"docid": "admin/history.php", "score": 519.4520874023438}, {"docid": "include/ws_functions/pwg.categories.php", "score": 506.9036865234375}, {"docid": "include/dblayer/functions_mysqli.inc.php", "score": 506.2185974121094}, {"docid": "include/functions_search.inc.php", "score": 502.375}, {"docid": "include/dblayer/functions_mysql.inc.php", "score": 487.2690124511719}, {"docid": "include/functions_category.inc.php", "score": 484.5758056640625}, {"docid": "include/config_default.inc.php", "score": 478.15728759765625}, {"docid": "admin/include/functions_history.inc.php", "score": 477.62469482421875}, {"docid": "comments.php", "score": 453.7521057128906}, {"docid": "admin/include/themes.class.php", "score": 451.055908203125}, {"docid": "picture.php", "score": 443.7582092285156}, {"docid": "admin/site_update.php", "score": 441.64678955078125}], "function_summary": "This code snippet handles the construction of an SQL ORDER BY clause for a DataTables server-side processing request in a Piwigo user management interface.\n\n**Key functionality:**\n\n1. **Checks for sorting parameters**: Verifies if an ordering column is specified in the request (`$_REQUEST[\"order\"][0][\"column\"]`)\n\n2. **Builds ORDER BY clause**: If sorting is requested, it starts constructing the SQL ORDER BY statement\n\n3. **Validates column searchability**: Ensures the requested column is marked as \"searchable\" before adding it to the ORDER BY clause\n\n4. **Constructs sort specification**: Adds the column name from the `$aColumns` array and the sort direction (ASC/DESC) from the request\n\n5. **Cleans up formatting**: Removes the trailing comma and space using `substr_replace()`\n\n6. **Handles edge case**: If the ORDER BY clause ends up empty (only containing \"ORDER BY\"), it resets `$sOrder` to an empty string\n\nThis snippet is part of a larger system that processes DataTables AJAX requests for displaying and sorting user lists in the Piwigo photo gallery administration interface. The resulting `$sOrder` variable is later used in the SQL query to properly sort the user data according to the frontend's sorting request."}
{"instance_id": "zju-CVE-2021-27973", "hits": [{"docid": "admin/languages_installed.php", "score": 469.622802734375}, {"docid": "admin/include/languages.class.php", "score": 297.52679443359375}, {"docid": "include/functions.inc.php", "score": 269.48968505859375}, {"docid": "admin/plugins_installed.php", "score": 257.7627868652344}, {"docid": "admin/themes_installed.php", "score": 242.7938995361328}, {"docid": "picture.php", "score": 240.32699584960938}, {"docid": "include/config_default.inc.php", "score": 238.09210205078125}, {"docid": "admin/notification_by_mail.php", "score": 236.66610717773438}, {"docid": "themes/default/js/plugins/jquery.dataTables.js", "score": 235.31350708007812}, {"docid": "upgrade.php", "score": 235.25210571289062}, {"docid": "include/functions_user.inc.php", "score": 232.94419860839844}, {"docid": "admin/batch_manager_global.php", "score": 230.35159301757812}, {"docid": "admin/include/themes.class.php", "score": 225.9176025390625}, {"docid": "language/en_UK/admin.lang.php", "score": 215.8292999267578}, {"docid": "admin/include/plugins.class.php", "score": 211.9783935546875}, {"docid": "admin/configuration.php", "score": 207.24769592285156}, {"docid": "profile.php", "score": 205.60440063476562}, {"docid": "include/ws_functions/pwg.extensions.php", "score": 204.335693359375}, {"docid": "themes/default/js/jquery.js", "score": 202.42730712890625}, {"docid": "admin/include/functions.php", "score": 201.15679931640625}], "function_summary": "This code snippet handles language management actions in Piwigo's admin interface. Here's what it does:\n\n**Main Functionality:**\n- Checks if both `action` and `language` parameters are present in the GET request\n- If both parameters exist, it calls the `perform_action()` method on the `$languages` object, passing the action type and language ID\n- The method returns any errors that occur during the action execution, which are stored in `$page['errors']`\n- If no errors occurred (empty errors array), the user is redirected back to the base URL to refresh the page and show the updated language state\n\n**Key Operations:**\n- **Action Processing**: Executes language-related actions (likely activate, deactivate, set as default, etc.)\n- **Error Handling**: Captures and stores any errors from the action execution\n- **Page Refresh**: Redirects to clean up the URL and display updated results when successful\n\nThis is a common pattern in admin interfaces where actions are performed via GET parameters, errors are handled gracefully, and successful operations result in a page refresh to show the new state. The redirect prevents issues with browser refresh re-executing the same action."}
{"instance_id": "zju-cve-2024-27306", "hits": [{"docid": "aiohttp/web_urldispatcher.py", "score": 4563.7607421875}, {"docid": "aiohttp/web_app.py", "score": 1494.16259765625}, {"docid": "aiohttp/helpers.py", "score": 1491.946533203125}, {"docid": "aiohttp/web_request.py", "score": 1453.812255859375}, {"docid": "aiohttp/web_routedef.py", "score": 1425.1033935546875}, {"docid": "aiohttp/client_reqrep.py", "score": 1277.768310546875}, {"docid": "aiohttp/connector.py", "score": 1217.41943359375}, {"docid": "aiohttp/http_parser.py", "score": 1214.1571044921875}, {"docid": "aiohttp/client.py", "score": 1183.8582763671875}, {"docid": "aiohttp/abc.py", "score": 1182.8494873046875}, {"docid": "aiohttp/web.py", "score": 1129.8099365234375}, {"docid": "aiohttp/multipart.py", "score": 1126.576416015625}, {"docid": "aiohttp/cookiejar.py", "score": 1111.5723876953125}, {"docid": "aiohttp/web_runner.py", "score": 1026.2142333984375}, {"docid": "aiohttp/web_response.py", "score": 1001.5255737304688}, {"docid": "aiohttp/web_protocol.py", "score": 931.6483154296875}, {"docid": "aiohttp/web_fileresponse.py", "score": 910.9127807617188}, {"docid": "aiohttp/web_exceptions.py", "score": 907.8355102539062}, {"docid": "aiohttp/client_exceptions.py", "score": 869.4594116210938}, {"docid": "aiohttp/http_websocket.py", "score": 861.3280029296875}], "function_summary": "This code snippet is part of the `_directory_as_html` method in the `StaticResource` class, which generates an HTML directory listing for static file serving.\n\n**Main functionality:**\n\n1. **Creates HTML page title**: Generates an \"Index of /path\" heading using the relative path from the static directory root.\n\n2. **Iterates through directory contents**: Uses `filepath.iterdir()` to get all files and subdirectories in the current directory, then sorts them alphabetically.\n\n3. **Builds file/directory links**: For each item:\n   - Calculates the relative path from the static directory root\n   - Constructs the full URL by combining the static resource prefix with the relative path\n   - Distinguishes between files and directories (adds \"/\" suffix to directory names for visual clarity)\n   - Creates HTML list items with clickable links\n\n4. **Generates navigation structure**: Each file/directory becomes a clickable `<a>` tag within an `<li>` element, allowing users to browse the directory structure through a web interface.\n\nThis is commonly used when `show_index=True` is set on a static resource, providing a file browser interface similar to Apache's directory listings when accessing a directory URL rather than a specific file."}
{"instance_id": "zju-cve-2022-4223", "hits": [{"docid": "web/pgadmin/misc/__init__.py", "score": 960.6146850585938}, {"docid": "web/pgadmin/browser/__init__.py", "score": 436.8041076660156}, {"docid": "web/pgadmin/misc/file_manager/__init__.py", "score": 397.04638671875}, {"docid": "web/pgadmin/utils/__init__.py", "score": 394.9002990722656}, {"docid": "web/pgadmin/__init__.py", "score": 392.7727966308594}, {"docid": "web/config.py", "score": 338.3738098144531}, {"docid": "web/pgadmin/dashboard/__init__.py", "score": 319.54998779296875}, {"docid": "web/pgadmin/tools/debugger/__init__.py", "score": 313.4018859863281}, {"docid": "web/pgadmin/tools/sqleditor/__init__.py", "score": 313.3500061035156}, {"docid": "web/pgadmin/browser/server_groups/servers/databases/schemas/__init__.py", "score": 305.6650085449219}, {"docid": "web/pgadmin/browser/server_groups/servers/__init__.py", "score": 304.09649658203125}, {"docid": "web/pgadmin/tools/import_export/__init__.py", "score": 300.80059814453125}, {"docid": "web/pgadmin/misc/cloud/__init__.py", "score": 297.6076965332031}, {"docid": "web/pgadmin/browser/server_groups/servers/databases/schemas/views/__init__.py", "score": 294.38250732421875}, {"docid": "web/pgadmin/tools/backup/__init__.py", "score": 293.4153137207031}, {"docid": "web/pgadmin/tools/erd/__init__.py", "score": 288.2080078125}, {"docid": "web/pgadmin/tools/restore/__init__.py", "score": 285.301513671875}, {"docid": "web/pgadmin/tools/psql/__init__.py", "score": 285.2073974609375}, {"docid": "web/pgadmin/tools/maintenance/__init__.py", "score": 282.9912109375}, {"docid": "web/pgadmin/tools/schema_diff/__init__.py", "score": 279.6296081542969}], "function_summary": "This code snippet defines a Flask route handler that validates PostgreSQL utility binary paths. Here's its main functionality:\n\n**Purpose**: The `validate_binary_path()` function is a POST endpoint that verifies whether PostgreSQL utilities (like pg_dump, psql, etc.) exist at a specified path and can execute properly.\n\n**Key Operations**:\n1. **Input Processing**: Decodes JSON request data containing a `utility_path` parameter\n2. **Path Resolution**: Uses `replace_binary_path()` to handle special path variables like \"$DIR\"\n3. **Utility Validation**: Iterates through a predefined list of PostgreSQL utilities (`UTILITIES_ARRAY`)\n4. **Cross-Platform Support**: Automatically appends `.exe` extension for Windows systems\n5. **Version Testing**: For each utility, constructs the full path and executes `--version` command using `subprocess.getoutput()`\n6. **Error Handling**: Catches exceptions when utilities aren't found or can't execute\n7. **Response Building**: Accumulates HTML-formatted results showing each utility's version information or error messages\n\n**Output**: Returns a JSON response containing formatted HTML text displaying the version information for each found utility or error messages for missing ones. This helps administrators verify that their PostgreSQL binary path configuration is correct and all required utilities are accessible."}
{"instance_id": "zju-cve-2024-56408", "hits": [{"docid": "samples/Engineering/Convert-Online.php", "score": 1106.454833984375}, {"docid": "samples/Wizards/NumberFormat/Accounting.php", "score": 595.0250244140625}, {"docid": "samples/Wizards/NumberFormat/Currency.php", "score": 595.0250244140625}, {"docid": "samples/Wizards/NumberFormat/Number.php", "score": 528.088623046875}, {"docid": "samples/Wizards/NumberFormat/Percentage.php", "score": 520.3870849609375}, {"docid": "samples/Wizards/NumberFormat/Scientific.php", "score": 520.3870849609375}, {"docid": "samples/Basic4/45_Quadratic_equation_solver.php", "score": 306.6619873046875}, {"docid": "src/PhpSpreadsheet/Helper/Sample.php", "score": 290.37420654296875}, {"docid": "src/PhpSpreadsheet/Calculation/Engineering/ConvertUOM.php", "score": 269.19488525390625}, {"docid": "src/PhpSpreadsheet/Writer/Xls/Worksheet.php", "score": 255.898193359375}, {"docid": "src/PhpSpreadsheet/Writer/Html.php", "score": 245.67820739746094}, {"docid": "src/PhpSpreadsheet/Reader/Gnumeric.php", "score": 214.18789672851562}, {"docid": "src/PhpSpreadsheet/Calculation/Calculation.php", "score": 212.61309814453125}, {"docid": "src/PhpSpreadsheet/Writer/Xls/Parser.php", "score": 208.84060668945312}, {"docid": "src/PhpSpreadsheet/Reader/Xls.php", "score": 208.3740997314453}, {"docid": "src/PhpSpreadsheet/Worksheet/Worksheet.php", "score": 193.7440948486328}, {"docid": "samples/bootstrap/js/jquery.min.js", "score": 193.4375}, {"docid": "samples/index.php", "score": 191.8802947998047}, {"docid": "samples/Engineering/CONVERT.php", "score": 185.79730224609375}, {"docid": "src/PhpSpreadsheet/Shared/Xls.php", "score": 184.04820251464844}], "function_summary": "This code snippet handles the display of unit conversion results in a web-based unit converter application. \n\nThe main functionality includes:\n\n1. **Result Display**: On line 85, it outputs the conversion result in a user-friendly format showing the original quantity with its unit name converted to the target quantity with its target unit name (e.g., \"5 meters is 16.4042 feet\").\n\n2. **Data Retrieval**: It accesses the converted result from `$result` (calculated earlier using PhpOffice\\PhpSpreadsheet's ConvertUOM::CONVERT function) and retrieves human-readable unit descriptions from the `$units` array using the selected category and unit codes.\n\n3. **Error Handling**: Lines 86-87 provide fallback error messaging when the conversion cannot be completed, displaying \"Please enter quantity and select From Unit and To Unit\" if the required form inputs are invalid or missing.\n\n4. **Input Validation**: The code implicitly validates that both the from-unit and to-unit exist within the selected category's unit definitions before attempting to display the result.\n\nThis snippet represents the final output stage of a unit conversion process, transforming technical unit codes into readable descriptions for user presentation."}
{"instance_id": "zju-cve-2025-0520", "hits": [{"docid": "server/Application/Home/Controller/PageController.class.php", "score": 1628.2010498046875}, {"docid": "server/Application/Api/Controller/AttachmentController.class.php", "score": 1013.6774291992188}, {"docid": "server/Application/Api/Controller/PageController.class.php", "score": 973.2476806640625}, {"docid": "web/static/js/app.90caad5e16742fd54abf.js", "score": 839.9542846679688}, {"docid": "server/Application/Api/Controller/CatalogController.class.php", "score": 827.740478515625}, {"docid": "server/Application/Home/Controller/ItemController.class.php", "score": 803.8961791992188}, {"docid": "server/Application/Api/Controller/ItemController.class.php", "score": 787.3748779296875}, {"docid": "Public/js/page/edit.js", "score": 733.61669921875}, {"docid": "web_src/src/components/page/edit/Index.vue", "score": 723.5805053710938}, {"docid": "server/Application/Api/Model/ItemModel.class.php", "score": 611.5009765625}, {"docid": "server/Application/Api/Model/PageModel.class.php", "score": 607.8845825195312}, {"docid": "server/Application/Api/Controller/ExportController.class.php", "score": 565.669677734375}, {"docid": "server/Application/Home/Controller/UpdateController.class.php", "score": 550.3109130859375}, {"docid": "server/Application/Api/Controller/ImportPostmanController.class.php", "score": 544.5662231445312}, {"docid": "server/ThinkPHP/Library/Think/Upload.class.php", "score": 505.1072998046875}, {"docid": "Public/js/item/show.js", "score": 498.19110107421875}, {"docid": "server/Application/Api/Controller/FromCommentsController.class.php", "score": 495.4718017578125}, {"docid": "Public/editor.md/editormd.js", "score": 484.17889404296875}, {"docid": "web/static/editor.md/editormd.js", "score": 482.7056884765625}, {"docid": "web_src/static/editor.md/editormd.js", "score": 482.3194885253906}], "function_summary": "This code snippet configures and initializes a file upload handler using the ThinkPHP framework's Upload class. Here's what it does:\n\n**Main functionality:**\n- Creates a new Upload instance for handling file uploads\n- Configures upload restrictions and storage settings\n\n**Key configurations:**\n- **File size limit**: Sets maximum upload size to 3,145,728 bytes (3MB)\n- **Allowed file types**: Restricts uploads to image formats only (jpg, gif, png, jpeg)\n- **Storage location**: Sets the root upload directory to `./Public/Uploads/`\n- **Subdirectory**: Sets an empty save path (files go directly to root upload folder)\n\n**Final operation:**\n- Executes the upload process by calling `upload()` method on the configured instance\n\nThis snippet appears to be part of an image upload feature within a documentation or content management system, specifically handling the fallback upload method when cloud storage (Qiniu) is not configured. The strict image-only file type restrictions and reasonable size limits suggest it's designed for uploading images that will be embedded in markdown content or documentation pages."}
{"instance_id": "zju-cve-2023-41892", "hits": [{"docid": "src/controllers/AssetIndexesController.php", "score": 1645.101318359375}, {"docid": "src/services/AssetIndexer.php", "score": 944.0659790039062}, {"docid": "src/web/assets/assetindexes/src/AssetIndexer.ts", "score": 847.4412231445312}, {"docid": "src/controllers/AssetsController.php", "score": 620.4127197265625}, {"docid": "src/controllers/UsersController.php", "score": 592.3504028320312}, {"docid": "src/web/Controller.php", "score": 519.0886840820312}, {"docid": "src/console/controllers/IndexAssetsController.php", "score": 515.4324951171875}, {"docid": "src/controllers/AppController.php", "score": 474.32550048828125}, {"docid": "src/translations/en-GB/app.php", "score": 473.9429016113281}, {"docid": "src/translations/en/app.php", "score": 473.89410400390625}, {"docid": "src/web/Application.php", "score": 469.3799133300781}, {"docid": "src/config/GeneralConfig.php", "score": 469.09710693359375}, {"docid": "src/controllers/InstallController.php", "score": 467.60479736328125}, {"docid": "src/translations/th/app.php", "score": 460.2152099609375}, {"docid": "src/controllers/ElementIndexesController.php", "score": 457.5823974609375}, {"docid": "src/base/ApplicationTrait.php", "score": 456.4375915527344}, {"docid": "src/elements/Asset.php", "score": 456.24639892578125}, {"docid": "src/controllers/DashboardController.php", "score": 455.1861877441406}, {"docid": "src/translations/id/app.php", "score": 450.243896484375}, {"docid": "src/translations/cy/app.php", "score": 450.222412109375}], "function_summary": "This code snippet is the `beforeAction()` method override in the `AssetIndexesController` class. It implements security checks that run before any action in this controller is executed.\n\n**Key functionality:**\n\n1. **Permission Check**: Requires the user to have the `'utility:asset-indexes'` permission to access any actions in this controller. This ensures only authorized users can perform asset indexing operations.\n\n2. **JSON Response Requirement**: Enforces that the request must accept JSON responses using `requireAcceptsJson()`. This indicates the controller is designed for AJAX/API calls rather than traditional web page requests.\n\n3. **Parent Chain**: Calls the parent class's `beforeAction()` method to ensure any additional security or setup logic from the base `Controller` class is also executed.\n\nThe comment \"No permission no bueno\" humorously emphasizes the strict permission requirement. If either security check fails, the method will throw an exception and prevent the requested action from executing. This is a common pattern in Craft CMS for securing administrative functionality, ensuring that asset indexing operations (which can be resource-intensive and affect the system's file management) are only accessible to users with appropriate privileges through JSON-based requests."}
{"instance_id": "zju-cve-2024-56145", "hits": [{"docid": "src/services/Entries.php", "score": 10524.892578125}, {"docid": "src/elements/Entry.php", "score": 5701.431640625}, {"docid": "src/services/Sites.php", "score": 5134.5869140625}, {"docid": "src/services/Elements.php", "score": 5029.8701171875}, {"docid": "src/controllers/EntriesController.php", "score": 4686.4736328125}, {"docid": "src/models/Section.php", "score": 4670.4296875}, {"docid": "src/console/controllers/EntrifyController.php", "score": 4636.1943359375}, {"docid": "src/base/Element.php", "score": 4531.578125}, {"docid": "src/fields/Matrix.php", "score": 4501.8232421875}, {"docid": "src/services/Categories.php", "score": 4497.7236328125}, {"docid": "src/services/Gql.php", "score": 4444.23583984375}, {"docid": "src/services/Fields.php", "score": 4399.10791015625}, {"docid": "src/elements/db/EntryQuery.php", "score": 4317.99853515625}, {"docid": "src/services/Gc.php", "score": 4035.1015625}, {"docid": "src/services/ProjectConfig.php", "score": 4014.685546875}, {"docid": "src/console/controllers/ResaveController.php", "score": 3911.5087890625}, {"docid": "src/elements/db/ElementQuery.php", "score": 3901.347412109375}, {"docid": "src/migrations/Install.php", "score": 3885.821533203125}, {"docid": "src/translations/id/app.php", "score": 3838.765380859375}, {"docid": "src/translations/cy/app.php", "score": 3838.24169921875}], "function_summary": "This code snippet is part of a method that ensures Single section entries exist in a CraftCMS application. It represents a fallback mechanism for finding or creating entries when the primary methods fail.\n\nThe key functionality includes:\n\n1. **Trashed Entry Recovery**: If no valid entry is found through normal queries, it searches for trashed entries that were previously deleted along with their entry type (`deletedWithEntryType` = true). This allows recovery of entries that were soft-deleted due to entry type changes.\n\n2. **Type Reassignment**: When a trashed entry is found, it reassigns the entry to the first available entry type ID from the section's current entry types (`$entryTypeIds[0]`). This handles cases where entry types may have changed since the entry was deleted.\n\n3. **New Entry Creation**: As a final fallback, if no existing entry (active or trashed) can be found, it creates a completely new Entry instance with default properties including the site ID, section ID, entry type, and section name as the title.\n\nThis ensures that Single sections always have exactly one entry, even after configuration changes, deletions, or data inconsistencies. It's part of a larger data integrity mechanism that maintains the \"single entry per section\" constraint that defines Single-type sections in CraftCMS."}
{"instance_id": "zju-cve-2021-26120", "hits": [{"docid": "libs/sysplugins/smarty_security.php", "score": 669.5441284179688}, {"docid": "libs/Smarty.class.php", "score": 467.1759033203125}, {"docid": "libs/sysplugins/smarty_internal_templatecompilerbase.php", "score": 334.8822937011719}, {"docid": "libs/sysplugins/smarty_internal_template.php", "score": 318.73388671875}, {"docid": "demo/plugins/resource.mysql.php", "score": 315.7344055175781}, {"docid": "demo/plugins/resource.mysqls.php", "score": 305.3865966796875}, {"docid": "libs/plugins/function.fetch.php", "score": 288.2843933105469}, {"docid": "libs/sysplugins/smarty_internal_debug.php", "score": 274.3900146484375}, {"docid": "libs/SmartyBC.class.php", "score": 257.62298583984375}, {"docid": "libs/sysplugins/smarty_internal_compile_private_special_variable.php", "score": 247.10800170898438}, {"docid": "demo/plugins/cacheresource.pdo.php", "score": 243.4329071044922}, {"docid": "demo/plugins/cacheresource.mysql.php", "score": 243.15139770507812}, {"docid": "libs/sysplugins/smarty_internal_templatebase.php", "score": 240.685302734375}, {"docid": "demo/templates/index.tpl", "score": 233.5225067138672}, {"docid": "libs/sysplugins/smarty_resource.php", "score": 218.1934051513672}, {"docid": "libs/sysplugins/smarty_internal_compile_private_php.php", "score": 212.98159790039062}, {"docid": "libs/sysplugins/smarty_cacheresource_keyvaluestore.php", "score": 206.68829345703125}, {"docid": "libs/sysplugins/smarty_internal_templatelexer.php", "score": 195.39450073242188}, {"docid": "libs/sysplugins/smarty_internal_templateparser.php", "score": 193.69749450683594}, {"docid": "libs/sysplugins/smarty_internal_compile_private_modifier.php", "score": 189.3804931640625}], "function_summary": "This code snippet shows a PHPDoc comment that serves as documentation for a test method in a Smarty template engine security test suite. The comment explains that when Smarty is running in security mode, attempting to access the special variable `$smarty.template_object` should be considered an illegal operation and should be blocked.\n\nThis is part of a security test that ensures Smarty's security policy properly restricts access to potentially sensitive internal objects that could be exploited if accessible from templates. The `$smarty.template_object` variable would normally provide access to the underlying template object, which could expose internal methods and properties that shouldn't be available in a secured templating environment.\n\nThe comment indicates this test is specifically designed to verify that Smarty's security mechanism correctly prevents template authors from accessing this potentially dangerous variable, helping to maintain the security boundary between template code and the underlying PHP application."}
{"instance_id": "zju-cve-2017-9841", "hits": [{"docid": "src/Util/XML.php", "score": 55.433101654052734}, {"docid": "src/TextUI/Command.php", "score": 42.00899887084961}, {"docid": "src/Framework/TestCase.php", "score": 38.859798431396484}, {"docid": "src/Framework/Assert.php", "score": 34.422000885009766}, {"docid": "src/Framework/Assert/Functions.php", "score": 31.372600555419922}, {"docid": "src/Framework/TestSuite.php", "score": 29.513500213623047}, {"docid": "build.xml", "score": 28.519800186157227}, {"docid": "src/Util/PHP/eval-stdin.php", "score": 28.02389907836914}, {"docid": "src/Framework/Constraint/ArrayHasKey.php", "score": 27.188899993896484}, {"docid": "src/Util/Log/JSON.php", "score": 26.499500274658203}, {"docid": "src/Framework/Constraint/StringContains.php", "score": 24.459800720214844}, {"docid": "src/Util/PHP/Windows.php", "score": 23.32159996032715}, {"docid": "src/Framework/Constraint/IsAnything.php", "score": 21.766399383544922}, {"docid": "src/Util/PHP/Default.php", "score": 20.294700622558594}, {"docid": "src/Util/Log/TAP.php", "score": 20.00200080871582}, {"docid": "src/Framework/TestResult.php", "score": 19.423599243164062}, {"docid": "src/Extensions/PhptTestCase.php", "score": 18.007299423217773}, {"docid": "src/TextUI/ResultPrinter.php", "score": 17.36359977722168}, {"docid": "src/Util/Log/JUnit.php", "score": 17.256999969482422}, {"docid": "src/Util/Printer.php", "score": 17.076400756835938}], "function_summary": "This code snippet implements a PHP script that dynamically executes PHP code received from standard input (stdin).\n\n**Key functionality:**\n\n1. **Reads input**: Uses `file_get_contents('php://input')` to read all data from standard input stream\n2. **Prepends PHP closing tag**: Concatenates `'?>'` to the beginning of the input data\n3. **Executes code**: Uses `eval()` to execute the constructed string as PHP code\n\n**How it works:**\nThe script expects PHP code to be piped or redirected to it via stdin. By prepending `'?>'`, it effectively closes the current PHP context and allows the input to be treated as a mix of HTML/text and PHP code (if the input contains PHP opening tags like `<?php`).\n\n**Security implications:**\nThis is an extremely dangerous pattern as it executes arbitrary code from external input without any validation or sanitization. It could be exploited to run malicious PHP code, access files, or compromise the system.\n\n**Typical use case:**\nThis appears to be a utility script for dynamically evaluating PHP code, possibly for testing, development, or automation purposes, but should only be used in completely trusted environments due to the severe security risks involved."}
{"instance_id": "zju-cve-2025-34086", "hits": [{"docid": "src/Controller/Async/FilesystemManager.php", "score": 2886.5859375}, {"docid": "src/Controller/Backend/FileManager.php", "score": 1391.72900390625}, {"docid": "src/Config.php", "score": 1179.1256103515625}, {"docid": "src/Controller/Backend/Extend.php", "score": 1149.1331787109375}, {"docid": "src/Controller/Backend/General.php", "score": 1073.9630126953125}, {"docid": "src/Controller/Async/General.php", "score": 1044.4412841796875}, {"docid": "src/Controller/Base.php", "score": 1019.0078125}, {"docid": "app/resources/translations/en_GB/messages.en_GB.yml", "score": 1008.4260864257812}, {"docid": "app/resources/translations/id/messages.id.yml", "score": 994.6248168945312}, {"docid": "src/Translation/TranslationFile.php", "score": 980.6951293945312}, {"docid": "app/resources/translations/el/messages.el.yml", "score": 966.7014770507812}, {"docid": "app/resources/translations/it/messages.it.yml", "score": 948.3668212890625}, {"docid": "app/src/js/modules/files.js", "score": 947.522216796875}, {"docid": "src/Controller/Backend/Records.php", "score": 937.1168212890625}, {"docid": "app/resources/translations/nb/messages.nb.yml", "score": 929.6790771484375}, {"docid": "src/Controller/Frontend.php", "score": 921.9315185546875}, {"docid": "src/Configuration/ResourceManager.php", "score": 914.1884155273438}, {"docid": "src/EventListener/ExceptionListener.php", "score": 895.7971801757812}, {"docid": "src/Controller/Backend/Upload.php", "score": 873.001708984375}, {"docid": "app/resources/translations/zh_CN/messages.zh_CN.yml", "score": 865.7938842773438}], "function_summary": "This code snippet is part of the `renameFolder` method in a filesystem management controller. It performs validation to ensure that only directories (folders) can be renamed using this specific method.\n\nThe key functionality includes:\n\n1. **Directory Retrieval**: Uses `$this->filesystem()->getDir()` to get a directory object from the filesystem using a namespace-based path format (`$namespace://$parent/$oldName`)\n\n2. **Validation Check**: Checks if the retrieved object is actually a directory by testing `if (!$dir)`\n\n3. **Error Response**: If the validation fails (meaning the path doesn't point to a valid directory), it returns a JSON error response with HTTP 400 Bad Request status and an explanatory message stating \"Only directories are allowed to be renamed with this method\"\n\nThis validation step is crucial for maintaining filesystem integrity by preventing attempts to rename non-directory items (like files) through the folder renaming endpoint. It serves as a safety check before proceeding with the actual rename operation, ensuring the method is only used for its intended purpose of renaming folders/directories."}
{"instance_id": "zju-cve-2016-5734", "hits": [{"docid": "libraries/Menu.class.php", "score": 3146.665283203125}, {"docid": "libraries/Util.class.php", "score": 1832.805419921875}, {"docid": "libraries/config/messages.inc.php", "score": 1262.174072265625}, {"docid": "libraries/config.default.php", "score": 1206.2109375}, {"docid": "libraries/controllers/TableSearchController.class.php", "score": 1179.1427001953125}, {"docid": "libraries/insert_edit.lib.php", "score": 1155.361572265625}, {"docid": "libraries/server_user_groups.lib.php", "score": 1093.297119140625}, {"docid": "libraries/relation.lib.php", "score": 1088.0472412109375}, {"docid": "libraries/sql.lib.php", "score": 1060.3719482421875}, {"docid": "libraries/server_privileges.lib.php", "score": 1040.0968017578125}, {"docid": "libraries/navigation/NavigationTree.class.php", "score": 1021.3350219726562}, {"docid": "js/functions.js", "score": 1016.0396118164062}, {"docid": "index.php", "score": 1005.6290283203125}, {"docid": "libraries/config/FormDisplay.tpl.php", "score": 1004.8400268554688}, {"docid": "libraries/DisplayResults.class.php", "score": 998.5545043945312}, {"docid": "libraries/server_status_monitor.lib.php", "score": 991.609619140625}, {"docid": "libraries/controllers/TableStructureController.class.php", "score": 980.5814208984375}, {"docid": "libraries/DatabaseInterface.class.php", "score": 965.0872192382812}, {"docid": "db_operations.php", "score": 954.4688110351562}, {"docid": "libraries/Footer.class.php", "score": 904.7896118164062}], "function_summary": "This code snippet initializes variables for generating HTML breadcrumb navigation in a phpMyAdmin interface. Here's what it does:\n\n1. **Initializes return value**: Sets `$retval` as an empty string to build the HTML output.\n\n2. **Checks table type**: Determines if the current table is a view by calling `isView()` method on the database table object.\n\n3. **Builds server information**: Constructs a server display string by:\n   - Using the verbose server name if configured, otherwise falling back to the hostname\n   - Appending the port number (with colon prefix) if a port is specified in the configuration\n\n4. **Sets up HTML templates**: Defines two key HTML template strings:\n   - `$separator`: Creates a visual separator (\u00bb) between breadcrumb items with appropriate CSS classes\n   - `$item`: Creates the base template for breadcrumb links with placeholders for URL, parameters, display text, and optional label\n\nThis snippet is part of the `_getBreadcrumbs()` method and prepares the foundational elements needed to generate the hierarchical navigation path (Server \u2192 Database \u2192 Table) that appears at the top of phpMyAdmin pages, helping users understand their current location within the database structure."}
{"instance_id": "zju-cve-2018-1000019", "hits": [{"docid": "interface/billing/get_claim_file.php", "score": 294.8251953125}, {"docid": "controllers/C_Document.class.php", "score": 217.9564971923828}, {"docid": "interface/billing/sl_eob_search.php", "score": 199.82879638671875}, {"docid": "interface/patient_file/download_template.php", "score": 193.7454071044922}, {"docid": "interface/patient_file/report/custom_report.php", "score": 190.44920349121094}, {"docid": "portal/report/portal_custom_report.php", "score": 179.84280395507812}, {"docid": "interface/billing/billing_process.php", "score": 171.660400390625}, {"docid": "ccr/createCCR.php", "score": 168.60130310058594}, {"docid": "interface/orders/receive_hl7_results.inc.php", "score": 167.0926971435547}, {"docid": "interface/reports/svc_code_financial_report.php", "score": 162.6468048095703}, {"docid": "library/edihistory/edih_io.php", "score": 162.46690368652344}, {"docid": "interface/orders/gen_hl7_order.inc.php", "score": 162.2996063232422}, {"docid": "interface/reports/pat_ledger.php", "score": 160.28990173339844}, {"docid": "portal/report/pat_ledger.php", "score": 159.96530151367188}, {"docid": "interface/reports/unique_seen_patients_report.php", "score": 159.28570556640625}, {"docid": "interface/reports/patient_list.php", "score": 157.5886993408203}, {"docid": "interface/forms/eye_mag/php/taskman_functions.php", "score": 157.1470947265625}, {"docid": "interface/reports/sales_by_item.php", "score": 156.95339965820312}, {"docid": "interface/orders/procedure_stats.php", "score": 155.76199340820312}, {"docid": "library/edihistory/edih_csv_inc.php", "score": 154.60589599609375}], "function_summary": "This code snippet contains the standard GNU General Public License (GPL) header comment that appears at the beginning of the PHP file. It declares that the program is free software that can be redistributed and/or modified under the terms of the GNU GPL version 2 or later. This is a licensing declaration that establishes the legal terms under which the software can be used, distributed, and modified by others. The GPL is a copyleft license that ensures the software remains free and open source."}
{"instance_id": "zju-cve-2018-15153", "hits": [{"docid": "ccdaservice/ccda_gateway.php", "score": 1607.6414794921875}, {"docid": "interface/modules/zend_modules/module/Carecoordination/src/Carecoordination/Controller/EncounterccdadispatchController.php", "score": 836.099609375}, {"docid": "myportal/soap_service/server_med_rec.php", "score": 571.4285888671875}, {"docid": "interface/globals.php", "score": 485.8335876464844}, {"docid": "gacl/soap/nusoap.php", "score": 470.0968933105469}, {"docid": "portal/messaging/secure_chat.php", "score": 462.6330871582031}, {"docid": "interface/main/calendar/includes/pnAPI.php", "score": 456.8337097167969}, {"docid": "public/assets/angular-1-5-8/angular.js", "score": 441.9071044921875}, {"docid": "interface/eRx_xml.php", "score": 440.6736145019531}, {"docid": "library/MedEx/API.php", "score": 426.2356872558594}, {"docid": "portal/messaging/messages.php", "score": 426.0541076660156}, {"docid": "interface/main/backup.php", "score": 416.3671875}, {"docid": "portal/report/portal_patient_report.php", "score": 412.19158935546875}, {"docid": "interface/main/calendar/modules/PostCalendar/common.api.php", "score": 404.0631103515625}, {"docid": "controllers/C_Document.class.php", "score": 399.3208923339844}, {"docid": "vendor/symfony/process/Process.php", "score": 395.6588134765625}, {"docid": "setup.php", "score": 395.1924133300781}, {"docid": "interface/modules/zend_modules/module/Carecoordination/src/Carecoordination/Model/EncounterccdadispatchTable.php", "score": 391.9844970703125}, {"docid": "portal/find_appt_popup_user.php", "score": 385.085693359375}, {"docid": "portal/report/portal_custom_report.php", "score": 378.96771240234375}], "function_summary": "This code snippet handles cross-platform execution of a Node.js service for CCDA (Continuity of Care Document Architecture) processing. \n\n**Main functionality:**\n- **Platform detection**: Uses the `IS_WINDOWS` constant to determine the operating system\n- **Service startup**: Launches a Node.js service (`serveccda.js`) located in the CCDA service directory\n- **Windows execution**: Uses `pclose(popen(\"start /B \" . $cmd, \"r\"))` to start the Node.js process in the background with the `start /B` command\n- **Unix/Linux execution**: Uses `exec($cmd . \" > /dev/null &\")` to run the process in the background, redirecting output to `/dev/null`\n\n**Key differences:**\n- Windows uses `node` command while Unix-like systems use `nodejs`\n- Windows uses the `start /B` command for background execution\n- Unix systems use the `&` operator and output redirection for background processing\n\nThis snippet is part of a service management system that ensures the CCDA document generation service is running when needed, automatically starting it if the initial connection attempt fails. The background execution prevents the web request from hanging while the service starts up."}
{"instance_id": "zju-cve-2020-16846", "hits": [{"docid": "salt/client/ssh/shell.py", "score": 2467.312255859375}, {"docid": "salt/client/ssh/__init__.py", "score": 907.0045776367188}, {"docid": "salt/utils/cloud.py", "score": 817.3798828125}, {"docid": "salt/utils/vt_helper.py", "score": 652.7194213867188}, {"docid": "salt/utils/parsers.py", "score": 644.11181640625}, {"docid": "salt/netapi/rest_cherrypy/app.py", "score": 562.3720703125}, {"docid": "salt/modules/cmdmod.py", "score": 549.1129150390625}, {"docid": "salt/modules/virt.py", "score": 535.2830810546875}, {"docid": "salt/client/__init__.py", "score": 534.6600952148438}, {"docid": "salt/modules/lxc.py", "score": 529.5950927734375}, {"docid": "salt/utils/network.py", "score": 528.6267700195312}, {"docid": "salt/minion.py", "score": 525.2708129882812}, {"docid": "salt/utils/gitfs.py", "score": 524.3344116210938}, {"docid": "salt/master.py", "score": 520.7869873046875}, {"docid": "salt/modules/dockermod.py", "score": 520.2338256835938}, {"docid": "salt/modules/napalm_mod.py", "score": 513.11962890625}, {"docid": "salt/states/file.py", "score": 505.4961853027344}, {"docid": "salt/utils/vt.py", "score": 500.86761474609375}, {"docid": "salt/modules/ssh.py", "score": 499.1528015136719}, {"docid": "salt/state.py", "score": 496.97320556640625}], "function_summary": "This code snippet contains import statements for essential Python libraries used in the SSH shell module:\n\n- `re`: Regular expression module for pattern matching (used throughout the file for parsing SSH prompts and responses)\n- `subprocess`: Module for spawning new processes and executing system commands (used for running SSH commands and key generation)\n- `sys`: System-specific parameters and functions module (used for system exit calls and accessing system information)\n\nThese imports are part of the \"Import python libs\" section and provide core functionality for the SSH transport command management system. The `re` module is particularly important here as the file defines several regular expressions for detecting SSH password prompts, key validation prompts, and private key passphrases. The `subprocess` module enables the execution of SSH commands, SCP file transfers, and SSH key generation operations. The `sys` module supports system-level operations like controlled program termination when dependencies are missing."}
{"instance_id": "zju-cve-2019-3968", "hits": [{"docid": "contrib/forms/scanned_notes/new.php", "score": 1189.50048828125}, {"docid": "interface/fax/fax_dispatch.php", "score": 822.6201782226562}, {"docid": "interface/super/manage_site_files.php", "score": 636.1016845703125}, {"docid": "interface/forms/LBF/new.php", "score": 565.8546142578125}, {"docid": "contrib/forms/specialist_notes/new.php", "score": 532.7349243164062}, {"docid": "contrib/forms/specialist_notes/view.php", "score": 532.6771240234375}, {"docid": "interface/billing/sl_eob_search.php", "score": 508.0343017578125}, {"docid": "interface/orders/orders_results.php", "score": 506.19720458984375}, {"docid": "interface/patient_file/encounter/forms.php", "score": 500.7771911621094}, {"docid": "interface/forms/procedure_order/new.php", "score": 497.6979064941406}, {"docid": "interface/main/backup.php", "score": 492.13751220703125}, {"docid": "interface/patient_file/front_payment.php", "score": 484.71771240234375}, {"docid": "library/spreadsheet.inc.php", "score": 484.3800048828125}, {"docid": "interface/forms/physical_exam/new.php", "score": 484.1300964355469}, {"docid": "interface/patient_file/summary/demographics.php", "score": 482.96539306640625}, {"docid": "portal/report/portal_custom_report.php", "score": 481.7992858886719}, {"docid": "interface/main/left_nav.php", "score": 478.66729736328125}, {"docid": "interface/main/calendar/add_edit_event.php", "score": 477.1094970703125}, {"docid": "interface/forms/fee_sheet/new.php", "score": 475.7304992675781}, {"docid": "interface/patient_file/summary/add_edit_issue.php", "score": 474.590087890625}], "function_summary": "This code snippet initializes variables and prepares for form processing in a scanned notes encounter form. Here's what it does:\n\n**Variable Initialization:**\n- Gets the `$formid` from the URL parameter `id` using `$_GET['id']`\n- Constructs the `$imagedir` path by combining the OpenEMR site directory with a patient-specific documents folder structure: `/documents/$pid/encounters`\n\n**Purpose:**\n- The `$formid` is used to identify whether this is editing an existing scanned notes form (if ID exists) or creating a new one (if ID is null)\n- The `$imagedir` path points to where scanned document images will be stored, organized by patient ID (`$pid`) in an encounters subfolder\n\n**Context:**\nThe comment indicates this is the beginning of save processing logic - when a user clicks the \"Save\" button on the form, the subsequent code will handle saving both the form data and any uploaded scanned document images to the database and file system respectively.\n\nThis snippet essentially sets up the foundation for the form's core functionality: managing scanned clinical documents with associated metadata and file storage in a structured directory system."}
{"instance_id": "zju-CVE-2022-0611", "hits": [{"docid": "app/Http/Controllers/Api/AssetMaintenancesController.php", "score": 2125.635009765625}, {"docid": "app/Http/Controllers/AssetMaintenancesController.php", "score": 1664.32373046875}, {"docid": "app/Http/Controllers/ReportsController.php", "score": 1127.547119140625}, {"docid": "app/Http/Controllers/Api/AssetsController.php", "score": 1121.76806640625}, {"docid": "app/Http/Controllers/Api/AccessoriesController.php", "score": 1049.06591796875}, {"docid": "app/Http/Controllers/Api/ComponentsController.php", "score": 1047.690185546875}, {"docid": "app/Http/Controllers/Api/ConsumablesController.php", "score": 1004.9520874023438}, {"docid": "app/Http/Controllers/Api/UsersController.php", "score": 994.8469848632812}, {"docid": "app/Http/Controllers/Api/AssetModelsController.php", "score": 961.4866943359375}, {"docid": "app/Http/Controllers/Api/LicensesController.php", "score": 958.073486328125}, {"docid": "app/Http/Controllers/Api/DepartmentsController.php", "score": 937.6796875}, {"docid": "app/Http/Controllers/Api/StatuslabelsController.php", "score": 934.4373779296875}, {"docid": "app/Http/Controllers/Api/SuppliersController.php", "score": 933.8380126953125}, {"docid": "app/Http/Controllers/Api/CompaniesController.php", "score": 918.7437133789062}, {"docid": "app/Http/Controllers/Api/LocationsController.php", "score": 915.030517578125}, {"docid": "app/Http/Controllers/Api/CategoriesController.php", "score": 904.3756713867188}, {"docid": "app/Http/Controllers/Api/ManufacturersController.php", "score": 904.1392822265625}, {"docid": "app/Models/AssetMaintenance.php", "score": 880.5338134765625}, {"docid": "app/Http/Controllers/Assets/AssetsController.php", "score": 876.5114135742188}, {"docid": "app/Http/Controllers/Api/DepreciationsController.php", "score": 870.9760131835938}], "function_summary": "This code snippet is the beginning of the `index` method in an API controller for managing asset maintenances. The method handles listing/retrieving asset maintenance records with the following key functionality:\n\n**Main Operations:**\n1. **Query Setup**: Initializes a query on the `AssetMaintenance` model with eager loading of related models (`asset`, `asset.model`, `asset.location`, `supplier`, `asset.company`, `admin`) to optimize database queries and avoid N+1 problems.\n\n2. **Search Filtering**: Implements optional text search functionality - if a 'search' parameter is provided in the request, it applies a `TextSearch` method to filter maintenance records based on the search criteria.\n\n**Purpose**: This is part of a REST API endpoint that allows clients to retrieve a list of asset maintenance records. The eager loading ensures that when maintenance records are returned, their associated asset information, supplier details, and admin user data are included without additional database queries.\n\nThe method appears to be building up a query that will likely be further filtered, paginated, and sorted in subsequent code (not shown in this snippet) before returning the results as a JSON API response."}
{"instance_id": "zju-CVE-2022-0179", "hits": [{"docid": "app/Http/Controllers/BulkAssetModelsController.php", "score": 1070.3587646484375}, {"docid": "app/Http/Controllers/AssetModelsController.php", "score": 1042.5791015625}, {"docid": "app/Http/Controllers/Users/BulkUsersController.php", "score": 607.3724975585938}, {"docid": "app/Http/Controllers/Assets/BulkAssetsController.php", "score": 561.751220703125}, {"docid": "app/Http/Controllers/Assets/AssetsController.php", "score": 545.5911865234375}, {"docid": "app/Http/Controllers/Users/UsersController.php", "score": 531.86767578125}, {"docid": "app/Http/Controllers/Api/AssetsController.php", "score": 527.6436157226562}, {"docid": "app/Http/Controllers/Api/AssetModelsController.php", "score": 525.3131713867188}, {"docid": "app/Http/Controllers/Licenses/LicensesController.php", "score": 518.3796997070312}, {"docid": "app/Http/Controllers/LocationsController.php", "score": 488.5567932128906}, {"docid": "app/Http/Controllers/CustomFieldsetsController.php", "score": 486.32769775390625}, {"docid": "app/Http/Controllers/Api/UsersController.php", "score": 476.0892028808594}, {"docid": "app/Http/Controllers/Api/AccessoriesController.php", "score": 459.3450927734375}, {"docid": "app/Http/Controllers/Api/LicensesController.php", "score": 458.681884765625}, {"docid": "app/Http/Controllers/Api/ComponentsController.php", "score": 451.52880859375}, {"docid": "app/Http/Controllers/Consumables/ConsumablesController.php", "score": 446.72198486328125}, {"docid": "app/Http/Controllers/Api/StatuslabelsController.php", "score": 446.4117126464844}, {"docid": "app/Http/Controllers/CategoriesController.php", "score": 446.2112121582031}, {"docid": "app/Http/Controllers/SettingsController.php", "score": 444.8085021972656}, {"docid": "app/Http/Controllers/Api/LocationsController.php", "score": 443.2423095703125}], "function_summary": "This code snippet is part of the bulk edit functionality for asset models. It specifically handles the case when a user selects the \"delete\" action from bulk operations.\n\n**Key functionality:**\n\n1. **Checks for delete action**: The code first verifies if the user has selected 'delete' as the bulk action through `$request->input('bulk_actions')=='delete'`\n\n2. **Validates deletability**: It iterates through each selected asset model to count how many are eligible for deletion. Models can only be deleted if they have no associated assets (`assets_count == 0`)\n\n3. **Counts valid models**: The `$valid_count` variable tracks how many models can be safely deleted without breaking referential integrity\n\n4. **Returns delete confirmation view**: After counting, it returns a bulk delete confirmation view (`models/bulk-delete`) with the selected models and the count of valid (deletable) models\n\nThis validation step is crucial because asset models that are currently assigned to assets cannot be deleted, as it would leave orphaned asset records. The snippet ensures users are informed about which models can be deleted before proceeding with the actual deletion operation."}
{"instance_id": "zju-cve-2023-34448", "hits": [{"docid": "system/src/Grav/Common/Twig/Extension/GravExtension.php", "score": 5728.2958984375}, {"docid": "system/src/Grav/Common/Utils.php", "score": 2543.29248046875}, {"docid": "system/src/Grav/Common/Page/Pages.php", "score": 2024.4566650390625}, {"docid": "system/src/Grav/Common/Page/Page.php", "score": 1919.3974609375}, {"docid": "system/src/Grav/Common/Flex/Types/Pages/PageIndex.php", "score": 1764.3082275390625}, {"docid": "system/src/Grav/Framework/Flex/Pages/Traits/PageLegacyTrait.php", "score": 1751.087890625}, {"docid": "system/src/Grav/Common/Uri.php", "score": 1750.9296875}, {"docid": "system/src/Grav/Common/Twig/Twig.php", "score": 1746.66845703125}, {"docid": "system/src/Grav/Common/Debugger.php", "score": 1742.68115234375}, {"docid": "system/src/Grav/Common/Grav.php", "score": 1665.3486328125}, {"docid": "system/src/Grav/Common/Flex/Types/Pages/PageObject.php", "score": 1644.5557861328125}, {"docid": "system/src/Grav/Common/Data/Validation.php", "score": 1598.51611328125}, {"docid": "system/src/Grav/Framework/Flex/FlexObject.php", "score": 1597.6063232421875}, {"docid": "system/src/Grav/Common/Flex/Types/Users/UserObject.php", "score": 1568.3427734375}, {"docid": "system/src/Grav/Common/Language/Language.php", "score": 1539.979736328125}, {"docid": "system/src/Grav/Framework/Flex/FlexDirectory.php", "score": 1531.749267578125}, {"docid": "system/config/system.yaml", "score": 1514.102783203125}, {"docid": "system/src/Grav/Common/Page/Interfaces/PageLegacyInterface.php", "score": 1451.22509765625}, {"docid": "system/src/Grav/Common/Media/Traits/MediaObjectTrait.php", "score": 1437.2353515625}, {"docid": "system/src/Grav/Common/Flex/Types/Pages/Storage/PageStorage.php", "score": 1432.1593017578125}], "function_summary": "This code snippet is part of a translation function within the GravExtension class. Here's what it does:\n\n1. **Gets translation**: Line 909 retrieves a translation for the provided arguments using Grav's language service (`$this->grav['language']->translate($args)`).\n\n2. **Debug mode check**: Line 911 checks if language debugging is enabled by looking at the system configuration setting `system.languages.debug`.\n\n3. **Debug output**: If debugging is enabled (not shown in the snippet but implied by the conditional), the function would wrap the translated text in a debug span element with tooltip functionality, allowing developers to see the original translation key.\n\n4. **Normal output**: If debugging is disabled, it simply returns the translated text without any debug markup.\n\nThis functionality is particularly useful during development when working with multilingual sites, as it allows developers to easily identify which translation keys are being used for specific text elements on the page. The debug mode adds visual indicators (tooltips) that show the original translation key when hovering over translated text, making it easier to manage and update translations.\n\nThe snippet is part of the larger `translate()` method that handles both admin panel translations and regular site translations."}
{"instance_id": "zju-cve-2023-5341", "hits": [{"docid": "www/architecture.html", "score": 7143.4892578125}, {"docid": "www/api/Image++.html", "score": 3849.517578125}, {"docid": "www/Magick++/Image.html", "score": 3794.728515625}, {"docid": "www/Magick++/Image++.html", "score": 3783.146728515625}, {"docid": "www/command-line-options.html", "score": 3534.2568359375}, {"docid": "www/api/magick-image.html", "score": 3443.077880859375}, {"docid": "www/perl-magick.html", "score": 3379.04443359375}, {"docid": "www/porting.html", "score": 3322.44287109375}, {"docid": "www/defines.html", "score": 3196.671142578125}, {"docid": "www/Magick++/STL.html", "score": 3187.293212890625}, {"docid": "www/api/Magick++/Image_8h_source.html", "score": 2709.909912109375}, {"docid": "www/magick-core.html", "score": 2704.96826171875}, {"docid": "www/magick-wand.html", "score": 2683.063232421875}, {"docid": "www/api/Magick++/Image_8cpp_source.html", "score": 2656.6025390625}, {"docid": "www/changelog.html", "score": 2638.314697265625}, {"docid": "www/api/constitute.html", "score": 2615.460693359375}, {"docid": "www/formats.html", "score": 2588.418212890625}, {"docid": "www/api/magick-property.html", "score": 2582.55029296875}, {"docid": "www/escape.html", "score": 2556.309814453125}, {"docid": "www/fx.html", "score": 2544.914306640625}], "function_summary": "This code snippet performs validation checks on BMP (bitmap) image header data to ensure the file structure is valid before proceeding with image reading.\n\nThe snippet validates two critical header fields:\n\n1. **Header size validation (line 696-697)**: Checks if `bmp_info.size` exceeds 124 bytes. BMP headers have defined maximum sizes, and values above 124 indicate a corrupted or invalid file format.\n\n2. **Offset validation (lines 698-699)**: Verifies that `bmp_info.offset_bits` (which points to where pixel data begins) is not smaller than `bmp_info.size` (the header size). This ensures the pixel data offset doesn't point into the header area, which would indicate file corruption or an invalid structure.\n\nIf either validation fails, the function throws a `CorruptImageError` with the message \"ImproperImageHeader\" and stops processing the image file.\n\nThese checks are essential security and data integrity measures that prevent the decoder from attempting to read malformed BMP files that could cause crashes, buffer overflows, or other undefined behavior. The validations ensure the file follows the expected BMP format specifications before any actual image data processing begins."}
{"instance_id": "zju-cve-2024-4041", "hits": [{"docid": "src/Controller/Frontend.php", "score": 3898.865234375}, {"docid": "src/Legacy/Storage.php", "score": 2304.104248046875}, {"docid": "src/Twig/Runtime/RecordRuntime.php", "score": 1839.3519287109375}, {"docid": "src/Controller/Async/General.php", "score": 1837.916748046875}, {"docid": "src/Controller/Base.php", "score": 1823.944580078125}, {"docid": "src/Config.php", "score": 1732.3555908203125}, {"docid": "src/Controller/Backend/Records.php", "score": 1682.5533447265625}, {"docid": "src/Storage/ContentRequest/Save.php", "score": 1635.0908203125}, {"docid": "app/resources/translations/en_GB/messages.en_GB.yml", "score": 1615.658447265625}, {"docid": "src/Legacy/Content.php", "score": 1599.304443359375}, {"docid": "app/resources/translations/id/messages.id.yml", "score": 1562.555419921875}, {"docid": "src/Storage/Entity/ContentValuesTrait.php", "score": 1543.7449951171875}, {"docid": "src/Storage/ContentRequest/Edit.php", "score": 1535.48828125}, {"docid": "app/resources/translations/nb/messages.nb.yml", "score": 1521.691650390625}, {"docid": "app/resources/translations/it/messages.it.yml", "score": 1519.7684326171875}, {"docid": "app/resources/translations/el/messages.el.yml", "score": 1516.276611328125}, {"docid": "src/Controller/Backend/General.php", "score": 1453.288818359375}, {"docid": "app/resources/translations/zh_CN/messages.zh_CN.yml", "score": 1385.8896484375}, {"docid": "app/resources/translations/pl_PL/messages.pl_PL.yml", "score": 1375.7042236328125}, {"docid": "app/resources/translations/ja/messages.ja.yml", "score": 1375.0191650390625}], "function_summary": "This code snippet is from the `preview` method in a Bolt CMS Frontend controller. It performs the following key operations:\n\n1. **Retrieves content type configuration**: Gets the content type definition using the provided `$contenttypeslug` parameter via `$this->getContentType($contenttypeslug)`\n\n2. **Extracts form data**: Collects all POST request parameters using `$request->request->all()` and stores them in `$formValues`\n\nThis snippet represents the initial setup phase of content preview functionality, where:\n- The system identifies what type of content is being previewed (e.g., page, article, etc.)\n- It captures all the form field values that were submitted via POST request\n\nThis data preparation is essential for the preview feature, as the content type definition provides the structure and validation rules, while the form values contain the actual content data that users want to preview before publishing. The subsequent code (not shown in this snippet) would use this information to create a temporary content object and render it using the appropriate template, allowing users to see how their content would appear on the frontend without actually saving it to the database."}
{"instance_id": "zju-cve-2020-19217", "hits": [{"docid": "admin/batch_manager.php", "score": 4398.99755859375}, {"docid": "admin/batch_manager_global.php", "score": 2608.156005859375}, {"docid": "admin/batch_manager_unit.php", "score": 2025.1566162109375}, {"docid": "picture.php", "score": 1940.169677734375}, {"docid": "comments.php", "score": 1760.220947265625}, {"docid": "include/ws_functions/pwg.images.php", "score": 1628.177734375}, {"docid": "include/functions_user.inc.php", "score": 1609.97998046875}, {"docid": "admin/history.php", "score": 1595.477783203125}, {"docid": "admin/include/functions.php", "score": 1575.0665283203125}, {"docid": "admin/picture_modify.php", "score": 1528.79296875}, {"docid": "admin/cat_modify.php", "score": 1522.657958984375}, {"docid": "admin/cat_list.php", "score": 1514.900634765625}, {"docid": "admin/include/functions_upload.inc.php", "score": 1478.340087890625}, {"docid": "admin/site_update.php", "score": 1459.3582763671875}, {"docid": "include/functions_search.inc.php", "score": 1426.1744384765625}, {"docid": "admin/configuration.php", "score": 1419.093017578125}, {"docid": "admin/include/photos_add_direct_prepare.inc.php", "score": 1380.918212890625}, {"docid": "include/ws_functions/pwg.categories.php", "score": 1363.265380859375}, {"docid": "admin/tags.php", "score": 1345.260498046875}, {"docid": "include/functions.inc.php", "score": 1320.92041015625}], "function_summary": "This code snippet handles category filtering functionality within a batch photo management system. Here's what it does:\n\n**Main Functionality:**\n- Checks if the user has enabled category filtering by looking for the `filter_category_use` POST parameter\n- If category filtering is enabled, it stores the selected category ID from `filter_category` in the session under `bulk_manager_filter['category']`\n- Additionally checks for a recursive filtering option via `filter_category_recursive` POST parameter\n- If recursive filtering is enabled, it sets a flag `category_recursive` to true in the session\n\n**Purpose:**\nThis allows administrators to filter photos in the batch manager by:\n1. **Specific category**: Only show photos from a particular album/category\n2. **Recursive filtering**: Optionally include photos from subcategories as well\n\nThe filtered settings are stored in the PHP session (`$_SESSION['bulk_manager_filter']`) so they persist across page requests. This is part of a larger filtering system that allows administrators to narrow down large collections of photos for batch operations like editing, moving, or deleting multiple images at once.\n\nThe recursive option is particularly useful for hierarchical photo galleries where you might want to process all photos in a category tree rather than just a single level."}
{"instance_id": "sjtu_cve-2023-6831", "hits": [{"docid": "mlflow/utils/uri.py", "score": 3524.37255859375}, {"docid": "mlflow/utils/file_utils.py", "score": 1192.2713623046875}, {"docid": "mlflow/server/handlers.py", "score": 1188.8287353515625}, {"docid": "mlflow/tracking/artifact_utils.py", "score": 1177.813720703125}, {"docid": "mlflow/spark/__init__.py", "score": 1167.4937744140625}, {"docid": "mlflow/pyfunc/__init__.py", "score": 1144.3275146484375}, {"docid": "mlflow/tracking/fluent.py", "score": 1074.4871826171875}, {"docid": "mlflow/tracking/client.py", "score": 1072.73876953125}, {"docid": "mlflow/transformers/__init__.py", "score": 1067.3131103515625}, {"docid": "mlflow/projects/databricks.py", "score": 1041.8101806640625}, {"docid": "mlflow/johnsnowlabs/__init__.py", "score": 1035.6533203125}, {"docid": "mlflow/cli.py", "score": 1025.4771728515625}, {"docid": "mlflow/sagemaker/__init__.py", "score": 998.577392578125}, {"docid": "mlflow/diviner/__init__.py", "score": 994.5416870117188}, {"docid": "mlflow/store/artifact/databricks_artifact_repo.py", "score": 986.3496704101562}, {"docid": "mlflow/models/evaluation/base.py", "score": 977.6453247070312}, {"docid": "mlflow/tracking/_tracking_service/utils.py", "score": 960.614501953125}, {"docid": "mlflow/pytorch/__init__.py", "score": 948.5676879882812}, {"docid": "mlflow/sklearn/__init__.py", "score": 946.7960815429688}, {"docid": "mlflow/store/artifact/dbfs_artifact_repo.py", "score": 946.4442749023438}], "function_summary": "This code snippet defines a security validation function called `validate_path_is_safe()` that prevents path traversal attacks by ensuring a given path is safe to join with a trusted prefix.\n\nThe function performs several security checks:\n\n1. **Fragment/encoding check**: Rejects paths containing `#` or `%23` characters that could be used for URL fragments or encoding attacks\n\n2. **File URI handling**: If the input is a file URI, it converts it to a local path for validation\n\n3. **Path traversal prevention**: The function validates that paths don't contain:\n   - OS-specific path separators other than `/` (from `_OS_ALT_SEPS`)\n   - Parent directory references (`..`) that could navigate outside the intended directory\n   - Absolute paths (checked for both Windows and POSIX systems)\n   - Windows drive letters (paths starting with a drive letter like `C:`)\n\nIf any of these dangerous patterns are detected, the function raises an `MlflowException` with an \"Invalid path\" error message and `INVALID_PARAMETER_VALUE` error code.\n\nThis validation is crucial for preventing malicious users from accessing files outside the intended directory structure through techniques like `../../../etc/passwd` or similar path traversal attacks."}
{"instance_id": "sjtu_cve-2024-0520", "hits": [{"docid": "mlflow/data/http_dataset_source.py", "score": 816.7891845703125}, {"docid": "mlflow/utils/file_utils.py", "score": 513.789794921875}, {"docid": "mlflow/data/artifact_dataset_sources.py", "score": 435.7491149902344}, {"docid": "mlflow/server/handlers.py", "score": 413.46600341796875}, {"docid": "mlflow/recipes/steps/ingest/datasets.py", "score": 401.36358642578125}, {"docid": "mlflow/tensorflow/__init__.py", "score": 379.4851989746094}, {"docid": "mlflow/spark/__init__.py", "score": 375.622802734375}, {"docid": "mlflow/sklearn/__init__.py", "score": 373.63641357421875}, {"docid": "mlflow/data/filesystem_dataset_source.py", "score": 373.02020263671875}, {"docid": "mlflow/transformers/__init__.py", "score": 368.5860900878906}, {"docid": "mlflow/pyfunc/__init__.py", "score": 363.9796142578125}, {"docid": "mlflow/johnsnowlabs/__init__.py", "score": 356.0237121582031}, {"docid": "mlflow/models/evaluation/base.py", "score": 353.3883972167969}, {"docid": "mlflow/tracking/client.py", "score": 349.8367919921875}, {"docid": "mlflow/openai/__init__.py", "score": 349.4473876953125}, {"docid": "mlflow/diviner/__init__.py", "score": 340.472412109375}, {"docid": "mlflow/lightgbm/__init__.py", "score": 330.301513671875}, {"docid": "mlflow/xgboost/__init__.py", "score": 326.7388916015625}, {"docid": "mlflow/data/dataset_source.py", "score": 321.6651916503906}, {"docid": "mlflow/utils/environment.py", "score": 320.7995910644531}], "function_summary": "This code snippet implements the `load` method for the `HTTPDatasetSource` class, which downloads a dataset from an HTTP/HTTPS URL to the local filesystem.\n\n**Key functionality:**\n\n1. **HTTP Request**: Makes a GET request to the dataset URL using `cloud_storage_http_request` with streaming enabled for efficient large file downloads.\n\n2. **Filename Detection**: Determines the local filename through a priority system:\n   - First checks the HTTP `Content-Disposition` header for a filename\n   - Falls back to extracting the basename from the URL path\n   - Uses \"dataset_source\" as a default if neither is available\n\n3. **Destination Handling**: If no destination path is provided, creates a temporary directory using `create_tmp_dir()`.\n\n4. **Streaming Download**: Downloads the file in 1MB chunks to efficiently handle large datasets without loading everything into memory at once.\n\n5. **File Writing**: Writes the downloaded content to the local filesystem in binary mode.\n\nThe method returns the full path to the downloaded file. This approach ensures memory-efficient downloads of potentially large datasets while providing flexible filename resolution and destination handling."}
